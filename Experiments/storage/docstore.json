{"docstore/metadata": {"3d2c8a0f-37ac-42a5-9caa-71dff5e39d0e": {"doc_hash": "507d0a63633633db71dc4f438d93221b7ccf63207a35f48c8d36b0022399f30d"}, "ecd0ce07-01c5-4a6e-92ed-6723bb768e94": {"doc_hash": "7594b67c49ed2faba1fd4dfcb83d711f647838932e184259d5862b9826fc40d5"}, "cb27a2aa-c05e-47f6-a556-36d9b6d2312e": {"doc_hash": "3a2033d1406f987cecadf21318791c448a7442ea6fbb0f1ea4d96e859b0fa850"}, "f4f40fbc-9ae5-4bb4-8f35-7995814bdf7c": {"doc_hash": "1129dabb2cdd0fa1d306e0394cbc3eef9878bbb003dc5ba8095c7d19c4fb83be"}, "e5f697f0-92f8-4726-af63-7f17aa23eb5e": {"doc_hash": "92e9d832aadf07808eb7bc827ac5095c20b13c3cf0a0969accde444642b936c5"}, "74d771c6-4bd4-4881-802d-4dfb08dba1f4": {"doc_hash": "5b7ea00319f894e3b41c10c0c920c9d317da68d0d6fc09a82716bcfb4e64ef91"}, "352a1852-94a5-45a5-8e45-19ebaad20a03": {"doc_hash": "15185de7e497d06b4cd7f60deaaa3cb9ac4fe1ec050827b27d240f06d0a36802"}, "b0eebf5a-49da-4e8c-a6b0-011f5fc68d52": {"doc_hash": "781e895cb55cad3512a8838aa993820de7708bfccbe6b02d05d636ee283e6082"}, "2b94c9e5-5ed2-419d-80f3-b1b2b4be4d65": {"doc_hash": "255b3e33363a0b6052e31a62a958ef4f875a41ed239c5f21b307dc692f68bab2"}, "7f30c2f1-4d6c-40e7-a7a4-3cb539a757fa": {"doc_hash": "e5b1eee40d79579e5a70988969c6bff6bf7a887f7c6740fa8bdf56a0767a7392"}, "27f4c5da-9008-4924-affd-625e627572a2": {"doc_hash": "0165ef0e57e9d616cabcff997dc2b8bf5e281abc906d678c13362e6cd773db20"}, "e8ab80cd-ad86-4c1a-bc16-cc26bdeeac63": {"doc_hash": "dda072d04c49fa1950576f0edf00c438ff2f1414bc3074883a838a927ecc097d"}, "27b495fe-62af-479c-a728-ee8ffc4d7804": {"doc_hash": "f4abb805b16ece9844260428bbdec66d888a1676d9757404c6c8fa7f1698be84"}, "b27e3b26-9601-44ca-b998-461df9ef5b97": {"doc_hash": "101e2d2f02836963e8ac8d6b87fca9d7adbe6d5de9df1b81af0a20b76f85e357"}, "43ca986f-dd78-49f2-9e10-f352ce1429ed": {"doc_hash": "68f0bd4aa7677de9b1a724880b2a90a2f02ee7205c8a23a81cb6719af22eead0"}, "5a1ae0c7-03af-4564-90be-4463489466a9": {"doc_hash": "34de918d4cf1f3b5b347db933d634102aad751381085190aa554d7d9acda1590"}, "68383fc1-7b0c-490f-9b21-be63ca8cbfd5": {"doc_hash": "557f02c2a9a676bb92936af6aa605438d29d2949c43238d5824c3aabcdcf60d5"}, "ab46b749-7e4f-4914-8d52-76bbcf741a80": {"doc_hash": "db796d9670845a142837a93346cd33358974ee3e0901a088dbb876e9831ad39c"}, "160ed4f8-9560-4773-b3e8-587797e4f014": {"doc_hash": "7eb0d86b2759d1df86f20f9f7f75eb32fee9ed3739c7df0d13a971143f90c978"}, "aaa10151-2f8e-4630-bba5-4e29bbfff69a": {"doc_hash": "fa0f10c4a8778991364ee145e92a0a81a4f8520e482825f02a0d3e222ffedc4c"}, "c808a289-8d5f-4b31-865b-3b675370832b": {"doc_hash": "9ce2deaff0c1c7d89d7c6f47eb614aafe1d2fc0041ed6639c76e6f19bf75bf91"}, "55c67ece-467c-452e-aa55-d55e5f3f372d": {"doc_hash": "818d54a30c9ade6932e63bf98003a7de85acfe934875059649e1c1ab60abd44a"}, "8e70d546-75b5-4b32-8621-c882c43e1863": {"doc_hash": "e59935a4abaffaea9987ce73c637f2394dd282e2dcac1d0723e92c930b0e1d3c"}, "ba3e4e31-efee-42dc-a4f9-eb256fc82da5": {"doc_hash": "6e3f7577c249c71b3bc91ce424b037b909374d1837f7f7abdbcf736b2aa2d229"}, "4e0f3450-979b-4926-b7cd-5fd6086a3601": {"doc_hash": "ec9df666625355347feadfcae7f58144bbe90b94f32233a3b1544454c0c04d7f"}, "19cfc674-6188-42c7-a316-f0d58bf59fbc": {"doc_hash": "b153980f4a2b52f4c5e141d54a0018a7510425cbd1591dc7a0f707eee1cd8de6"}, "1b920bde-bb9c-4fcf-8197-61a61f40a543": {"doc_hash": "2a35d53c41ca4e64efcc4d440fcebc97ffe02e6c4ab833b32efa585e0b3adcfc"}, "cf49f5e4-cd71-4f2a-94c3-359aee87ea57": {"doc_hash": "0b940c54b6b95828d97b005c185db6aa39ec78d77e6b5a88511df1e82af4aee5"}, "f97038d0-4e52-4daa-87d1-ef87bdd8a9f7": {"doc_hash": "161d5bdd3a2c89497790b21a675f580374321d7c3b408379244ac6265cb31820"}, "4470bf85-dafb-4c69-a6dd-ac2314aca426": {"doc_hash": "fb427fc5d1b5256fb68c4d718654fe8c6772d3617ca25faff2d9700b302dc6bf"}, "96d8573c-fea6-4a57-90ec-85fd2732f609": {"doc_hash": "41c1ea264385c257867de2469048e80722c9a3d2d82494208a12c1cd671ddc4e"}, "16147dee-3bd6-4531-afc1-596b0e26cc36": {"doc_hash": "3d3ced0f924e544be0d6c38d557922bf32420fe8c75a6deafc90b283aa86b56e"}, "e1643adc-acf1-46ec-8096-100afe0bb5ba": {"doc_hash": "683f2ecfe30a44bc2ab31f8533e99040b3c815ef8f1253f76181754cbee2e0c7"}, "3a6d01bb-d5cc-490f-865d-9d8e91810ee5": {"doc_hash": "36ba008333966b39201412ae314feba29d09efa00525f338088106f4266797f7"}, "ca44a625-e08e-48b9-a719-92d22832a52d": {"doc_hash": "5d64f0b7a73ff190b655eed23a493a2ad7187717018fc0c4b8dda2ff74df06d0"}, "7c52f1e3-183f-42e1-82da-6508d3771f4c": {"doc_hash": "e6647fe99062cfd04276339257b36d1ff23e3dd3842b07922ad0cbcd041ff5be"}, "d0a35079-49fd-4cfd-933e-9523c063c19b": {"doc_hash": "06bd1b15c99bf9f0d16b34491b98038889cd2fd07bb06a415f2762dc12dd44a2"}, "e044d69b-79e4-4c01-ba8d-54dc9b2b5344": {"doc_hash": "1fd43ea49723b0dd368d5c9b15950ad3a3cb9884d31876c8a34451744d8bc108"}, "9fd76565-4838-47a2-b5d9-5456404e90ec": {"doc_hash": "e1d11183d1bc7be150fb7cf253fd3393fc60240acd5fb1db93204337f3bf990d"}, "fabeec9d-2338-40e0-a225-fefcce99d653": {"doc_hash": "a8b7fe7fce6b2f4bdc172e74e40142761a00b6b774553fa64d98babf1a5de981"}, "c8c33d70-c371-4585-a2a8-0976f30df25d": {"doc_hash": "d02763eebb87b481ea58f00321c7629ceeffe70389bf320280dd9175d82c9200"}, "a86f8220-3dab-4199-be3d-8424e3513c4b": {"doc_hash": "1a547870002ffb24da24873179ef050431c922ea159e6c1e48cc78ddad5bf814"}, "8815866e-1bf3-408f-9986-b33971230408": {"doc_hash": "cdb282dea2d32042d20766e9408fa0e009b246215a1ec118852046c2c040654d"}, "84d4b50b-54d0-4996-b404-02ea00246ff0": {"doc_hash": "5063fc10c4f51d6212e1dc18719a380bf6659d78b2a5a641307a8710239ff116"}, "7b6cc3af-2db6-4d6b-9132-b293473ef57a": {"doc_hash": "210271fbd2737673963937e3c8b0eb24ff0a2793d07fd248c8cf0d9c5996f0a8"}, "0b16fabe-45b6-4a2f-9587-8d3de272b731": {"doc_hash": "e1197f99b1a4f3800400e21efc6de0ac5bd40f582daf68f8a0d2a05c6170793d"}, "59d2181e-2ca4-4409-b7c4-7bcf7380dbef": {"doc_hash": "c68fc80657060190eb8dda1ab4336e898d348cd46a19c87b5efc7ecd0bdc6c84"}, "fc2d4e46-1c1f-416c-9713-df4dccd191e1": {"doc_hash": "f661093443eae26b7905c9e40442b241b8e18ae0447768e1fe265e3da823e98d"}, "65693c29-85ed-4324-aaa0-cfe2b8c03255": {"doc_hash": "04d253ba5749f198a2ad58f701ea6bbb82675ab50474ee2fc7046f17ff8797ea"}, "8a7d1e87-f736-43ec-9deb-2e2490717e64": {"doc_hash": "a108564b5d00b7d0f99d5bac19f374876ef345894e5bf901beab86a4cc88153b"}, "ff79215d-d72a-4c0b-b6c9-f8d9987d5964": {"doc_hash": "10f28cf25a848e2e4ff92599e0d4830e5cff074e14fd8b2d6a4d77ffc2c71493"}, "0bf54a36-cbf2-4c30-867a-2ffb9a37763e": {"doc_hash": "43d7a1282af9164a06dcdc03dc127479f86c989db68224d679a95a54b1c7e6ce"}, "baec49e7-18e2-4a80-851c-396e3b97dc16": {"doc_hash": "9bcd80fbafc50c597eb3e58b32aa4eb935f5918a79d85f47faf51b93bbd974bc"}, "90457503-0ddb-4f26-9f67-ad277e4c7133": {"doc_hash": "669704cba7c44148b8651ff331f71508d4cbf8a65d5bad9f538f4a70ff3178c3"}, "f7b40f8b-aed5-4453-8e75-e7e5fcab50af": {"doc_hash": "3210ef683518134821b34c927225e0bef5776f92fc7c2be867b36458088a25ea"}, "58b0cac7-3727-4757-bb04-6afe22f82411": {"doc_hash": "fb0d3e0d830eb6cf5ab5be209cea04b8b51b795f51faad259d0019b7b6793e12"}, "c0b6c019-8fae-456c-9911-cde7953e0564": {"doc_hash": "5d43142d52df1672b5d07580a023e2caa799e2d5f5ed5a5f75c206f951d0ce31"}, "ee9182eb-076e-47e1-a2d8-9189f5a7efa7": {"doc_hash": "2eb3b3260ecf8d87e41a7c22aaf60b515b9818ccb695138faf69c9fce763c6d4"}, "4de6c00c-6f0c-4b2d-8687-f62e1fe794d9": {"doc_hash": "22c25cc9a93cedc2941e297f246be43380c1e2f76f5a8faac702a91dd0d50bf8"}, "f7d41a28-952c-4f6d-a934-097160d61b6e": {"doc_hash": "2fafbcdfe841ec3c59b429bdc07215c86e045a69298f6c5ac7763c8a7fdcc883"}, "2cce1757-e0da-4279-8c8d-6b5b36c660c3": {"doc_hash": "9725fc55bc3df012d8b9045ee090ecd73ebd8edd474d02798c8a5a184d3fff74"}, "dc3cf000-5124-4e1e-ac7a-58aa6c5e3f60": {"doc_hash": "8ee96fdd0366c929ee3852d48c0b1c7512ec4cd8d8b7f6c8afedaa5e25aad678"}, "63a27588-5d14-4fc6-ac18-24e6da22e53d": {"doc_hash": "0ca9255daec67c0cb48ae07bd009cecf5b22eb477586a59c98577f676300591e"}, "60ea04fd-3057-49c1-b1cf-7ba1cbcd3b24": {"doc_hash": "eba0acd1d08a7beea2ce0ffb7397cb8c49a8e44b3f53d05030c6b9c2f7a34109"}, "8f1d7a38-700f-41c9-a716-7831eb41507f": {"doc_hash": "906ec1fefff5e214d71de4b793446917747b3a875a84a4d483d311957db91656"}, "ba81823e-442d-4811-9439-8aba19ef982c": {"doc_hash": "0205000528b983f3e0c80eeeb9fea5fe9248c82deda1b5cc6b8e9dd3c3b31330"}, "758ae0da-c44c-405d-b2b5-a2c010513a86": {"doc_hash": "8a2c69c4eca535c771936ad580183fb08220cf0b4b5474d9b8cf07dc4b7ce356"}, "585d4e5a-127a-41ed-ac59-669e2dcac938": {"doc_hash": "8b0898145c82c03eed472b98c5fef238d196fa69e64de432a4118ff9112207cf"}, "ce13a58e-401f-458b-ac74-19ba21a742fe": {"doc_hash": "5a15939a1859ff6a10d469d0523266d18b19854f5c76194bca42b43e8eeabc3b"}, "29ad55c7-1f0c-4b0e-b915-b79f19e83500": {"doc_hash": "a10211b668ab3f833a68bac60b7007e006775fb23d3ec315ae1488abdd94554d"}, "8df8adcc-526f-4a76-b1df-8083d47a5fa5": {"doc_hash": "95852df4562d68a78c075e399ea6e800635704f6b1315226eecc0dcbc4b62d83"}, "9035192a-eafa-4295-8c82-0f5c57a625d4": {"doc_hash": "d80f04927811422e5c148cd4e4ca0e4d486e9a56d7f7395325bc183596ddae04"}, "ea3be9af-fcff-4e9e-bd60-c87e5255a430": {"doc_hash": "9135c541cdb30e025e94ba22f3dcce385f0394142c7774df2feafb11ddfe1d7d"}, "fe011409-62f4-4075-90e1-a6f359097cc0": {"doc_hash": "32855ce69b13730e2bc81eca944215cef33274e4ef4ec3b10c6ef3ce938cf252"}, "d8a0c528-e81e-4b90-a753-5b272155466e": {"doc_hash": "0b57263bcbb0b8337719f27ad9cd2c3114950bd451f0878cf22af7ec439072c4"}, "e0ff4073-d76b-4ed4-9b21-4b217b40629b": {"doc_hash": "fff1dc39297491eaf65e4068c836ad31310da4abdd1d9901d2169fa98b588b24"}, "b3d068b8-3716-477e-be43-8d8bf2e0fb75": {"doc_hash": "046783d6ceb750d18abeb2f898e025586a7b7bdcdceba6cf4694b198ac2f93cc"}, "baf9c05d-f03f-477e-839f-7925f083da06": {"doc_hash": "3ebffa9e4a7c5dd76c0226905b5bfa9c90e92da02735d4868c761a078f22f8fb"}, "44350c88-35ea-4a41-8837-8dd395621e55": {"doc_hash": "e431e8164c8b41a4f987765a58b3c13edc1a2998aed4ca5862a181c1e9df6ffe"}, "f6734b55-1ac0-4818-8d65-87b2b6dec518": {"doc_hash": "d512bb925880fcbc963729fc199efc892aea2db01693ed184688bcdc92d8becc"}, "1e36866c-4de8-4008-ab5b-d59e31a4847e": {"doc_hash": "053dce3b60eda022d77cdf88483b034128589752e90bddae5698111441d0dcfc"}, "2ac45f33-85b1-4fb9-9650-268e119740ca": {"doc_hash": "e7305108bf9e92d02647f188e54d95c10905018e06c2ef3f16080d5a5811476f"}, "0292f787-6f6e-4b9e-94ef-5d094eef1de0": {"doc_hash": "2ab844da0d2a8954773f9cc720a921c8e54aed00e66ccce78e35dc49bc7a41bb"}, "07b28c11-2247-47cc-a650-3ecfc0336aa3": {"doc_hash": "1763a2ebc7cd5f6f51f17b20553174c75c1473dfea720da7162fa3137584c2a8"}, "a62716c8-d963-4c54-8ca2-47e8da94c68a": {"doc_hash": "b234e646ee51fdf80b9ca7b9f378ed08ecb31b0a3d6b2e175b71809957e10ab1"}, "c37ede87-24dc-4229-ab1e-0e6e4ebe26a9": {"doc_hash": "2020f7211221200a20cbcb07eaac0ae9569518883b351f8ea69d3e832d561291"}, "151b4539-58e2-463a-b19c-d62774b99843": {"doc_hash": "4009a34ec07d14f26b92ba9b55a0540602863d2b00ab5555b74ebe475ec8dcb4"}, "21342a23-043e-411a-8b55-ec4d2d104469": {"doc_hash": "e763808557686132efb0213c2e6d3899fd31a8393d56f94106bddf2ccaa88305"}, "32bd74b9-05cb-46d6-aad3-0d2d928f966f": {"doc_hash": "76a669d6057331f026ff6243078a7d9c8bee09392a55dcf76529d81c72e96014"}, "fe94d808-06e1-4216-b857-d256addfc49f": {"doc_hash": "8976736a98b2a95657fa4e3709d33c1349eecab2d6c19a419eec709b649aca50"}, "6e6f8349-5b27-4d94-a335-42cd4607a322": {"doc_hash": "09e1e401734afcb81ba542fe858bdd0ac7966e875616447a7d6bdb8a954df258"}, "5d4fc4dc-1183-46ff-ad18-e096b41f03d1": {"doc_hash": "e752bc94313480b695d8fa38ee7c3fdc01fd8cb1612d263a1e7c14953c911ea7"}, "58478417-a4bf-4920-b71f-5e17aa048bb4": {"doc_hash": "762ef31d541d39684ea00316b7f2e4957928ce5630c4b57d1ac2b11e0d708b89"}, "47ad960e-4f55-4d14-962c-d5ed62a0518c": {"doc_hash": "212720b8eabdac42f5a57e29b27b112a3256ff387254b7a0ae8948f920c76548"}, "3d301977-6b29-4321-a59a-fd6dd6a71cf6": {"doc_hash": "fdb070de57706a91e970c4f1e46c110ec09918c899535e2d4d5e5bf7992f2ea8"}, "8bf07b7f-175b-44e2-8e43-e13c50c342da": {"doc_hash": "f822eabfdbad11fa1e241f11d3c0d2cba5f10f652966fb389f4403947cd90cfc", "ref_doc_id": "3d2c8a0f-37ac-42a5-9caa-71dff5e39d0e"}, "03608d34-0aca-42f0-9d4e-c205432b5a85": {"doc_hash": "cf9ca5a6d58cb37b96283a68975e859c09570e3cb73f85c7d01e1e40aaa29552", "ref_doc_id": "ecd0ce07-01c5-4a6e-92ed-6723bb768e94"}, "b89aed1e-265d-4c30-acca-af6dd235e08a": {"doc_hash": "ffd314a33c60e6bb6e9f37c166a0ddb002755510196b79a88bb25daac7c2be3e", "ref_doc_id": "cb27a2aa-c05e-47f6-a556-36d9b6d2312e"}, "01c02e24-c85d-4933-a7e1-965cd00087cb": {"doc_hash": "a0439ccac65a7f9788eec7979d46cc63c9f7dd19f801c5c8b2b151d1b937ddd4", "ref_doc_id": "f4f40fbc-9ae5-4bb4-8f35-7995814bdf7c"}, "6fc25349-90e9-4b24-97ac-543e18bb8233": {"doc_hash": "ce00eb2856b789199f9f4c11fe8557775d9c6fd577430a4b0c3ca73aa527df30", "ref_doc_id": "e5f697f0-92f8-4726-af63-7f17aa23eb5e"}, "f22f4f0c-633b-4093-8e7f-e216824be3b7": {"doc_hash": "a29776eda9b3378d54006af11f11790fcfecc5707e30c29c23a6e48e7619796f", "ref_doc_id": "74d771c6-4bd4-4881-802d-4dfb08dba1f4"}, "727ad59f-4664-46ca-a8ef-a6beaeac185e": {"doc_hash": "c68d512020f3213f77f75097335eb082754b088d6fd4e56d75f015b95da11e5f", "ref_doc_id": "352a1852-94a5-45a5-8e45-19ebaad20a03"}, "9652a316-67be-4d37-8dfa-9ff4d0bedc0b": {"doc_hash": "3b4a9f51df3699753285dbf4f9686003f8c872fe1089b3cecd4d9ab64ffcec9a", "ref_doc_id": "b0eebf5a-49da-4e8c-a6b0-011f5fc68d52"}, "56e8fe33-59d1-4922-af7f-ba60c99aa6bb": {"doc_hash": "6971d667d004d08ff4aa3fc565c43870575cb3307248c25562d6aa3f2de4f90b", "ref_doc_id": "2b94c9e5-5ed2-419d-80f3-b1b2b4be4d65"}, "deeb5314-2b6b-46d6-8a42-d01776310e35": {"doc_hash": "4fa712efdb7aaa6df53d0fbfa33792ef5306c053b982b2ca8c140e1270fc101f", "ref_doc_id": "7f30c2f1-4d6c-40e7-a7a4-3cb539a757fa"}, "d983a83d-f900-416f-a34a-52e1fac54752": {"doc_hash": "55823320dbc1afc3f2ad02e61640549ec204974fe094e43df3c08ccdb8c9f844", "ref_doc_id": "27f4c5da-9008-4924-affd-625e627572a2"}, "3f936d54-ac31-4b58-926a-7b5bddadaecd": {"doc_hash": "e0af80afcebe6d3115e7460ae045ed87df16abe0c929226d6d528abf8f817005", "ref_doc_id": "e8ab80cd-ad86-4c1a-bc16-cc26bdeeac63"}, "e2a6a920-83d8-4d0c-a785-d3d31b720d5d": {"doc_hash": "c62080608bad05e9d444b2f7fc747df454d9e40975864fc3c1e53093d14597c9", "ref_doc_id": "27b495fe-62af-479c-a728-ee8ffc4d7804"}, "018fc09f-71c7-467a-b0ee-7b59d11f6c64": {"doc_hash": "84c5cc3c6993c5ff2bd367db9a9c6ff8f2b068030c1ec1cd11c99ef3aba55f11", "ref_doc_id": "b27e3b26-9601-44ca-b998-461df9ef5b97"}, "ca140810-a7e9-4b7e-88aa-b92be0846af2": {"doc_hash": "1801a5ff599afa07b987e3ce4c765761298bd2f50e5a8609845ef7dace115b87", "ref_doc_id": "43ca986f-dd78-49f2-9e10-f352ce1429ed"}, "57076243-6b05-4276-af04-8b5b806c1df8": {"doc_hash": "3ee5a2fb01b6460479173bfeb0caffc00ef8c959659af44efd0dee2566672bfd", "ref_doc_id": "5a1ae0c7-03af-4564-90be-4463489466a9"}, "c0586b0f-c25e-4911-99da-a560e7716ab5": {"doc_hash": "58c90f4be52bf34b30dfa9308077a8b780322480a49d3219a260da0a11692930", "ref_doc_id": "68383fc1-7b0c-490f-9b21-be63ca8cbfd5"}, "6fc92277-af7b-441b-b0ad-22842f9d6bd9": {"doc_hash": "e858d71065fe322a15b78c5b9003b671e697ecb322357aec6cc41c8c60dcd1aa", "ref_doc_id": "ab46b749-7e4f-4914-8d52-76bbcf741a80"}, "91cd0b27-a4d4-44fa-a20e-7483083f8d3c": {"doc_hash": "c1a9fa01e215a40c21bc58ab072a714e6ecb6c9933bcb9b2003a6449f0534cd4", "ref_doc_id": "160ed4f8-9560-4773-b3e8-587797e4f014"}, "02730a74-04e8-4d28-9dcd-968282b9289d": {"doc_hash": "ca7337b0eeccb041d34395c8841fe0cb33ec569bd5c2ab9960a6a145dedf7688", "ref_doc_id": "aaa10151-2f8e-4630-bba5-4e29bbfff69a"}, "b2eeac1b-9632-4718-82b7-f2de1742d5c1": {"doc_hash": "bbed32fdbfe8538b2562829565c2ce402e0a6d0d737fd1a45142c7784b8db193", "ref_doc_id": "c808a289-8d5f-4b31-865b-3b675370832b"}, "fb5d3e5f-c786-4950-a3bd-e5ab96479c5c": {"doc_hash": "a6cc797b186965cfff58b47eef195ea3982b7beb73bc9471bca0f72c4d02dfd9", "ref_doc_id": "55c67ece-467c-452e-aa55-d55e5f3f372d"}, "68d1fa21-d881-4333-8866-faf5772ba677": {"doc_hash": "a779393123a9b06449b8401ce32094e01e5651556645113ed8bdfe0eb0c37302", "ref_doc_id": "8e70d546-75b5-4b32-8621-c882c43e1863"}, "849ddfe1-d12a-4140-a812-10db656996ee": {"doc_hash": "e6b07e071bd6616c82e480634839d05788826f5714eab86536d2140a876cbea9", "ref_doc_id": "ba3e4e31-efee-42dc-a4f9-eb256fc82da5"}, "cd7a9315-3004-48c0-9082-9d97b723106b": {"doc_hash": "da7ef44d810a2979bb748004d50bf0ae28cbd1a16c139d6bbf16e9fb0de3f3b6", "ref_doc_id": "4e0f3450-979b-4926-b7cd-5fd6086a3601"}, "582722b9-dbaf-4cd6-bf13-612a50bf43bc": {"doc_hash": "ec458d35f4c4ee37948977fff25f732afa4d9edf2f820eb2d9b302bd1783c9a5", "ref_doc_id": "19cfc674-6188-42c7-a316-f0d58bf59fbc"}, "c31d7637-4c76-4c65-a2bf-0e4d62b8d8e0": {"doc_hash": "0403b6c1f820ba7c067418057db23feb0cac41049a5aab12fd2873c23af0dedc", "ref_doc_id": "1b920bde-bb9c-4fcf-8197-61a61f40a543"}, "a52962a9-daca-40f4-8a28-a0a69a73db21": {"doc_hash": "e425adc88777bc8c7e16898a1ba52276af3c01a523adeacef053f6efa7c0292d", "ref_doc_id": "cf49f5e4-cd71-4f2a-94c3-359aee87ea57"}, "381be746-5ac0-4e43-a2f5-71e378401ee7": {"doc_hash": "3a21ba5e9b8b492f0f027614e3a18cae826dc7e17be36611145f538302ea1d43", "ref_doc_id": "f97038d0-4e52-4daa-87d1-ef87bdd8a9f7"}, "ff7bdc89-265b-4776-ac1f-604b31eb0c35": {"doc_hash": "53b609b4e63c85ef66fba1d95b9fea91dda971369106ac8dba0f52fcef73aba0", "ref_doc_id": "4470bf85-dafb-4c69-a6dd-ac2314aca426"}, "8489b668-b75c-4fbd-bcb1-262d2c9ef210": {"doc_hash": "cde0b73b3218691f4ff140191c088b8cb039751e4240e0ef20ebec92b0d8c9d4", "ref_doc_id": "96d8573c-fea6-4a57-90ec-85fd2732f609"}, "cccca643-9285-4da1-92e8-f9e1b4fc0ea3": {"doc_hash": "744906eae52c0894d326c487e9736c6046d4b09efa7476d2c943720aad93bf1b", "ref_doc_id": "16147dee-3bd6-4531-afc1-596b0e26cc36"}, "d21196d3-7d14-43fc-9bf6-37d518dde79d": {"doc_hash": "d9fdb9d3c5dfcd519b66f404aa7ebf3ae8b8cf3bf7667b3a2be8e98c1656b644", "ref_doc_id": "e1643adc-acf1-46ec-8096-100afe0bb5ba"}, "09dd23e0-6aab-49a6-aee3-0f025a6ca9db": {"doc_hash": "906bc706b2e17468f429d1c43823d65ec9f6aca241692aa802f49d38c6b7e5e0", "ref_doc_id": "3a6d01bb-d5cc-490f-865d-9d8e91810ee5"}, "78ef169d-3cce-4bae-a2f3-57e1726a6f48": {"doc_hash": "eca6ae5feafe897d948bea0147ecb33cfd61db38328922f5f9e3ec127f1d5764", "ref_doc_id": "ca44a625-e08e-48b9-a719-92d22832a52d"}, "d5c31216-7c32-4fd0-8e8a-c40f6fe5d863": {"doc_hash": "1d544a6483061c13af9fb06fe551b82866bb2070c0ea62dd148b922243a6c7df", "ref_doc_id": "7c52f1e3-183f-42e1-82da-6508d3771f4c"}, "037d4adb-96c0-41a3-82f3-f84c5dc4459b": {"doc_hash": "db6efc44fe9ee2cf3ee8341aed96fc0318dd886959d53dd1be47692247cec776", "ref_doc_id": "d0a35079-49fd-4cfd-933e-9523c063c19b"}, "9a80425e-b935-4e44-afdf-19a4e5dd38ff": {"doc_hash": "b90aea9c8eac4c1116b15a1c371745bf02b002d7efb5206a23a50a7192c95939", "ref_doc_id": "e044d69b-79e4-4c01-ba8d-54dc9b2b5344"}, "d004d05b-f1f4-498b-b607-34807db266c0": {"doc_hash": "76d6312641685db9a6afbaaf72bc19594697870334aea322b70293ba7c23fe4c", "ref_doc_id": "9fd76565-4838-47a2-b5d9-5456404e90ec"}, "147375e1-01ab-4f3b-928c-0dd0cd498848": {"doc_hash": "137aed4f62d60f30c85e8e8128ad5ed11c967ceaf4f66547ea4c8f92ac83ac2f", "ref_doc_id": "fabeec9d-2338-40e0-a225-fefcce99d653"}, "7cc3d689-eb5c-438b-b73b-1b8755c0548c": {"doc_hash": "033fa81e1bbd4e388725abf94f3f98646860d47bb7e112df4df4411c970cc357", "ref_doc_id": "c8c33d70-c371-4585-a2a8-0976f30df25d"}, "cf16469d-c0d5-4931-94fd-98511ea394f9": {"doc_hash": "c8f670d78bb36b2165f05ed6b746879f7b8194c6fd24c98f44f47d7b14c928c0", "ref_doc_id": "a86f8220-3dab-4199-be3d-8424e3513c4b"}, "7ad10305-968c-43e1-abd8-00141bfef357": {"doc_hash": "be80e7f7297833df969033be4025aa8917623d7c29f618a8f861a6130f2bfaf9", "ref_doc_id": "8815866e-1bf3-408f-9986-b33971230408"}, "1654df9d-0b7e-4b3a-88b7-a080f4d538a5": {"doc_hash": "35c037447a0953ea3e6ffe6501f26c4479bf5f9f0bcf48603b4742d2e56ac0fa", "ref_doc_id": "84d4b50b-54d0-4996-b404-02ea00246ff0"}, "3b539da9-ddb6-45c4-9b06-402122f7f301": {"doc_hash": "6a451b7fc875c0963d633976353f5b140a289cfba736c9c0bf2e5d35a3f4a472", "ref_doc_id": "7b6cc3af-2db6-4d6b-9132-b293473ef57a"}, "ed18d5eb-0baa-4af8-96f4-7bc235075cda": {"doc_hash": "3cd827b75b4505c0fd28c9a5c1251fe5ee4ea3ad252b548da0e395db7b27dd3d", "ref_doc_id": "0b16fabe-45b6-4a2f-9587-8d3de272b731"}, "969a087c-090e-4ebb-a8d2-2a994eb01e9f": {"doc_hash": "b25d3dafab418f26fc0a2c59cc26a63001483dba2a59e9b40b613eb06fa3bb30", "ref_doc_id": "59d2181e-2ca4-4409-b7c4-7bcf7380dbef"}, "f86265ef-7e8c-4d4f-aed1-535b66265922": {"doc_hash": "0318ef58bdc4d22f0747a82901406111a8d7b98d554e5d2f54981daeb71a1599", "ref_doc_id": "fc2d4e46-1c1f-416c-9713-df4dccd191e1"}, "3d46d7b7-a148-4e6d-85eb-0ac4bb117fb7": {"doc_hash": "97ef38f0f0a0905396d3c1e5b9c67d7b88b497591d5eec5ceecda0a929b6f553", "ref_doc_id": "65693c29-85ed-4324-aaa0-cfe2b8c03255"}, "f4c154d2-0b9e-4ec2-adde-4e84b1b55aef": {"doc_hash": "8e7a47c1f8b71116178af1cb7438c9eecd58517389369c2ad8f263101258841c", "ref_doc_id": "8a7d1e87-f736-43ec-9deb-2e2490717e64"}, "90983f3d-d224-41f3-bf52-787b85bf483b": {"doc_hash": "b3abf2db415771af437f465b02b7ac9a725a21a4af61568dc9fc570b9548dfdb", "ref_doc_id": "ff79215d-d72a-4c0b-b6c9-f8d9987d5964"}, "81fb0560-3b71-4e9a-b762-6c6850b894ac": {"doc_hash": "0f8dcb8b2bef6f6ebdbb72a5b47ad9d58128499b3d7a54a2a3c74082f85ac3cd", "ref_doc_id": "0bf54a36-cbf2-4c30-867a-2ffb9a37763e"}, "dc004d94-8c54-47dd-8265-4833a83e0a6d": {"doc_hash": "b09254fd0b763018d6e7558f0e0f9585966f60ceb40e94eecb815d714629c89d", "ref_doc_id": "baec49e7-18e2-4a80-851c-396e3b97dc16"}, "4574737b-433c-4561-ac5b-2ed4be5a4c39": {"doc_hash": "2b3114854e8bd93bc56b56cc4a2b0138232594a4ca296fe3adf3ea5ad3e47b73", "ref_doc_id": "90457503-0ddb-4f26-9f67-ad277e4c7133"}, "05ae9233-74b1-4b17-ae8c-f506b6206ce2": {"doc_hash": "ad46f929886af03e2dc0f03f636e901291fb18ed70355ffdc02387def39d4c3b", "ref_doc_id": "f7b40f8b-aed5-4453-8e75-e7e5fcab50af"}, "625d2351-b4cd-40f0-9fd5-32f94ccd25b1": {"doc_hash": "8dfb99cb8dfb603fc77f451348a9d8c5aabf41e99f99815cd5a53a9ded38268f", "ref_doc_id": "58b0cac7-3727-4757-bb04-6afe22f82411"}, "e537c4b7-2f4b-47f6-b7db-6d2d8fca25cc": {"doc_hash": "e994ec96ccc4a1d80c23b18ed5a024719789d1440ff73cc96a09e10bad6ee49e", "ref_doc_id": "c0b6c019-8fae-456c-9911-cde7953e0564"}, "e9a6f0a1-0da7-4c61-9595-7f03cbda8f91": {"doc_hash": "b0b00495d5f7c7fb22060d3ba643a76b997abcae8f2bed704c5b3b152d890358", "ref_doc_id": "ee9182eb-076e-47e1-a2d8-9189f5a7efa7"}, "d0150f0d-6bd7-41a5-8096-5f9b542dbcf2": {"doc_hash": "b34152317423f4f9b117776b99ee40f1b6d29d74b872a304aa4fadcd23459c62", "ref_doc_id": "4de6c00c-6f0c-4b2d-8687-f62e1fe794d9"}, "530967e6-a244-4588-8eea-f351ea4476d0": {"doc_hash": "ffe21abeb7c58d6ef46d64990d02dc25a8ecd3d8895dd6affc145a3713010869", "ref_doc_id": "f7d41a28-952c-4f6d-a934-097160d61b6e"}, "bf2d87e9-75a5-4f6b-90f0-1308373d9b89": {"doc_hash": "3a7382e80c99124e19a0261d84ecb1ba9ca45768fc3c14e67e2964eaa2bdecc6", "ref_doc_id": "2cce1757-e0da-4279-8c8d-6b5b36c660c3"}, "2c3cafed-7b42-46bf-8e58-65339d4f3d39": {"doc_hash": "05487b618ebb239af0f12d87eb4db56327a1de70e4e382a40a9a39a81e3d16ee", "ref_doc_id": "dc3cf000-5124-4e1e-ac7a-58aa6c5e3f60"}, "bdcff47e-8656-4c8f-89d2-7ff10e9b2fe9": {"doc_hash": "d989706d7fd960a72f604c0cb9f6ca3cedf83ae4344621e8aa06f8d48bcaad88", "ref_doc_id": "63a27588-5d14-4fc6-ac18-24e6da22e53d"}, "1859e123-b79f-48d1-9402-5bf2957a0bfd": {"doc_hash": "8826e49152c7dd0b2b0fe3d1cd3861d788fe64de646d0e8a18d22281c17d229c", "ref_doc_id": "60ea04fd-3057-49c1-b1cf-7ba1cbcd3b24"}, "f27522a2-854c-4246-a57e-a899f1b74b72": {"doc_hash": "4857bbf536cab0b926b0ce56d098887c1c2a7ee953b44e3e953faa1150cd90dd", "ref_doc_id": "8f1d7a38-700f-41c9-a716-7831eb41507f"}, "369cc6e1-8726-4be7-9936-a03b83c70f49": {"doc_hash": "ed52b66ed9884919ed4a439f65f36059b8f098b8ee8f46f2307ec14ef1cd8523", "ref_doc_id": "ba81823e-442d-4811-9439-8aba19ef982c"}, "006f567d-140b-4b42-b80e-19d13d626cf1": {"doc_hash": "124efa772664ccf3ccbeac2e61baf439a6d482452347d65b10e0798dbaa554fb", "ref_doc_id": "758ae0da-c44c-405d-b2b5-a2c010513a86"}, "73730333-e2c6-49f6-9622-d959a8827487": {"doc_hash": "bfd1758c3fdc4295641f44c3803bbdf8930ee2f9ac336bf1e1c8a187deb78e05", "ref_doc_id": "585d4e5a-127a-41ed-ac59-669e2dcac938"}, "48d9505d-5e1b-490b-ac23-960878aff608": {"doc_hash": "ac66377157eedf21c634d45fc5eb380c064b565c652d23e3c3e4abe31524bf41", "ref_doc_id": "ce13a58e-401f-458b-ac74-19ba21a742fe"}, "aad75516-a562-4b2a-bfad-958b2909599a": {"doc_hash": "ff23b609bcbcb81a377ed554a60ab80285423669891d95d16c0b3f67867ba70c", "ref_doc_id": "29ad55c7-1f0c-4b0e-b915-b79f19e83500"}, "304578a0-98bb-4f08-8e37-a010c5e7fbc7": {"doc_hash": "cb7f664abc605f961d64cd62ada6ec35611404bb86bc2ddf2da89f3328092647", "ref_doc_id": "8df8adcc-526f-4a76-b1df-8083d47a5fa5"}, "494707a4-9bf9-4808-9bed-abd1e398de6d": {"doc_hash": "18e491907ebf4d27242ef14a5a4ddd7b42a5b532e13c74ef6e90ec212505d2dd", "ref_doc_id": "9035192a-eafa-4295-8c82-0f5c57a625d4"}, "4e955642-d956-43c9-a52a-5d20243a1b00": {"doc_hash": "6fd1532d6c66e7c729945991f88375f4fe8a6b1ccf45c46aed82f883e7723a8b", "ref_doc_id": "ea3be9af-fcff-4e9e-bd60-c87e5255a430"}, "2849e971-65ad-49f4-854b-8827ad8ccb0a": {"doc_hash": "0dbc792ef014a0b668c97b543a2409dbb3c951ff6e850450cb0c3e41a56fb472", "ref_doc_id": "fe011409-62f4-4075-90e1-a6f359097cc0"}, "5c7004ab-6969-4aca-8f5d-492318504e1b": {"doc_hash": "a152d1fb77294bc3b8821365e07afc011a34f5db145b5552fbc67c849a61367e", "ref_doc_id": "d8a0c528-e81e-4b90-a753-5b272155466e"}, "a125adbd-bc5f-449e-a81f-f90a3e375657": {"doc_hash": "2ab8432c078401259d97b937d7f7528acbcd425ff82cfb72e687d54f0d70beb8", "ref_doc_id": "e0ff4073-d76b-4ed4-9b21-4b217b40629b"}, "377bed8a-4ff6-405d-b93d-6775e4798460": {"doc_hash": "e6993748d889eaa21e2ce942cb1d435deda7882511566c06e5c7ee2879b692ae", "ref_doc_id": "b3d068b8-3716-477e-be43-8d8bf2e0fb75"}, "a243643c-d711-4159-a13d-0fd5344a682c": {"doc_hash": "27aba644016c442d4572462ee60fdc2930e071b11af501f749c9b6aee5e5eb07", "ref_doc_id": "baf9c05d-f03f-477e-839f-7925f083da06"}, "ba45be37-f19a-413d-b85c-370232949bca": {"doc_hash": "e08d2bfe22bb8a6ef1f639e9a0813a98be849020fe988e5e26f02f6fcecacd88", "ref_doc_id": "44350c88-35ea-4a41-8837-8dd395621e55"}, "0c1ccf39-19d0-4ed0-bec0-a07af63c3c74": {"doc_hash": "3acaa37292b6e96de9199fa6d95b56425359591d75e1efd7e759861e697edb71", "ref_doc_id": "f6734b55-1ac0-4818-8d65-87b2b6dec518"}, "9e4b0672-1dfa-439a-8f9e-f7063e34b2ea": {"doc_hash": "436208c33d0e74dcc355e07dfc8c5c0d7d26bca89b0054c5edc2cabf752f769b", "ref_doc_id": "1e36866c-4de8-4008-ab5b-d59e31a4847e"}, "b94d7c7c-7104-42eb-9a5f-b2cc88020d17": {"doc_hash": "79fcdb3d84fd348c5606b0b7a26ec7c5a9d0542edc9cfa3a9e34454168771aef", "ref_doc_id": "2ac45f33-85b1-4fb9-9650-268e119740ca"}, "dc904998-04b4-4753-a2f6-915e78a5b1d0": {"doc_hash": "74b78a37cce5bf1d6bfdba76afd6a97e85c9e30c463512017bd68c1c4a27fbd3", "ref_doc_id": "0292f787-6f6e-4b9e-94ef-5d094eef1de0"}, "e06eced7-9d3c-4d3a-8000-8f8273e457ae": {"doc_hash": "5430b45e0d128b4c386b5699d1a966d01723a5e3c5017ca756326eb1d476b3de", "ref_doc_id": "07b28c11-2247-47cc-a650-3ecfc0336aa3"}, "4b02121e-9475-42bb-b950-8aa5d54387da": {"doc_hash": "9e120dd275458609716146db49a95bbae9d63fde842d5462e97bf3d5f206c049", "ref_doc_id": "a62716c8-d963-4c54-8ca2-47e8da94c68a"}, "e66940af-a119-439c-a472-6f0bc75927e3": {"doc_hash": "3381c4037e0045f89d52ebad648a8c19029152e2f07c49813ae8efe71859a8fb", "ref_doc_id": "c37ede87-24dc-4229-ab1e-0e6e4ebe26a9"}, "673527ac-7a26-44cb-b26e-f04a24eda70f": {"doc_hash": "f92f162b2224947d2ffaf3643cea60ae134ebbe321e0d31606e9b4297d72ff15", "ref_doc_id": "151b4539-58e2-463a-b19c-d62774b99843"}, "9caceba4-9165-416e-ad42-20a50636591d": {"doc_hash": "a3f958480d4531de414ccc9b1f480b7d748f37e3932034594079e599ca32c969", "ref_doc_id": "21342a23-043e-411a-8b55-ec4d2d104469"}, "8cbd6366-e00b-4b7d-ad81-dbc9b97596f4": {"doc_hash": "1680dc7aa63ef88dc34588a6d93d6c52bd5f655d57d459a19941a955dad9f4aa", "ref_doc_id": "32bd74b9-05cb-46d6-aad3-0d2d928f966f"}, "8d54994c-e013-4cbe-a559-f1c4783b2de1": {"doc_hash": "835970a4f39cc1921298e2a0f3260175e0ca564af2eaf85928e29f7064fefe12", "ref_doc_id": "fe94d808-06e1-4216-b857-d256addfc49f"}, "798703ea-95b7-4d6d-aca2-dbbd981500d2": {"doc_hash": "61cb4747bd4634f2a5253acdfdadf12d99072edc81db2be365a25927900e361f", "ref_doc_id": "6e6f8349-5b27-4d94-a335-42cd4607a322"}, "05ffd11f-1436-4949-8125-706a2683aa57": {"doc_hash": "0d7a7de049c2bdba5aad3ea1c2cc43af081bbc2e9bed48fb6c0801cda9d339a8", "ref_doc_id": "5d4fc4dc-1183-46ff-ad18-e096b41f03d1"}, "627ab32c-8325-4ab5-8252-6beb113129a2": {"doc_hash": "d42cbbd5125754ece8bb0ca91175abe62e794b8f3d5f14854c436d9fbd0b8d16", "ref_doc_id": "58478417-a4bf-4920-b71f-5e17aa048bb4"}, "ca73d322-f41e-47c9-99c2-f8aa6952c39c": {"doc_hash": "2252dd71a35c78c2e9166128a90e0324796af81d85f4ed1a8579d0818030a72c", "ref_doc_id": "47ad960e-4f55-4d14-962c-d5ed62a0518c"}, "a9dae530-63e8-4a45-9d35-00aa0bf964e9": {"doc_hash": "484ca9fd88de2b8da72514b77a41347b85163d21260e89f6b9c6acb8b1f5a082", "ref_doc_id": "3d301977-6b29-4321-a59a-fd6dd6a71cf6"}}, "docstore/data": {"8bf07b7f-175b-44e2-8e43-e13c50c342da": {"__data__": {"id_": "8bf07b7f-175b-44e2-8e43-e13c50c342da", "embedding": null, "metadata": {"page_label": "1", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3d2c8a0f-37ac-42a5-9caa-71dff5e39d0e", "node_type": "4", "metadata": {"page_label": "1", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "507d0a63633633db71dc4f438d93221b7ccf63207a35f48c8d36b0022399f30d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1  \n \nDIGITAL NOTES \nON \nMachine Learning \n(R20D5803) \nM.Tech., II YEAR \u2013 I SEM \n(2021-2022) \n \n \n \nDEPARTMENT OF COMPUTER SCIENCE AND \nENGINEERING \n \nMALLA REDDY COLLEGE OF ENGINEERING & TECHNOLOGY \n(Autonomous Institution \u2013 UGC, Govt. of India) \n(Affiliated to JNTUH, Hyderabad, Approved by AICTE - Accredited by NBA & NAAC \u2013 \u2018A\u2019 Grade - ISO 9001:2015 Certified) \nMaisammaguda, Dhulapally (Post Via. Hakimpet), Secunderabad \u2013 500100, Telangana State, INDIA.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 459, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "03608d34-0aca-42f0-9d4e-c205432b5a85": {"__data__": {"id_": "03608d34-0aca-42f0-9d4e-c205432b5a85", "embedding": null, "metadata": {"page_label": "2", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ecd0ce07-01c5-4a6e-92ed-6723bb768e94", "node_type": "4", "metadata": {"page_label": "2", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "7594b67c49ed2faba1fd4dfcb83d711f647838932e184259d5862b9826fc40d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "2  \nMALLA REDDY COLLEGE OF ENGINEERING & TECHNOLOGY \nDEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING \nSYLLABUS  \nII Year M. Tech. CSE \u2013 I Sem L/T/P/ C \n3 / - / -  3 \n(R20D5803) Machine Learning \nObjectives: \n1. This course explains machine learning techniques such as decision tree learning, \nBayesian learning etc. \n2. To understand computational learning theory. \n3. To study the pattern comparison techniques. \n \nUNIT - I \nIntroduction Well -posed learning problems, designing a learning  system Perspectives and issues  in \nmachine learning Concept learning and the general to specific ordering Introduction,A concept learning  \ntask, concept learning as search, Find -S: Finding a Maximally Specific Hypothes is, Version Spaces and  \nthe Candidate Elimination algorithm, Remarks on  Version Spaces and Candidate Elimination, Inductive  \nBias. Decision Tree Learning-Introduction, Decision Tree Representation, Appropriate Problems for  \nDecision Tree Learning, The Basic D ecision Tree Learning Algorithm Hypothesis Space  Search in \nDecision Tree Learning, Inductive Bias in Decision Tree Learning, Issues in Decision Tree Learning. \n \nUNIT - II \nArtificial Neural Networks -Introduction, Neural Network  Representation, Appropriate Problems for  \nNeural Network Learning, Perceptions, Multilayer Networks and the Back propagation Algorithm. \nDiscussion on the Back Propagation Algorithm, An illustrative Example: Face Recognition \n \nUNIT - III \nBayesian learning-Introduction, Byes Theorem, Bayes Theorem and Concept Learning Maximum \nLikelihood and Least Squared Error Hypotheses, Maximum Likelihood Hypotheses for Predicting \nProbabilities, Minimum Description Length Principle, Bayes Optimal Classifier, Gibs Algorithm, Na\u00efve  \nBayes Classifier, An Example: Learning to Classify Text, Bayesian Belief Networks, EM Algorithm. \nInstance-Based Learning-Introduction, k-Nearest Neighbor Learning, Locally Weighted Regression, \nRadial Basis Functions, Case-Based Reasoning, Remarks on Lazy and Eager Learning. \n \nUNIT -IV \nPattern Comparison Techniques-Temporal patterns, Dynamic Time Warping Methods,Clustering, \nIntroduction to clustering, K-means clustering, K-Mode Clustering. Codebook Generation, Vector \nQuantization. \n \nUNIT - V \nGenetic Algorithms: Different search m ethods for induction  - Explanation-based Learning: using prior  \nknowledge to reduce sample complexity. Dimensionality reduction: feature selection, principal \ncomponent analysis, linear discriminate analysis, factor analysis, independent component analysis, \nmultidimensional scaling, and manifold learning.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2589, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b89aed1e-265d-4c30-acca-af6dd235e08a": {"__data__": {"id_": "b89aed1e-265d-4c30-acca-af6dd235e08a", "embedding": null, "metadata": {"page_label": "3", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb27a2aa-c05e-47f6-a556-36d9b6d2312e", "node_type": "4", "metadata": {"page_label": "3", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "3a2033d1406f987cecadf21318791c448a7442ea6fbb0f1ea4d96e859b0fa850", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "3  \n \n \n \nTextbooks: \n1. Machine Learning \u2013 Tom M. Mitchell, -MGH \n2. Fundamentals of Speech Recognition By Lawrence Rabiner and Biing \u2013 Hwang \nJuang .Ethem Alpaydin, \u201dIntroduction to Machine Learning\u201d, MIT Press, \nPrentice Hall of India, 3 rd Edition2014. \n3.  Mehryar Mohri, Afshin Rostamizadeh, Ameet Talwalkar \u201d Foundations of Machine \nLearning\u201d,MIT Press,2012 \nReferences: \n1. Machine Learning : An Algorithmic Perspective, Stephen Marsland, Taylor & Francis .", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 465, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "01c02e24-c85d-4933-a7e1-965cd00087cb": {"__data__": {"id_": "01c02e24-c85d-4933-a7e1-965cd00087cb", "embedding": null, "metadata": {"page_label": "4", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4f40fbc-9ae5-4bb4-8f35-7995814bdf7c", "node_type": "4", "metadata": {"page_label": "4", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "1129dabb2cdd0fa1d306e0394cbc3eef9878bbb003dc5ba8095c7d19c4fb83be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "4  \n \n \nINDEX \n \n \nS. No \n \nUnit \n \nTopic \n \nPage no \n \n1 I Introduction Well-posed learning problems 1 \n2 I A concept learning task, concept learning as search 6 \n3 I Find-S: Finding a Maximally Specific Hypothesis 15 \n4 I Version Spaces and the Candidate Elimination \nalgorithm \n17 \n5 I Remarks on Version Spaces and Candidate \nElimination, Inductive Bias \n21 \n6 I Decision Tree Learning-Introduction, Decision Tree \nRepresentation \n22 \n7 I Appropriate Problems for Decision Tree Learning 23 \n8 I Decision Tree Learning Algorithm, Issues in Decision \nTree Learning. 25 \n \n \n \n \n \n \nS. No \n \nUnit \n \nTopic \n \nPage no \n \n1 II Artificial Neural Networks -Introduction, \nNeural Network Representation \n26 \n \n2 II  \nAppropriate Problems for Neural Network \nLearning \n \n28 \n3 II Perceptions, Multilayer Networks & the Back \npropagation Algorithm. \n29 \n4 II Discussion on the Back Propagation Algorithm 34 \nMALLA REDDY COLLEGE OF ENGINEERING & TECHNOLOGY \nDEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 997, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fc25349-90e9-4b24-97ac-543e18bb8233": {"__data__": {"id_": "6fc25349-90e9-4b24-97ac-543e18bb8233", "embedding": null, "metadata": {"page_label": "5", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e5f697f0-92f8-4726-af63-7f17aa23eb5e", "node_type": "4", "metadata": {"page_label": "5", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "92e9d832aadf07808eb7bc827ac5095c20b13c3cf0a0969accde444642b936c5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "5  \n \n \n \n \n \n \n \n \n \n \nS. No \n \nUnit \n \nTopic \n \nPage no \n1 III Bayesian learning-Introduction ,Bayes \nTheorem & Concept Learning maximum \n36 \n2 III Maximum Likelihood Hypotheses for Predicting \nProbabilities(MAP) \n42 \n3 III Gibs Algorithm, Na\u00efve Bayes Classifier 46 \n4 III Minimum Description Length Principle , Bayes \nOptimal Classifier \n47 \n \n5 III An Example: Learning to Classify Text, Bayesian \nBelief Networks \n \n50 \n \n6 III EM Algorithm. Instance-Based Learning-Introduction 51 \n7 III k-Nearest Neighbor Learning, Locally Weighted \nRegression 55 \n8 III Radial Basis Functions, Case-Based Reasoning 56 \n9 III Remarks on Lazy and Eager Learning. 57 \nMALLA REDDY COLLEGE OF ENGINEERING & TECHNOLOGY \nDEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 752, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f22f4f0c-633b-4093-8e7f-e216824be3b7": {"__data__": {"id_": "f22f4f0c-633b-4093-8e7f-e216824be3b7", "embedding": null, "metadata": {"page_label": "6", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "74d771c6-4bd4-4881-802d-4dfb08dba1f4", "node_type": "4", "metadata": {"page_label": "6", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "5b7ea00319f894e3b41c10c0c920c9d317da68d0d6fc09a82716bcfb4e64ef91", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "6  \n \n \n \nS. No \n \nUnit Topic Page no \n1 IV Pattern Comparison Techniques-Temporal patterns, 58 \n \n2 IV  \nDynamic Time Warping Methods \n \n61 \n3 IV Clustering 67 \n5 IV K-means clustering 69 \n6 IV K-Mode Clustering. Codebook Generation 70 \n7 IV Vector Quantization. 76 \n \n \n \n \n \n \n \nS. No \n \nUnit \n \nTopic \n \nPage no \n \n1 V Genetic Algorithms: Different search methods \nfor induction \n \n78 \n \n2 V  \nExplanation-based Learning: using prior knowledge to \nreduce sample complexity. \n \n79 \n \n3 V Dimensionality reduction \n \n82 \n \n4 V  \nPrincipal component analysis \n \n84 \n \n5 \n \nV \n \nLinear discriminate analysis, factor analysis, \n \n85 \n \n6 V \nIndependent component analysis: multidimensional \nscaling, and manifold learning. \n \n86 \nMALLA REDDY COLLEGE OF ENGINEERING & TECHNOLOGY \nDEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 824, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "727ad59f-4664-46ca-a8ef-a6beaeac185e": {"__data__": {"id_": "727ad59f-4664-46ca-a8ef-a6beaeac185e", "embedding": null, "metadata": {"page_label": "7", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "352a1852-94a5-45a5-8e45-19ebaad20a03", "node_type": "4", "metadata": {"page_label": "7", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "15185de7e497d06b4cd7f60deaaa3cb9ac4fe1ec050827b27d240f06d0a36802", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n1 \n \n \n \n \nUNIT-I \n \n \nMachine Learning \nis the  field of study that gives  computers the capability to learn without  \nbeing explicitly programmed. ML is one of the most exciting technologies  \nthat one would have ever  come across. As it is  evident from the name,  it \ngives the computer that makes it more similar to humans: The ability to  \nlearn. Machine learning is actively being used today, perhaps in many more  \nplaces than one would expect. \n \nMachine Learning is broadly categorized under the following headings: \n \n \nMachine learning evolved from left to right as shown in the above diagram. \n\u2022 Initially, researchers started out with Supervised Learning. This is the \ncase of housing price prediction discussed earlier \n. \u2022 This was followed by unsupervised learning, where the machine is made \nto learn on its own without any supervision. \n\u2022 Scientists discovered further that it may be a good idea to reward the  \nmachine when it does the job the expected way and there came the \nReinforcement Learning. \n\u2022 Very soon, the data that is available these days has become so humongous  \nthat the conventional techniques developed so far failed to analyse the big  \ndata and provide us the predictions.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1238, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9652a316-67be-4d37-8dfa-9ff4d0bedc0b": {"__data__": {"id_": "9652a316-67be-4d37-8dfa-9ff4d0bedc0b", "embedding": null, "metadata": {"page_label": "8", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b0eebf5a-49da-4e8c-a6b0-011f5fc68d52", "node_type": "4", "metadata": {"page_label": "8", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "781e895cb55cad3512a8838aa993820de7708bfccbe6b02d05d636ee283e6082", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n2 \n \n \n \n \n \n \n \n\u2022 Thus, came the deep learning where the human brain is simulated in the  \nArtificial Neural Networks (ANN) created in our binary computers. \n\u2022 The machine now learns on its own using the high computing power and  \nhuge memory resources that are available today. \n\u2022 It is now observed that Deep Learning has solved many of the previously  \nunsolvable problems. \n\u2022 The technique is now further advanced by giving incentives to Deep  \nLearning networks as awards and there finally comes Deep Reinforcement  \nLearning. \nLet us now study each of these categories in more details \nSupervised Learning: \nSupervised learning is analogous to training a child to walk. You will hold \nthe child\u2019s hand, show him how to take his foot forward, walk yourself for a  \ndemonstration and so on, until the child learns to walk on his own. \nRegression: \nSimilarly, in the case of supervised learning, you give concrete known \nexamples to the computer. You say that for given feature value x1 the output  \nis y1, for x2 it is y2, for x3 it is y3, and so on. Based on this data, you let the  \ncomputer figure out an empirical relationship between x and y. Once the  \nmachine is trained in this way with a sufficient number of data points, now  \nyou would ask the machi ne to predict Y for a given X. Assuming that you  \nknow the real value of Y for this given X, you will be able to deduce whether  \nthe machine\u2019s prediction is correct. Thus, you will test whether the machine  \nhas learned by using the known test data. Once you are satisfied that the  \nmachine is able to do the predictions with a desired level of accuracy (say 80  \nto 90%) you can stop further training the machine. Now, you can safely use  \nthe machine to do the predictions on unknown data points, or ask the \nmachine to predict Y for a given X for which you do not know the real value  \nof Y. This training comes under the regression that we talked about earlier.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1959, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "56e8fe33-59d1-4922-af7f-ba60c99aa6bb": {"__data__": {"id_": "56e8fe33-59d1-4922-af7f-ba60c99aa6bb", "embedding": null, "metadata": {"page_label": "9", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b94c9e5-5ed2-419d-80f3-b1b2b4be4d65", "node_type": "4", "metadata": {"page_label": "9", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "255b3e33363a0b6052e31a62a958ef4f875a41ed239c5f21b307dc692f68bab2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n3 \n \n \n \nClassification: \nYou may also use machine learning techniques for classification problems. In \nclassification problems, you classify objects of similar nature into a single  \ngroup. For example, in a set of 100 students say, you may like to group them  \ninto three groups based on their heights - short, medium and long. Measuring \nthe height of each student, you will place them in a proper group. Now, when  \na new student comes in, you will put him in an appropriate group by \nmeasuring his height. By following the principles in regression training, you  \nwill train the machine  to classify a student based on his feature \u2013 the height. \nWhen the machine learns how the groups are formed, it will be able to  \nclassify any unknown new student correctly. Once again, you would use the  \ntest data to verify that the machine has learned your technique of \nclassification before putting the developed model in production. Supervised  \nLearning is where the AI really began its journey. This technique was \napplied successfully in several cases. You have used this model while doing  \nthe hand-written recognition on your machine. Several algorithms have been  \ndeveloped for supervised learning. You will learn about them in the \nfollowing chapters. \nUnsupervised Learning: \nIn unsupervised learning, we do not specify a target variable to the machine,  \nrather we ask  machine \u201cWhat can you tell me about X?\u201d. More specifically,  \nwe may ask questions such as given a huge data set X, \u201cWhat are the five \nbest groups we can make out of X?\u201d or \u201cWhat features occur together most  \nfrequently in X?\u201d. To arrive at the answers to such questions, you can \nunderstand that the number of data points that the machine would require to  \ndeduce a strategy would be very large. In case of supervised learning, the  \nmachine can be trained with even about few thousands of data points. \nHowever, in case of unsupervised learning, the number of data points that is  \nreasonably accepted for learning starts in a few millions. These days, the data  \nis generally abundantly available. The data ideally requires curating. \nHowever, the amount of data that is cont inuously flowing in a social area  \nnetwork, in most cases data curation is an impossible task. The following  \nfigure shows the boundary between the yellow and red dots as determined by  \nunsupervised machine learning. You  can see it clearly  that the machine", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2448, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "deeb5314-2b6b-46d6-8a42-d01776310e35": {"__data__": {"id_": "deeb5314-2b6b-46d6-8a42-d01776310e35", "embedding": null, "metadata": {"page_label": "10", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7f30c2f1-4d6c-40e7-a7a4-3cb539a757fa", "node_type": "4", "metadata": {"page_label": "10", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "e5b1eee40d79579e5a70988969c6bff6bf7a887f7c6740fa8bdf56a0767a7392", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n4 \n \n \n \nwould be able to determine the class of each of the black dots with a fairly  \ngood accuracy. \n \n \nReinforcement Learning: \nConsider training a pet dog, we train our pet to bring a ball to us. We throw  \nthe ball at a certain distance and ask the dog to fetch it back to us. Every time  \nthe dog does this right, we reward the dog. Slowly, the dog learns that doing  \nthe job rightly gives him a reward and then the dog starts doing the job right  \nway every time in future. Exactly, this concept is applied in \u201cReinforcement\u201d  \ntype of learning. The technique was initially developed for machines to play  \ngames. The machine is given an algorithm to analyse all possible moves at  \neach stage of the game. The machine may select one of the moves at random.  \nIf the move is right, the machine is rewarded, otherwise it may be penalized.  \nSlowly, the machine will start differentiating between right and wrong moves  \nand after several iterations would learn to solve the game puzzle with a better  \naccuracy. The accuracy of winning the game would improve as the machine  \nplays more and more games. \nThe entire process may be depicted in the following diagram:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1198, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d983a83d-f900-416f-a34a-52e1fac54752": {"__data__": {"id_": "d983a83d-f900-416f-a34a-52e1fac54752", "embedding": null, "metadata": {"page_label": "11", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27f4c5da-9008-4924-affd-625e627572a2", "node_type": "4", "metadata": {"page_label": "11", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "0165ef0e57e9d616cabcff997dc2b8bf5e281abc906d678c13362e6cd773db20", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n5 \n \n \n \n \n \n \nDeep Learning: \nThe deep learning is a model based on Artificial Neural Networks (ANN),  \nmore specifically Convolutional Neural Networks (CNN)s. There are several  \narchitectures used in deep learning such as deep neural n etworks, deep belief  \nnetworks, recurrent neural networks, and convolutional neural networks. \nThese networks have been successfully applied in solving the problems of  \ncomputer vision, speech recognition, natural language processing, \nbioinformatics, drug des ign, medical image analysis, and games. There are  \nseveral other fields in which deep learning is proactively applied. The deep  \nlearning requires huge processing power and humongous data, which is \ngenerally easily available these days. We will talk about deep learning more  \nin detail in the coming chapters. \nDeep Reinforcement Learning: \nThe Deep Reinforcement Learning (DRL) combines the techniques of both  \ndeep and reinforcement learning. The reinforcement learning algorithms like  \nQ learning are now combined with deep learning to create a powerful DRL  \nmodel. The technique has been with a great success in the fields of robotics,  \nvideo games, finance and healthcare. Many previously unsolvable problems  \nare now solved by creating DRL models. There is lots of research going on \nin this area and this is very actively pursued by the industries. So far, you", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1403, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3f936d54-ac31-4b58-926a-7b5bddadaecd": {"__data__": {"id_": "3f936d54-ac31-4b58-926a-7b5bddadaecd", "embedding": null, "metadata": {"page_label": "12", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e8ab80cd-ad86-4c1a-bc16-cc26bdeeac63", "node_type": "4", "metadata": {"page_label": "12", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "dda072d04c49fa1950576f0edf00c438ff2f1414bc3074883a838a927ecc097d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n6 \n \n \n \nhave got a brief introduction to various machine learning models, now let us  \nexplore slightly deeper into various algorithms that are available under these  \nmodels. \nWell posed learning problems: \n \nA computer program is said to learn from experience E in context to some  \ntask T and some performance measure P, if its performance on T, as was  \nmeasured by P, upgrades with experience E. \nAny problem can be segregated as well -posed learning problem if it has three  \ntraits \u2013 \n\u2022 Task \n\u2022 Performance Measure \n\u2022 Experience \nCertain example that efficiently defines the well-posed learning problems \nare: \n \n1. To better filter emails as spam or not \n\u2022 Task \u2013 Classifying emails as spam or not \n\u2022 Performance Measure \u2013 The fraction of emails accurately classified as spam \nor not spam \n\u2022 Experience \u2013 Observing you label emails as spam or not spam \n2. A checkers learning problem \n\u2022 Task \u2013 Playing checkers game \n\u2022 Performance Measure \u2013 percent of games won against opposer \n\u2022 Experience \u2013 playing implementation games against itself \n3. Handwriting Recognition Problem \n\u2022 Task \u2013 Acknowledging handwritten words within portrayal \n\u2022 Performance Measure \u2013 percent of words accurately classified \n\u2022 Experience \u2013 a directory of handwritten words with given classifications \n4. A Robot Driving Problem \n\u2022 Task \u2013 driving on public four-lane highways using sight scanners \n\u2022 Performance Measure \u2013 average distance progressed before a fallacy \n\u2022 Experience \u2013 order of images and steering instructions noted down while \nobserving a human driver \n5. Fruit Prediction Problem", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1602, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e2a6a920-83d8-4d0c-a785-d3d31b720d5d": {"__data__": {"id_": "e2a6a920-83d8-4d0c-a785-d3d31b720d5d", "embedding": null, "metadata": {"page_label": "13", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "27b495fe-62af-479c-a728-ee8ffc4d7804", "node_type": "4", "metadata": {"page_label": "13", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "f4abb805b16ece9844260428bbdec66d888a1676d9757404c6c8fa7f1698be84", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n7 \n \n \n \n\u2022 Task \u2013 forecasting different fruits for recognition \n\u2022 Performance Measure \u2013 able to predict maximum variety of fruits \n\u2022 Experience \u2013 training machine with the largest datasets of fruits images \n \n6. Face Recognition Problem \n\u2022 Task \u2013 predicting different types of faces \n\u2022 Performance Measure \u2013 able to predict maximum types of faces \n\u2022 Experience \u2013 training machine with maximum amount of datasets of \ndifferent face images \n7. Automatic Translation of documents \n\u2022 Task \u2013 translating one type of language used in a document to other language \n\u2022 Performance Measure \u2013 able to convert one language to other efficiently \n\u2022 Experience \u2013 training machine with a large dataset of different types of \nlanguages \n \nDesign of a learning system: \n \nJust now we looked into the learning process and also understood the goal  \nof the learning. When we want to design a learning system that follows the \nlearning process, we need to consider a few design choices. The design  \nchoices will be to decide the following key components: \n1. Type of training experience \n2. Choosing the Target Function \n3. Choosing a representation for the Target Function \n4. Choosing an approximation algorithm for the Target Function \n5. The final Design \nWe will look into the game - checkers learning problem and apply the above \ndesign choices. For a checkers learning problem, the three elements will be, \n\u2022 Task T: To play checkers \n\u2022 Performance measure P: Total present of the game won in the tournament. \n\u2022 Training experience E: A set of games played against itself. \n \nType of training experience: \nDuring the  design of the checker's learning system, the type of  training \nexperience available for a learning system will have a significant effect on \nthe success or failure of the learning.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1811, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "018fc09f-71c7-467a-b0ee-7b59d11f6c64": {"__data__": {"id_": "018fc09f-71c7-467a-b0ee-7b59d11f6c64", "embedding": null, "metadata": {"page_label": "14", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b27e3b26-9601-44ca-b998-461df9ef5b97", "node_type": "4", "metadata": {"page_label": "14", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "101e2d2f02836963e8ac8d6b87fca9d7adbe6d5de9df1b81af0a20b76f85e357", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n8 \n \n \n \nDirect or Indirect training experience: \nIn the case of direct training experience, an individual board states and \ncorrect move for each board state are given. In case of indirect training  \nexperience, the move sequences for a game and the final result (win, lose or  \ndraw) are given for a number of games. How to assign credit or blame to  \nindividual moves is the credit assignment problem. \n \n1. Teacher or Not: \n\uf0a2 Supervised: \nThe training experience will be labelled, which means, all the board states  \nwill be labelled with the correct move. So the learning takes place in the  \npresence of a supervisor or a teacher. \n\uf0a2 Un-Supervised: \nThe training experience will be unlabelled, which means, all the board \nstates will not have the moves. So the learner generates random games and  \nplays against itself with no supervision or teacher involvement. \n \n\uf0a2 Semi-supervised: \nLearner generates game states and asks the teacher for help in finding \nthe correct move if the board state is confusing. \n2. Is the training experience good: \n \n\uf0a2 Do the  training examples represent the distribution of  examples over  \nwhich the final system performance will be measured? Pe rformance is best  \nwhen training examples and test examples are from the same/a similar \ndistribution. \n\uf0a2 The checker player learns by playing against oneself. Its experience is  \nindirect. It may not encounter moves that are common in human expert play.  \nOnce the proper training experience is available, the next design step will be  \nchoosing the Target Function. \nChoosing the Target Function: \nWhen you are playing the checkers game, at any moment of time, you make \na decision on choosing the best move from different possibilities. You think  \nand apply the learning that you have gained from the experience. Here the  \nlearning is, for a specific board, you move a checker such that your board", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1913, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca140810-a7e9-4b7e-88aa-b92be0846af2": {"__data__": {"id_": "ca140810-a7e9-4b7e-88aa-b92be0846af2", "embedding": null, "metadata": {"page_label": "15", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "43ca986f-dd78-49f2-9e10-f352ce1429ed", "node_type": "4", "metadata": {"page_label": "15", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "68f0bd4aa7677de9b1a724880b2a90a2f02ee7205c8a23a81cb6719af22eead0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n9 \n \n \n \nstate tends towards the winning situation. Now the same learning has to be  \ndefined in terms of the target function. \nHere there are 2 considerations \u2014 direct and indirect experience. \n\u2022 During the direct experience the checkers learning system, it needs only  \nto learn how to choose the best move among some large search space. We  \nneed to find a target function that will help us choose the best move among  \nalternatives. \nLet us call this function Choose Move and use the notation Choose Move: B \n\u2192M to indicate that this function accepts as  input any board from the set of  \nlegal board states B and produces as output some move from the set of legal  \nmoves M. \n\u2022 When there is an indirect experience it becomes difficult to learn such  \nfunction. How about assigning a real score to the board state. \n \n \nSo the function be V: B \u2192R indicating that this accepts as input any board  \nfrom the set of legal board states B and produces an output a real score. This  \nfunction assigns the higher scores to better board states \n \n \n \n \nIf the system can successfully learn such a target function V, then it can \neasily use it to select the best move from any board position. \nLet us therefore define the target value V(b) for an arbitrary board state b in  \nB, as follows:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1311, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "57076243-6b05-4276-af04-8b5b806c1df8": {"__data__": {"id_": "57076243-6b05-4276-af04-8b5b806c1df8", "embedding": null, "metadata": {"page_label": "16", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5a1ae0c7-03af-4564-90be-4463489466a9", "node_type": "4", "metadata": {"page_label": "16", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "34de918d4cf1f3b5b347db933d634102aad751381085190aa554d7d9acda1590", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n10 \n \n \n \n1. if b is a final board state that is won, then V(b) = 100 \n2. if b is a final board state that is lost, then V(b) = -100 \n3. if b is a final board state that is drawn, then V(b) = 0 \n4. if b is a not a final state in the game, then V (b) = V (b\u2019), where b\u2019 is the best  \nfinal board state that can be achieved starting from b and playing optimally  \nuntil the end of the game. \nThe (4) is a recursive definition and to determine the value of V(b) for a  \nparticular board state, it performs the search ahead for the optimal line of  \nplay, all the way to the end of the game. So this definition is not efficiently  \ncomputable by our checkers playing program, we say that it is a non- \noperational definition. \n \n \nChoosing a representation for the Target Function: \nNow that we have specified the ideal target function V, we must choose a  \nrepresentation that the learning program will use to describe the function ^V  \nthat it will learn. As with earlier design choices, we again have many options.  \nWe could, for example, allow the program to represent us ing a large table  \nwith a distinct entry specifying the value for each distinct board state. Or we  \ncould allow it to represent using a collection of rules that match against  \nfeatures of the board state, or a quadratic polynomial function of predefined  \nboard features, or an artificial neural network. In general, this choice of  \nrepresentation involves a crucial trade off. On one hand, we wish to pick a  \nvery expressive representation to allow representing as close an \napproximation as possible to the ideal target function V. \nOn the other hand, the more expressive the representation, the more training  \ndata the program will require in order to choose among the alternative \nhypotheses it can represent. To keep the discussion brief, let us choose a  \nsimple represe ntation: for any given board state, the function ^V will be  \ncalculated as a linear combination of the following board features: \n\u2022 x1(b) \u2014 number of black pieces on board b \n\u2022 x2(b) \u2014 number of red pieces on b \n\u2022 x3(b) \u2014 number of black kings on b", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2130, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0586b0f-c25e-4911-99da-a560e7716ab5": {"__data__": {"id_": "c0586b0f-c25e-4911-99da-a560e7716ab5", "embedding": null, "metadata": {"page_label": "17", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "68383fc1-7b0c-490f-9b21-be63ca8cbfd5", "node_type": "4", "metadata": {"page_label": "17", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "557f02c2a9a676bb92936af6aa605438d29d2949c43238d5824c3aabcdcf60d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n11 \n \n \n \n\u2022 x4(b) \u2014 number of red kings on b \n\u2022 x5(b) \u2014 number of red pieces threatened by black  \u2022 x6(b) \u2014 number of  \nblack pieces threatened by red \n^V = w0 + w1 \u00b7 x1(b) + w2 \u00b7 x2(b) + w3 \u00b7 x3(b) + w4 \u00b7 x4(b) +w5 \u00b7 x5(b) + w6 \u00b7 x6(b) \n \n \nWhere w0 through w6 are  numerical coefficients or weights to be obtained  \nby a learning algorithm. Weights w1 to w6 will determine the relative \nimportance of different board features. \nSpecification of the Machine Learning Problem at thi s time: Till now we \nworked on choosing the type of training experience, choosing the target  \nfunction and its representation. The checkers learning task can be \nsummarized as below. \n\u2022 Task T: Play Checkers \n\u2022 Performance Measure: % of games won in world tournament \n\u2022 Training Experience E: opportunity to play against itself \n\u2022 Target Function: V: Board \u2192 R \n\u2022 Target Function Representation: ^V = w0 + w1 \u00b7 x1(b) + w2 \u00b7 x2(b) + w3 \u00b7  \nx3(b) + w4 \u00b7 x4(b) +w5 \u00b7 x5(b) + w6 \u00b7 x6(b) \nThe first three items above correspond to the specification of the learning  \ntask, where as the final two items constitute design choices for the \nimplementation of the learning program. \n \n \n \n \nChoosing an approximation algorithm for the Target Function: \nGenerating training data \u2014 To train our learning program, we need a set of  \ntraining data, each describing a specific board state b and the training value  \nV_train (b) for b. Each training example is an ordered pair <b,v_train(b)>.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1485, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fc92277-af7b-441b-b0ad-22842f9d6bd9": {"__data__": {"id_": "6fc92277-af7b-441b-b0ad-22842f9d6bd9", "embedding": null, "metadata": {"page_label": "18", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ab46b749-7e4f-4914-8d52-76bbcf741a80", "node_type": "4", "metadata": {"page_label": "18", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "db796d9670845a142837a93346cd33358974ee3e0901a088dbb876e9831ad39c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n12 \n \n \n \nTemporal difference (TD) learning is a concept central to reinforcement \nlearning, in which learning happens through the iterative correction of your  \nestimated returns towards a more accurate target return. \n\uf056 V_train(b) \u2190 ^V(Successor(b)) \n \nFinal Design for Checkers Learning system: \nThe final design of our checkers learning system can be naturally described  \nby four distinct program modules that represent the central components in  \nmany learning systems. \n1. The performance System: Takes a new board as input and outputs a trace of \nthe game it played against itself. \n2. The Critic: Takes the trace of a game as an input and outputs a set of training  \nexamples of the target function. \n3. The Generalizer: Takes training examples as input and outputs a hypothesis  \nthat estimates the target function. Good generalization to new cases is \ncrucial. \n4. The Experiment Generator: Takes the current hypothesis (currently learned  \nfunction) as input and outputs a new problem (an initial board state) for the  \nperformance system to explore. \n \n \n \nIssues in Machine Learning:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1122, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91cd0b27-a4d4-44fa-a20e-7483083f8d3c": {"__data__": {"id_": "91cd0b27-a4d4-44fa-a20e-7483083f8d3c", "embedding": null, "metadata": {"page_label": "19", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "160ed4f8-9560-4773-b3e8-587797e4f014", "node_type": "4", "metadata": {"page_label": "19", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "7eb0d86b2759d1df86f20f9f7f75eb32fee9ed3739c7df0d13a971143f90c978", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n13 \n \n \n \nOur checkers example raises a number of generic questions about machine  \nlearning. The field of machine learning, and much of this book, is concerned  \nwith answering questions such as the following: \n\u2022 What algorithms exist for learning general target functions from specific  \ntraining examples? In what settings will particular algorithms converge to the  \ndesired function, given sufficient training data? Which algorithms perform  \nbest for which types of problems and representations? \n\u2022 How much training data is sufficient? What general bounds can be found to  \nrelate the confidence in learned hypotheses to the amount of training \nexperience and the character of the learner's hypothesis space? \n\u2022 When and how can prior knowledge held by the learner guide the process of  \ngeneralizing from examples? Can prior knowledge be helpful even when it is  \nonly approximately correct? \n\u2022 What is the best strategy for choosing a useful next training experience, and  \nhow does the choice of this strategy alter the complexity of the learning  \nproblem? \n\u2022 What is the best way to reduce the learning task to one or more function  \napproximation problems? Put another way, what specific functions should \nthe system attempt to learn? Can this process itself be automated? \n\u2022 How can the learner automatically alter its representation to improve its  \nability to represent and learn the target function? \nCONCEPT LEARNING: \n \n\u2022 Inducing general functions from specific training examples is a main issu e of \nmachine learning. \n\u2022 Concept Learning: Acquiring  the definition  of a general category  from \ngiven sample positive and negative training examples of the category. \n\u2022 Concept Learning can see as a problem of searching through a predefined  \nspace of potential hypotheses for the hypothesis that best fits the training  \nexamples. \n\u2022 The hypothesis space has a general -to-specific ordering of hypotheses, and  \nthe search can be efficiently organized by taking advantage of a naturally  \noccurring structure over the hypothesis space. \nA Formal Definition for Concept Learning:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2124, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02730a74-04e8-4d28-9dcd-968282b9289d": {"__data__": {"id_": "02730a74-04e8-4d28-9dcd-968282b9289d", "embedding": null, "metadata": {"page_label": "20", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aaa10151-2f8e-4630-bba5-4e29bbfff69a", "node_type": "4", "metadata": {"page_label": "20", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "fa0f10c4a8778991364ee145e92a0a81a4f8520e482825f02a0d3e222ffedc4c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n14 \n \n \n \nInferring a Boolean-valued function from training examples of its input and  \noutput. \n\u2022 An example for concept -learning is the learning of bird -concept from the  \ngiven examples of birds (positive examples) and non-birds (negative \nexamples). \n\u2022 We are trying to learn the definition of a concept from given examples.  \nA Concept Learning Task: Enjoy Sport Training Examples \n \n \nA set of example days, and each is described by six attributes.  The task is to  \nlearn to predict the value of Enjoy Sport for arbitrary day, based on the \nvalues of its attribute values. \n \n \nConcept Learning as Search: \n\u2022 Concept learning can be viewed as the task  of searching  through a large  \nspace of hypotheses implicitly defined by the hypothesis representation. \n\u2022 The goal of this search is to find the hypothesis that best fits the training  \nexamples. \n\u2022 By selecting a hypothesis representation, the designer of the learning \nalgorithm implicitly def ines the space of all hypotheses that the program can  \never represent and therefore can ever learn.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1085, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b2eeac1b-9632-4718-82b7-f2de1742d5c1": {"__data__": {"id_": "b2eeac1b-9632-4718-82b7-f2de1742d5c1", "embedding": null, "metadata": {"page_label": "21", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c808a289-8d5f-4b31-865b-3b675370832b", "node_type": "4", "metadata": {"page_label": "21", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "9ce2deaff0c1c7d89d7c6f47eb614aafe1d2fc0041ed6639c76e6f19bf75bf91", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n15 \n \n \n \nFIND-S: \n\u2022 FIND-S Algorithm starts from the most specific hypothesis and generalize it  \nby considering only positive examples. \n\u2022 FIND-S algorithm ignores negative example \n: As long as the hypothesis space contains a hypothesis that  describes the  \ntrue target concept, and the training data contains no errors, ignoring \nnegative examples does not cause to any problem. \n\u2022 FIND-S algorithm finds the most specific hypothesis within H that is \nconsistent with the positive training examples. \u2013 The final hypothesis will  \nalso be consistent with negative examples if  the correct target concept is in  \nH, and the training examples are correct. \nFIND-S Algorithm: \n1. Initialize h to the most specific hypothesis in H \n2. For each positive training instance x For each attribute \nconstraint a, in h \nIf the constraint a, is satisfied by x \nThen do nothing \n3. Else replace a, in h by the next more general constraint that is satisfied by \nx 4. Output hypothesis h \nFIND-S Algorithm \u2013 Example: \nImportant-Representation: \n \n1. ? indicates that any value is acceptable for the attribute. \n2. specify a single required value (e.g., Cold) for the attribute. \n3. \u03a6 indicates that no value is acceptable. \n4. The most general hypothesis is represented by: {?, ?, ?, ?, ?, ?} \n5. The most specific hypothesis is represented by: {\u03d5, \u03d5, \u03d5, \u03d5, \u03d5, \u03d5} \n \nSteps Involved in Find-S: \n1. Start with the most specific hypothesis. h = {\u03d5, \u03d5, \u03d5, \u03d5, \u03d5, \u03d5}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1474, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fb5d3e5f-c786-4950-a3bd-e5ab96479c5c": {"__data__": {"id_": "fb5d3e5f-c786-4950-a3bd-e5ab96479c5c", "embedding": null, "metadata": {"page_label": "22", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "55c67ece-467c-452e-aa55-d55e5f3f372d", "node_type": "4", "metadata": {"page_label": "22", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "818d54a30c9ade6932e63bf98003a7de85acfe934875059649e1c1ab60abd44a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n16 \n \n \n \n2. Take the next example and if it is negative, then no changes occur to the \nhypothesis. \n3. If the example is positive and we find that our initial hypothesis is too \nspecific then we update our current hypothesis to a general condition. \n4. Keep repeating the above steps till all the training examples are complete. \n5. After we have completed all the training examples we will have the final  \nhypothesis when can use to classify the new examples. Example: Consider \nthe following data set having the data about which particular seeds are \npoisonous. \n \n \n \nFirst, we consider the hypothesis to be a more specific hypothesis. Hence,  \nour hypothesis would be: h = {\u03d5, \u03d5, \u03d5, \u03d5, \u03d5, \u03d5} \n \n \nConsider example 1: \nThe data in example 1 is {GREEN, HARD, NO, WRINKLED}. We see that  \nour initial hypothesis is more specific and we have to generalize it for this  \nexample. \nHence, the hypothesis becomes: \nh = {GREEN, HARD, NO, WRINKLED} \nConsider example 2:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 991, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "68d1fa21-d881-4333-8866-faf5772ba677": {"__data__": {"id_": "68d1fa21-d881-4333-8866-faf5772ba677", "embedding": null, "metadata": {"page_label": "23", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8e70d546-75b5-4b32-8621-c882c43e1863", "node_type": "4", "metadata": {"page_label": "23", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "e59935a4abaffaea9987ce73c637f2394dd282e2dcac1d0723e92c930b0e1d3c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n17 \n \n \n \nHere we see that this example has a negative outcome. Hence we neglect  \nthis example and our hypothesis remains the same. h = {GREEN, \nHARD, NO, WRINKLED} \nConsider example 3: \nHere we see that this example has a negative outcome. hence we neglect  \nthis example and our hypothesis remains the same. h = {GREEN, \nHARD, NO, WRINKLED} \nConsider example 4: \nThe data present in example 4 is {ORANGE, HARD, NO, WRINKLED}. \nWe \ncompare every single attribute with the  initial data and if any mismatch is  \nfound we replace that particular attribute with a general case (\u201c ?\u201d). After  \ndoing the process the hypothesis becomes: h = {?, HARD, NO, \nWRINKLED } \nConsider example 5: \nThe data present in example 5 is {GREEN, SOFT, YES,  SMOOTH}. We \ncompare every single attribute with the initial data and if any mismatch is  \nfound we replace that particular attribute with a general case ( \u201c?\u201d ). After  \ndoing the process the hypothesis becomes: \nh = {?, ?, ?, ? } \nSince we have reached a point where all the attributes in our hypothesis \nhave the general condition, example 6 and example 7 would result in the  \nsame hypothesizes with all general attributes. h = {?, ?, ?, ? } \nHence, for the given data the final hypothesis would be: \nFinal Hypothesis: h = { ?, ?, ?, ? }. \n \nVersion Spaces \nDefinition(Version space). A concept is complete if it covers all positive  \nexamples. \nA concept is consistent if it covers none of the negative examples. The  \nversion space is the set of all complete and consistent concepts. This set is  \nconvex and is fully defined by its least and most general elements. \nCandidate-Elimination Learning Algorithm", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1677, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "849ddfe1-d12a-4140-a812-10db656996ee": {"__data__": {"id_": "849ddfe1-d12a-4140-a812-10db656996ee", "embedding": null, "metadata": {"page_label": "24", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba3e4e31-efee-42dc-a4f9-eb256fc82da5", "node_type": "4", "metadata": {"page_label": "24", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "6e3f7577c249c71b3bc91ce424b037b909374d1837f7f7abdbcf736b2aa2d229", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n18 \n \n \n \nThe CANDIDATE-ELIMINTION algorithm computes the version space \ncontaining all hypotheses from H that are consistent with an observed \nsequence of training examples. \nInitialize G to the set of maximally general hypotheses in H Initialize S to \nthe set of maximally specific hypotheses in H For each training example d, \ndo \n\u2022 If d is a positive example \n\u2022 Remove from G any hypothesis inconsistent with d \n\u2022 For each hypothesis s in S that is not consistent with d \n\u2022 Remove s from S \u2022 Add to S all minimal generalizations h of s such that h is \nconsistent with d, and some member of G is more general than h \n\u2022 Remove from S any hypothesis that is more general than another hypothesis \nin S \n\u2022 If d is a negative example \n\u2022 Remove from S any hypothesis inconsistent with d \n\u2022 For each hypothesis g in G that is not consistent with d \n\u2022 Remove g from G 18\\ \n\u2022 Add to G all minimal specializations h of g such that \n\u2022 h is consistent with d, and some member of S is more specific than h \n\u2022 Remove from G any hypothesis that is less general than another hypothesis \nin G. \nCANDIDATE- ELIMINTION algorithm using version spaces An \nIllustrative Example:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1184, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cd7a9315-3004-48c0-9082-9d97b723106b": {"__data__": {"id_": "cd7a9315-3004-48c0-9082-9d97b723106b", "embedding": null, "metadata": {"page_label": "25", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4e0f3450-979b-4926-b7cd-5fd6086a3601", "node_type": "4", "metadata": {"page_label": "25", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "ec9df666625355347feadfcae7f58144bbe90b94f32233a3b1544454c0c04d7f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n19 \n \n \n \nCANDIDATE-ELIMINTION algorithm begins by initializing the version \nspace to the set of all hypotheses in H; \nboundary set to contain the most general hypothesis in H,  G0 ?, ?, ?, ?, ?, \nWhen the first training example is presented, the \nCANDIDATEELIMINTION algorithm checks the S boundary and finds that \nit is overly specific and it fails to cover the positive example. \n\u2022 The boundary is therefore revised by moving it to the least more general \nhypothesis that covers this new example. \n\u2022 No update of the G boundary is needed in response to this training example \nbecause Go correctly covers this example. \n \n \n \n \n \n \n \n \n \n \n \n\u2022 When the second training example is observed, it has a similar effect of \ngeneralizing S further to S2, leaving G again unchanged i.e., G2 = G1 =G0", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 818, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "582722b9-dbaf-4cd6-bf13-612a50bf43bc": {"__data__": {"id_": "582722b9-dbaf-4cd6-bf13-612a50bf43bc", "embedding": null, "metadata": {"page_label": "26", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "19cfc674-6188-42c7-a316-f0d58bf59fbc", "node_type": "4", "metadata": {"page_label": "26", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "b153980f4a2b52f4c5e141d54a0018a7510425cbd1591dc7a0f707eee1cd8de6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n20 \n \n \n \n\u2022 Consider the third training example. This negative example reveals that the  \nboundary of the version space is overly general, that is, the hypothesis in G  \nincorrectly predicts that this new example is a positive example. \n\u2022 The hypothesis in the G boundary  must therefore be specialized  until it  \ncorrectly classifies this new negative example. \n \n \n \n \nGiven that there are six attributes that could be specified to  specialize G2,  \nwhy are there only three new hypotheses in G3? \n \nFor example, the hypothesis h = (?, ?, Normal, ?, ?, ?) is a minimal \nspecialization of G2 that correctly labels the new example as a negative  \nexample, but it is not included in G3. The reason this hypothesis is excluded  \nis that it is inconsistent with the previously encountered positive examples.  \nConsider the fourth training example.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 870, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c31d7637-4c76-4c65-a2bf-0e4d62b8d8e0": {"__data__": {"id_": "c31d7637-4c76-4c65-a2bf-0e4d62b8d8e0", "embedding": null, "metadata": {"page_label": "27", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1b920bde-bb9c-4fcf-8197-61a61f40a543", "node_type": "4", "metadata": {"page_label": "27", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "2a35d53c41ca4e64efcc4d440fcebc97ffe02e6c4ab833b32efa585e0b3adcfc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n21 \n \n \n \n \n \n\u2022 This positive example  further generalizes  the S boundary of  the version  \nspace. It also results in removing one member of the  G boundary, because  \nthis member fails to cover the new positive example After processing these  \nfour examples, the boundary sets S4 and G4 delimit the version space of all  \nhypotheses consistent with the set of incrementally observed training \nexamples. \n\u2022 After processing these four examples, the boundary sets S4 and G4 delimit  \nthe version space of all hypotheses consistent with the set of incrementally  \nobserved training examples. \n \n \n \nInductive bias:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 638, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a52962a9-daca-40f4-8a28-a0a69a73db21": {"__data__": {"id_": "a52962a9-daca-40f4-8a28-a0a69a73db21", "embedding": null, "metadata": {"page_label": "28", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cf49f5e4-cd71-4f2a-94c3-359aee87ea57", "node_type": "4", "metadata": {"page_label": "28", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "0b940c54b6b95828d97b005c185db6aa39ec78d77e6b5a88511df1e82af4aee5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n \n \nDecision Tre:e Decision Trees are a type of Supervised Machine Learning (that \nis you explain what the input is and what the corresponding output is in the \ntraining data) where th e data is continuously split according to a certain \nparameter. The tree can be explained by two entities, namely decision nodes and  \nleaves. The leaves are the decisions or the final outcomes. And the decision nodes \nare where the data is split. \n \nDecision Tree Representation: \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nAn example of a decision tree can be explained using above binary tree. Let\u2019s say  \nyou want to predict whether a person is fit given their information like age, eating \nhabit, and physical activity, etc. The decision nodes here are questions like \n\u2018What\u2019s the age?\u2019, \u2018Does he exercise?\u2019, and \u2018Does he eat a lot of pizzas\u2019? And the \nleaves, which are outcomes like either \u2018fit\u2019, or \u2018unfit\u2019. In this case this was a \nbinary classification problem (a yes no type problem). There are two main types \nof Decision Trees: \n \n1. Classification trees (Yes/No types): \n \nWhat we have seen above is an example of classification tree, where the \noutcome was a variable like \u2018fit\u2019 or \u2018unfit\u2019. Here the decision variable is \nCategorical. \nInductive bias refers to the restriction2s2 that are imposed by the assumptions", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1327, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "381be746-5ac0-4e43-a2f5-71e378401ee7": {"__data__": {"id_": "381be746-5ac0-4e43-a2f5-71e378401ee7", "embedding": null, "metadata": {"page_label": "29", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f97038d0-4e52-4daa-87d1-ef87bdd8a9f7", "node_type": "4", "metadata": {"page_label": "29", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "161d5bdd3a2c89497790b21a675f580374321d7c3b408379244ac6265cb31820", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n23 \n \n \n \nHere the decision or the outcome variable is Continuous, e.g. a number like \n123. Working Now that we know what a Decision Tree is, we\u2019ll see how it  \nworks internally. There are many algorithms out there which construct \nDecision Trees, but one  of the best is called as ID3 Algorithm. ID3  Stands \nfor Iterative Dichotomiser3. \n \nBefore discussing the ID3 algorithm, we\u2019ll go through few definitions. \nEntropy, also called as Shannon Entropy is denoted by H(S) for a finite set S,  \nis the measure of the amount of uncertainty or randomness in data. \n \nAppropriate Problems for Decision Tree Learning: \n\u2022 Instances are represented by attribute-value pair \n\u2022 The target function has discrete output values \n\u2022 Disjunctive descriptions may be required \n\u2022 The training data may contain errors \n\u2022 The training data may contain missing attribute values. \n\u2022 Suitable for classifications. \n \nHypothesis Space Search: \n \nThe set of possible decision tree, Simple to complex, hill climbing search. \nCapability: \n\u2022 Hypothesis space of all decision trees is a complete space of finite discrete \nvalued functions. \n \n\u2022 ID3 maintains only a single current hypothesis. \n \n\u2022 Cannot determine how many alternative decision trees are consistent with \nthe available training data.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1298, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ff7bdc89-265b-4776-ac1f-604b31eb0c35": {"__data__": {"id_": "ff7bdc89-265b-4776-ac1f-604b31eb0c35", "embedding": null, "metadata": {"page_label": "30", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4470bf85-dafb-4c69-a6dd-ac2314aca426", "node_type": "4", "metadata": {"page_label": "30", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "fb427fc5d1b5256fb68c4d718654fe8c6772d3617ca25faff2d9700b302dc6bf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n24 \n \n \n \n\u2022 ID3 uses all training example at each step to make statistically based \ndecisions regarding how to refine its current hypothesis. \n \n\u2022 The resulting search is much less sensitive to errors in individual training \nexamples. \n \n \n \n \nInductive Bias in Decision Tree Learning: Note H is the power set of \ninstances X \n \n\u2022 Inductive Bias in ID3 \u2013 Approximate inductive bias of ID3 \n \n\uf0a2 Shorter trees are preferred over larger tress \n \n\uf0a2 BFS-ID3 \n \nDifference between (ID3 & C-E) && Restriction bias and Preference \nbias \nID3 Candidate-Elimination \nSearches a complete hypothesis space \nincompletely \nSearches an incomplete hypothesis \nspace completely \nInductive bias is solely a consequence \nof the ordering of hypotheses by its \nsearch strategy \nInductive bias is solely a \nconsequence of the expressive \npower of its hypothesis \nrepresentation \nsss \nRestriction bias Preference bias \nCandidate-Elimination ID3 \nCategorical restriction on the set of \nhypotheses considered \nPreference for certain hypotheses \nover others", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1055, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8489b668-b75c-4fbd-bcb1-262d2c9ef210": {"__data__": {"id_": "8489b668-b75c-4fbd-bcb1-262d2c9ef210", "embedding": null, "metadata": {"page_label": "31", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "96d8573c-fea6-4a57-90ec-85fd2732f609", "node_type": "4", "metadata": {"page_label": "31", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "41c1ea264385c257867de2469048e80722c9a3d2d82494208a12c1cd671ddc4e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n25 \n \n \n \nPossibility of excluding the unknown \ntarget function \nWork within a complete hypothesis \nspace \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nIssues in Decision Tree Learning: \n \n\u2022 Determine how deeply to grow the decision tree \n\u2022 Handling continuous attributes \n\u2022 Choosing an appropriate attribute selection measure \n\u2022 Handling training data with missing attribute values \n\u2022 Handling attributes with differing costs \n\u2022 Improving computational efficiency", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 490, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cccca643-9285-4da1-92e8-f9e1b4fc0ea3": {"__data__": {"id_": "cccca643-9285-4da1-92e8-f9e1b4fc0ea3", "embedding": null, "metadata": {"page_label": "32", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "16147dee-3bd6-4531-afc1-596b0e26cc36", "node_type": "4", "metadata": {"page_label": "32", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "3d3ced0f924e544be0d6c38d557922bf32420fe8c75a6deafc90b283aa86b56e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n26 \n \n \n \nUNIT-II \nArtificial Neural Networks \nIntroduction: \nArtificial Neural Networks (ANN) are algorithms based on brain function  \nand are used to model complicated patterns and forecast issues. The Artificial  \nNeural Network (ANN) is a deep learning method that arose from the \nconcept of the human brain Biological Neural Networks. The development of  \nANN was the result of an attempt to replicate the workings of the human  \nbrain. The workings of ANN are extremely si milar to those of biological  \nneural networks, although they are not identical. ANN  algorithm accepts \nonly numeric and structured data. \nThe ANN applications: \nClassification, the aim is to predict the class of an input vector \n\u2022 Pattern matching, the aim is to produce a pattern best associated with a given \ninput vector. \n\u2022 Pattern completion, the aim is to complete the missing parts of a given input \nvector. \n\u2022 Optimization, the aim is to find the optimal values of parameters in an \noptimization problem. \n\u2022 Control, an appropriate action is suggested based on given an input vectors \n\u2022 Function approximation/times series modelling, the aim is to learn the \nfunctional relationships between input and desired output vectors. \n\u2022 Data mining, with the aim of discovering hidden patterns from data \n(knowledge discovery). ANN architectures \n\u2022 Neural Networks are known to be universal function approximators \n\u2022 Various architectures are available to approximate any nonlinear function \n\u2022 Different architectures allow for generation of functions of different \ncomplexity and power \n\uf0a2 Feed forward networks \n\uf0a2 Feedback networks \n\uf0a2 Lateral networks", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1658, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d21196d3-7d14-43fc-9bf6-37d518dde79d": {"__data__": {"id_": "d21196d3-7d14-43fc-9bf6-37d518dde79d", "embedding": null, "metadata": {"page_label": "33", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e1643adc-acf1-46ec-8096-100afe0bb5ba", "node_type": "4", "metadata": {"page_label": "33", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "683f2ecfe30a44bc2ab31f8533e99040b3c815ef8f1253f76181754cbee2e0c7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n27 \n \n \n \n \n \n \n \n \n \n \n \nAdvantages of Artificial Neural Networks \nAttribute-value pairs are used to represent problems in ANN. \n1. The output of ANNs  can be discrete-valued, real-valued, or a  vector of \nmultiple real or discrete -valued characteristics, while the target function can  \nbe discrete -valued, real -valued, or a vector of numerous real or discrete - \nvalued attributes. \n2. Noise in t he training data is not a problem for ANN learning techniques.  \nThere may be mistakes in the training samples, but they will not affect the  \nfinal result. \n3. It\u2019s utilized when a quick assessment of the taught target function is \nnecessary. \n4. The number of weights in the network. \n5. the number of training instances evaluated, and the settings of different \nlearning algorithm parameters can all contribute to extended training periods  \nfor ANNs. \nDisadvantages of Artificial Neural Networks \n1. Hardware Dependence: \n\u2022 The construction of Artificial Neural Networks necessitates the use of \nparallel processors. \n\u2022 As a result, the equipment\u2019s realization is contingent. \n2. Understanding the network\u2019s operation: \n\u2022 This is the most serious issue with ANN. \n\u2022 When ANN provides a probing answer, it does not explain why or how it \nwas chosen. \n\u2022 As a result, the network\u2019s confidence is eroded. \n3. Assured network structure:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1363, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09dd23e0-6aab-49a6-aee3-0f025a6ca9db": {"__data__": {"id_": "09dd23e0-6aab-49a6-aee3-0f025a6ca9db", "embedding": null, "metadata": {"page_label": "34", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3a6d01bb-d5cc-490f-865d-9d8e91810ee5", "node_type": "4", "metadata": {"page_label": "34", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "36ba008333966b39201412ae314feba29d09efa00525f338088106f4266797f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n28 \n \n \n \n\u2022 Any precise rule does not determine the structure of artificial neural \nnetworks. \n\u2022 Experience and trial and error are used to develop a suitable network \nstructure. \n4. Difficulty in presenting the issue to the network: \n\u2022 ANNs are capable of working with numerical data. \n\u2022 Before being introduced to ANN, problems must be converted into \nnumerical values. \n\u2022 The display method that is chosen will have a direct impact on the network\u2019s \nperformance. \n\u2022 The user\u2019s skill is a factor here. \n5. The network\u2019s lifetime is unknown: \u2022 When the network\u2019s error on the \nsample is decreased to a specific amount, the training is complete. \n\u2022 The value does not produce the best outcomes. \nAppropriate Problems for Neural Network Learning: \n1. Instances are represented by many attribute-value pairs (e.g., the pixels of a \npicture. ALVINN [Mitchell, p. 84]). \n2. The target function output may be discrete-valued, real-valued, or a vector of \nseveral real- or discrete-valued attributes. \n3. The training examples may contain errors. \n4. Long training times are acceptable. \n5. Fast evaluation of the learned target function may be required. \n6. The ability for humans to understand the learned target function is not \nimportant. \nHistory of Neural Networks: \n1. 1943: McCulloch and Pitts proposed a model of a neuron Perceptron (read \n[Mitchell, section 4.4]) \n2. 1960s: Widrow and Hoff explored Perceptron networks (which they called \n\u201cAdelines\u201d) and the delta rule. \n3. 1962: Rosenblatt proved the convergence of the perceptron training rule.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1577, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78ef169d-3cce-4bae-a2f3-57e1726a6f48": {"__data__": {"id_": "78ef169d-3cce-4bae-a2f3-57e1726a6f48", "embedding": null, "metadata": {"page_label": "35", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ca44a625-e08e-48b9-a719-92d22832a52d", "node_type": "4", "metadata": {"page_label": "35", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "5d64f0b7a73ff190b655eed23a493a2ad7187717018fc0c4b8dda2ff74df06d0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n29 \n \n \n \n4. 1969: Minsky and Papert showed that the Perceptron cannot deal with \nnonlinearly-separable data sets ---even those that represent simple function  \nsuch as X-OR. \n5. 1970-1985: Very little research on Neural Nets \n6. 1986: Invention of Backpropagation Rumelhart and McClelland, but also  \nParker and earlier on: Werbos which can learn from nonlinearly -separable \ndata sets. \n7. Since 1985: A lot of research in Neural Nets! \n \n \n \n \n \n \n \nMultilayer Neural Network: \n\u2022 A multiplayer perceptron is a feed forward neural network with one or more  \nhidden layers \n\u2022 The network consists of an input layer of source neurons, at least one hidden  \nlayer of computational neurons, and an output layer of computational \nneurons. \n\u2022 The input signals are propagated in a forward direction on a layer -by-layer \nbasis. \n\u2022 Neurons in the hidden layer cannot be observed through input/output \nbehaviour of the network. \n\u2022 There is no obvious way to know what the desired output of the hidden layer  \nshould be.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1038, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5c31216-7c32-4fd0-8e8a-c40f6fe5d863": {"__data__": {"id_": "d5c31216-7c32-4fd0-8e8a-c40f6fe5d863", "embedding": null, "metadata": {"page_label": "36", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7c52f1e3-183f-42e1-82da-6508d3771f4c", "node_type": "4", "metadata": {"page_label": "36", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "e6647fe99062cfd04276339257b36d1ff23e3dd3842b07922ad0cbcd041ff5be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n30", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 27, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "037d4adb-96c0-41a3-82f3-f84c5dc4459b": {"__data__": {"id_": "037d4adb-96c0-41a3-82f3-f84c5dc4459b", "embedding": null, "metadata": {"page_label": "37", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d0a35079-49fd-4cfd-933e-9523c063c19b", "node_type": "4", "metadata": {"page_label": "37", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "06bd1b15c99bf9f0d16b34491b98038889cd2fd07bb06a415f2762dc12dd44a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n31", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 147, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a80425e-b935-4e44-afdf-19a4e5dd38ff": {"__data__": {"id_": "9a80425e-b935-4e44-afdf-19a4e5dd38ff", "embedding": null, "metadata": {"page_label": "38", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e044d69b-79e4-4c01-ba8d-54dc9b2b5344", "node_type": "4", "metadata": {"page_label": "38", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "1fd43ea49723b0dd368d5c9b15950ad3a3cb9884d31876c8a34451744d8bc108", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n32 \n \n \n \nBack propagation: Overview \n\u2022 Back propagation works by applying the gradient descent rule to a feed  \nforward network. \n\u2022 The algorithm is composed of two parts that get repeated over and over until  \na pre-set maximal number of epochs, EP max. \n\u2022 Part I, the feed forward pass: the activation v alues of the hidden and then  \noutput units are computed. \n\u2022 Part II, the back propagation pass: the weights of the network are updated - \nstarting with the hidden to output weights and followed by the  input to \nhidden weights--with respect to the sum of squares error and through a series  \nof weight update rules called the Delta Rule. \nDefinition: \nThe Back propagation algorithm in neural network computes the gradient of  \nthe loss function for a single weight by the chain rule. It efficiently computes  \none layer at a t ime, unlike a native direct computation. It computes the  \ngradient, but it does not define how the gradient is used. It generalizes the  \ncomputation in the delta rule. \nConsider the following Back propagation neural network example diagram to  \nunderstand:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1119, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d004d05b-f1f4-498b-b607-34807db266c0": {"__data__": {"id_": "d004d05b-f1f4-498b-b607-34807db266c0", "embedding": null, "metadata": {"page_label": "39", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9fd76565-4838-47a2-b5d9-5456404e90ec", "node_type": "4", "metadata": {"page_label": "39", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "e1d11183d1bc7be150fb7cf253fd3393fc60240acd5fb1db93204337f3bf990d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n33 \n \n \n \n \n\u2022 Inputs X, arrive through the preconnected path \n\u2022 Input is modelled using real weights W. The weights are usually randomly \nselected. \n\u2022 Calculate the output for every neuron from the input layer, to the hidden \nlayers, to the output layer. \n\u2022 Calculate the error in the outputs \nErrorB= Actual Output \u2013 Desired Output \n\u2022 Travel back from the output layer to the hidden layer to adjust the weights \nsuch that the error is decreased. \n\u2022 Keep repeating the process until the desired output is achieved \n \n \nWhy We Need Back propagation? \n\u2022 Most prominent advantages of Back propagation are: \n\u2022 Back propagation is fast, simple and easy to program \n\u2022 It has no parameters to tune apart from the numbers of input \n\u2022 It is a flexible method as it does not require prior knowledge about the \nnetwork \n\u2022 It is a standard method that generally works well \n\u2022 It does not need any special mention of the features of the function to be \nlearned. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n1. Inputs X, arrive through the preconnected path", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1054, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "147375e1-01ab-4f3b-928c-0dd0cd498848": {"__data__": {"id_": "147375e1-01ab-4f3b-928c-0dd0cd498848", "embedding": null, "metadata": {"page_label": "40", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fabeec9d-2338-40e0-a225-fefcce99d653", "node_type": "4", "metadata": {"page_label": "40", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "a8b7fe7fce6b2f4bdc172e74e40142761a00b6b774553fa64d98babf1a5de981", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n34 \n \n \n \nTypes of Back propagation Networks \nTwo Types of Back propagation Networks are: \n\u2022 Static Back-propagation \n\u2022 Recurrent Back propagation Static back-propagation: \nIt is one kind of back propagation network which produces a mapping of a  \nstatic input for static output. It is useful to solve static classification issues  \nlike optical character recognition. \nRecurrent Back propagation: \nRecurrent Back propagation in data mining is fed forward until a fixed value  \nis achieved. After that, the error is computed and propagated backward. \n \nDisadvantages of using Back propagation \n\u2022 The actual performance of back propagation on a specific problem is \ndependent on the input data. \n\u2022 Back propagation algorithm in data mining can be quite sensitive to noisy \ndata \n\u2022 You need to use the matrix-based approach for back propagation instead of \nmini-batch. \n \n \nBack propagation: The Algorithm \n\u2022 Initialize the weights to small random values; create a random pool of all the \ntraining patterns; set EP, the number of epochs of training to 0. \n\u2022 2. Pick a training pattern from the remaining pool of patterns and propagate \nit forward through the network. \n\u2022 3. Compute the deltas, k for the output layer. \n\u2022 4. Compute the deltas, \nbackward. \nfor the hidden  layer by propagating  the error \n\u2022 Update all the connections such that \n\u2022 W Newji = wjiold + wji and w Newkj = wkjOld + wkj \nj", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1422, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7cc3d689-eb5c-438b-b73b-1b8755c0548c": {"__data__": {"id_": "7cc3d689-eb5c-438b-b73b-1b8755c0548c", "embedding": null, "metadata": {"page_label": "41", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8c33d70-c371-4585-a2a8-0976f30df25d", "node_type": "4", "metadata": {"page_label": "41", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "d02763eebb87b481ea58f00321c7629ceeffe70389bf320280dd9175d82c9200", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n35 \n \n \n \n\u2022 If any pattern remains in the pool, then  go back to Step 2. If all the training  \npatterns in the pool have been used, then set EP = EP+1, and if EP  EPMax, \nthen create a random pool of patterns and go to Step 2. If EP = EPMax, then  \nstop. \n \nBack propagation: The Momentum: \n\u2022 To this point, Back propagation has the disadvantage of being too slow if is \nsmall and it can oscillate too widely if is large. \n\u2022 To solve this problem, we can add a momentum to give each connection \nsome inertia, forcing it to change in the direction of the downhill \u201cforce\u201d. \n\u2022 New Delta Rule: \nwpq(t+1) = -    E/ wpq +    wpq(t) \n\u2022 Where p and q are any input and hidden, or, hidden and  output units; t is a  \ntime step or epoch; and is the momentum parameter which regulates the  \namount of inertia of the weights.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 839, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf16469d-c0d5-4931-94fd-98511ea394f9": {"__data__": {"id_": "cf16469d-c0d5-4931-94fd-98511ea394f9", "embedding": null, "metadata": {"page_label": "42", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a86f8220-3dab-4199-be3d-8424e3513c4b", "node_type": "4", "metadata": {"page_label": "42", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "1a547870002ffb24da24873179ef050431c922ea159e6c1e48cc78ddad5bf814", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n36 \n \n \n \n \n \nUNIT - III \n \nIntroduction to Bayesian Learning \n \nImagine a situation where your friend gives you a new coin and asks you the  \nfairness of the coin (or the probability of observing heads) without even \nflipping the coin once. In fact, you are also aware that your friend has not  \nmade the coin biased. In general, you have seen that coins are fair, thus you  \nexpect the probability of observing heads is 0.50.5. In the absence of any  \nsuch observations, yo u assert the fairness of the coin only using your past  \nexperiences or observations with coins. \nSuppose that you are allowed to flip the coin 1010 times in order to \ndetermine the fairness of the coin. Your observations from the experiment  \nwill fall under one of the following cases: \n \n\u2022 Case 1: observing 55 heads and 55 tails. \n \n\u2022 Case 2: observing hh heads and 10\u2212h10\u2212h tails, where h\u226010\u2212hh\u226010\u2212h. \n \nIf case 1 is observed, you are now more certain that the coin is a fair coin, \nand you will decide that the probability of observing heads is 0.50.5 with  \nmore confidence. If case 2 is observed you can either: \n \n1. Neglect your prior beliefs since now you have new data, decide the \nprobability of observing heads is h/10h/10 by solely depending on recent  \nobservations. \n2. Adjust your belief accordingly to the value of hh that you have just observed,  \nand decide the probability of observing heads using your recent observations. \n \nThe first method suggests that we use the frequentist method, where we  \nomit our beliefs when making decisions.  However, the second method  \nseems to be more convenient because 1010 coins are insufficient to \ndetermine the fairness of a coin. Therefore, we can make better decisions \nby combining our recent observations and beliefs that we have gained  \nthrough our past experiences. It is this thinking model which uses our most  \nrecent observations together with our beliefs or inclination for critical \nthinking that is known as Bayesian thinking.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2004, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7ad10305-968c-43e1-abd8-00141bfef357": {"__data__": {"id_": "7ad10305-968c-43e1-abd8-00141bfef357", "embedding": null, "metadata": {"page_label": "43", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8815866e-1bf3-408f-9986-b33971230408", "node_type": "4", "metadata": {"page_label": "43", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "cdb282dea2d32042d20766e9408fa0e009b246215a1ec118852046c2c040654d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n37 \n \n \n \n \n \nMoreover, assume that your friend allows you to conduct another 1010 coin  \nflips. Then we can use these new observations to further update our beliefs.  \nAs we gain more data, we can incrementally update our beliefs  increasing \nthe certainty of our conclusions . This is known as incremental learning,  \nwhere you update your knowledge incrementally with new evidence. \nBayesian learning comes into play on such occasions, where we are unable \nto use frequentist statistics due to the drawbacks that we have discussed  \nabove. We can use Bayesian learning to address all these drawbacks and \neven with additional capabilities (such as incremental updates of the \nposterior) when testing a hypothesis to estimate unknown parameters of a  \nmachine learning models. Bayesian learning uses Bayes\u2019 theorem to \ndetermine the conditional probability of a hypotheses given some evidence \nor observations. \nThe Famous Coin Flip Experiment \n \nWhen we flip a coin, there are two possible outcomes - heads or tails. Of  \ncourse, there is a third rare poss ibility where the coin balances on its edge  \nwithout falling onto either side, which we assume is not a possible outcome  \nof the coin flip for our discussion. We conduct a series of coin flips and  \nrecord our observations i.e. the number of the heads (or tail s) observed for a  \ncertain number of coin flips. In this experiment, we are trying to determine  \nthe fairness of the coin, using the number of heads (or tails) that we observe. \n \nFrequentist Statistics \n \nLet us think about how we can determine the fairness of the coin using our  \nobservations in the above mentioned experiment. Once we have conducted a  \nsufficient number of coin flip trials, we can determine the frequency or the  \nprobability of observing the heads (or tails). If we observed heads and tails  \nwith equa l frequencies or the probability of observing heads (or tails) is  \n0.50.5, then it can be established that the coin is a fair coin. Failing that, it is \na biased coin. Let's denote pp as the probability of observing the heads.  \nConsequently, as the quantity that pp deviates from 0.50.5 indicates how  \nbiased the coin is, pp can be considered as the degree-of-fairness of the coin.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2261, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1654df9d-0b7e-4b3a-88b7-a080f4d538a5": {"__data__": {"id_": "1654df9d-0b7e-4b3a-88b7-a080f4d538a5", "embedding": null, "metadata": {"page_label": "44", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "84d4b50b-54d0-4996-b404-02ea00246ff0", "node_type": "4", "metadata": {"page_label": "44", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "5063fc10c4f51d6212e1dc18719a380bf6659d78b2a5a641307a8710239ff116", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n38 \n \n \n \n \n \nTesting whether a hypothesis is true or false by calculating the probability \nof an event in a prolonged experiment is known as frequentist statistics. As \nsuch, determining the fairness of a coin by using the probability of \nobserving the heads is an example of frequentist statistics (a.k.a. frequentist \napproach). \nLet us now further investigate the coin flip example using the frequentist \napproach. Since we have not intentionally altered the coin, it is reasonable to  \nassume that we are using an unbiased coin for the experiment. When we flip  \nthe coin 1010 times, we observe the heads 66 times. Therefore, the pp is \n0.60.6 (note that pp is the number of heads observed over the number of total  \ncoin flips). Hence, according to frequencies statistics, the coin is a biased \ncoin \u2014 which opposes our assumption of a fair coin. Perhaps one of your  \nfriends who is more skeptical than you extends this experiment to 100100  \ntrails using the same coin. Then she observes heads 5555 times,  which \nresults in a different pp with 0.550.55. Even though the new value for pp \ndoes not change our previous conclusion  (i.e. that the coin is biased), this  \nobservation raises several questions: \n \n\u2022 How confident are we of pp being 0.60.6? \n \n\u2022 How confident are of pp being 0.550.55? \n \n\u2022 Which of these values is the accurate estimation of pp?", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1391, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b539da9-ddb6-45c4-9b06-402122f7f301": {"__data__": {"id_": "3b539da9-ddb6-45c4-9b06-402122f7f301", "embedding": null, "metadata": {"page_label": "45", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7b6cc3af-2db6-4d6b-9132-b293473ef57a", "node_type": "4", "metadata": {"page_label": "45", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "210271fbd2737673963937e3c8b0eb24ff0a2793d07fd248c8cf0d9c5996f0a8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "39 \n \n \nDepartment of CSE MRCET \nWill pp continue to change when we further increase the number of coin flip \ntrails? \n \nWe cannot find out the exact answers to the first three questions using \nfrequentist statistics.  We may assume that true value of pp is closer to \n0.550.55 than 0.60.6 because the former is computed using observations from  \na considerable number of trials compared to what we used to compute the  \nlatter. Yet there is no way of confirming that hypothesis. However, if we  \nfurther increase the number of trials, we may ge t a different probability from  \nboth of the above values  for observing  the heads  and eventually, we may  \neven discover that the coin is a fair coin. \nNumber of coin Number of heads Probability of observing heads  \nflips     \n10   6 0.6 \n50   29 0.58 \n100   55 0.55 \n200   94 0.47 \n500   245 0.49 \nTable 1 - Coin flip experiment results when increasing the number of \ntrials \n \n \nTable 1 presents some of the possible outcomes of a hypothetical coin flip  \nexperiment when we are increasing the number of trials. The  fairness (pp) of \nthe coin changes when increasing the number of coin -flips in this experiment. \nOur confidence of estimated pp may also increase when increasing the \nnumber of coin-flips, yet the frequentist statistic does not facilitate any \nindication of t he confidence of the estimated pp value. We can attempt to  \nunderstand the importance of such a confident measure by studying the \nfollowing cases: \n \n\u2022 An experiment with an infinite number of trials guarantees pp with absolute  \naccuracy (100% confidence). Yet, it is not practical to conduct an experiment  \nwith an infinite number of trials and we should stop the experiment after a  \nsufficiently large number of trials. However, deciding the value of this \nsufficient number of trials is a challenge when using frequentist statistics. \nIf we can determine the confidence of the estimated pp value or the inferred  \nconclusion, in a situation where the number of trials is limited, this will allow", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2032, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed18d5eb-0baa-4af8-96f4-7bc235075cda": {"__data__": {"id_": "ed18d5eb-0baa-4af8-96f4-7bc235075cda", "embedding": null, "metadata": {"page_label": "46", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b16fabe-45b6-4a2f-9587-8d3de272b731", "node_type": "4", "metadata": {"page_label": "46", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "e1197f99b1a4f3800400e21efc6de0ac5bd40f582daf68f8a0d2a05c6170793d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n40 \n \n \n \nus to  decide whether to  accept the conclusion or to  extend the experiment  \nwith more trials until it achieves sufficient confidence. \n \nMoreover, we may have valuable insights or prior beliefs (for example, coins  \nare usually fair and the coin used is not made biased intentionally, therefore  \np\u22480.5p\u22480.5) that describes the value of pp. Embedding that information can  \nsignificantly improve the accuracy of the final conclusion. Such beliefs play a  \nsignificant role in shaping the outcome of a hypothesis test especially when  \nwe have limited data. However, with frequentist statistics, it is not possible to \nincorporate such beliefs or past experience to increase the accuracy of the  \nhypothesis test. \nSome Terms to Understand \n \nBefore delving into Bayesian learning, it is essential to understand the \ndefinition of some terminologies used. I will not provide lengthy explanations  \nof the mathematical definition since there is a lot of widely available content  \nthat you can use to understand these concepts. \n \n\u2022 Random variable (Stochastic variable) - In statistics, the random variable is a  \nvariable whose possible values  are a result of a random event. Therefore,  \neach possible value of a random variable has some  probability attached to it  \nto represent the likelihood of those values. \n\u2022 Probability distribution - The function that defines the probability of different  \noutcomes/values of a random variable. The continuous probability \ndistributions are described using probability density functions whereas \ndiscrete probability distributions can be represented using probability mass  \nfunctions. \nConditional probability - This is a measure of probability P(A|B)P(A|B) of an  \nevent A given that another event B has occurred. \n\u2022 Joint probability distribution \n \n \nBayes\u2019 Theorem \n \nBayes\u2019 theorem describes how the conditional probability of an event or a  \nhypothesis can be computed using evidence and prior knowledge. It is similar  \nto concluding that our code has no bugs given the evidence that it has passed", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2088, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "969a087c-090e-4ebb-a8d2-2a994eb01e9f": {"__data__": {"id_": "969a087c-090e-4ebb-a8d2-2a994eb01e9f", "embedding": null, "metadata": {"page_label": "47", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "59d2181e-2ca4-4409-b7c4-7bcf7380dbef", "node_type": "4", "metadata": {"page_label": "47", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "c68fc80657060190eb8dda1ab4336e898d348cd46a19c87b5efc7ecd0bdc6c84", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n41 \n \n \n \nall the test cases, including our prior belief that we have rarely observed any  \nbugs in our code. However, this intuition goes beyond that simple hypothesis  \ntest where there are multiple events or hypotheses involved (let us not worry  \nabout this for the moment). \n \nThe Bayes\u2019 theorem is given by: \n \n \nP(\u03b8|X)=P(X|\u03b8)P(\u03b8)P(X)P(\u03b8|X)=P(X|\u03b8)P(\u03b8)P(X) \n \n \nI will now explain each term in Bayes\u2019 theorem using the above example.  \nConsider the hypothesis that there are no bugs in our code. \u03b8\u03b8 and XX denote  \nthat our code is bug free and passes all the test cases respectively. \n \n\u2022 P(\u03b8)P(\u03b8) - Prior Probability is the probability of the hypothesis \u03b8\u03b8 being true  \nbefore applying the Bayes\u2019 theorem. Prior represents the beliefs that we have  \ngained through past experience, which refers to either common sense or an  \noutcome of Bayes\u2019 theorem for some past observations. For the example  \ngiven, prior probability denotes the probability of observing  no bugs in our  \ncode. However, since  this is the  first time we are applying Bayes\u2019 theorem,  \nwe have to decide the priors using other means \n(Otherwise we could use the previous posterior as the new prior). Let us  \nassume that it  is very unlikely to find bugs  in our code because rarely have  \nwe observed bugs in our code in the past. With our past experience of \nobserving fewer bugs in our code, we can assign our prior P(\u03b8)P(\u03b8) with a  \nhigher probability. However, for now, let us assume that P(\u03b8)=pP(\u03b8) \nThis term depends on the test coverage of the test cases. Even though we do  \nnot know the value of this term without proper measurements, in order to  \ncontinue this discussion let us assume that P(X|\u00ac\u03b8)=0.5P(X|\u00ac\u03b8)=0.5. \nAccordingly, \nP(X)=1\u00d7p+0.5\u00d7(1\u2212p)=0.5(1+p)P(X)=1\u00d7p+0.5\u00d7(1\u2212p)=0.5(1+p) \n \n\u2022 P(\u03b8|X)P(\u03b8|X) - Posteriori probability denotes the  conditional probability of  \nthe hypothesis \u03b8\u03b8 after observing the evidence XX. This is the probability of  \nobserving no bugs in our code given that it passes all the test cases. Since we", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2045, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f86265ef-7e8c-4d4f-aed1-535b66265922": {"__data__": {"id_": "f86265ef-7e8c-4d4f-aed1-535b66265922", "embedding": null, "metadata": {"page_label": "48", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fc2d4e46-1c1f-416c-9713-df4dccd191e1", "node_type": "4", "metadata": {"page_label": "48", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "f661093443eae26b7905c9e40442b241b8e18ae0447768e1fe265e3da823e98d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n42 \n \n \n \nnow know the values for the other three terms in the Bayes\u2019 theorem, we can  \ncalculate the posterior probability using the following formula: \n \nP(\u03b8|X)=1\u00d7p0.5(1+p)P(\u03b8|X)=1\u00d7p0.5(1+p) \nWe can also calculate the probability of observing a bug, given that our code \npasses all the test cases P(\u00ac\u03b8|X)P(\u00ac\u03b8|X) . \nP(\u00ac\u03b8|X)=P(X|\u00ac\u03b8).P(\u00ac\u03b8)P(X)=0.5\u00d7(1\u2212p)0.5\u00d7(1+p)=(1\u2212p)(1+p)P(\u00ac\u03b8|X)=P(X|\u00ac  \n\u03b8).P(\u00ac\u03b8) \nP(X)=0.5\u00d7(1\u2212p)0.5\u00d7(1+p)=(1\u2212p)(1+p) \nWe now know both conditional probabilities of observing a bug in the code  \nand not observing the bug in the code. Yet how are we going to confirm the  \nvalid hypothesis using these posterior probabilities? \n \nMaximum a Posteriori (MAP) \n \nWe can use MAP to determine the valid hypothesis from a set of hypotheses.  \nAccording to MAP, the hypothesis that has the maximum posterior \nprobability is considered as the valid hypothesis. Therefore, we can express  \nthe hypothesis \u03b8MAP\u03b8MAP that is concluded using MAP as follows: \n\u03b8MAP=argmax\u03b8P(\u03b8i|X)=argmax\u03b8(P(X|\u03b8i)P(\u03b8i)P(X))\u03b8MAP=argmax\u03b8P(\u03b8i|X)  \n=argmax\u03b8(P(X|\u03b8 i)P(\u03b8i)P(X)) \nThe argmax\u03b8argmax\u03b8 operator estimates the event or hypothesis \u03b8i\u03b8i that \nmaximizes the posterior probability P(\u03b8i|X)P(\u03b8i|X). Let us apply MAP to the \nabove example in order to determine the true hypothesis: \n\u03b8MAP=argmax\u03b8{\u03b8:P(\u03b8|X)=p0.5(1+p),\u00ac\u03b8:P(\u00ac\u03b8|X)=(1\u2212p)(1+p)}\u03b8MAP=argma  \nx\u03b8{\u03b8:P(\u03b8|X)=p0.5(1+p),\u00ac\u03b8:P(\u00ac\u03b8|X)=(1\u2212p)(1+p)}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1400, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d46d7b7-a148-4e6d-85eb-0ac4bb117fb7": {"__data__": {"id_": "3d46d7b7-a148-4e6d-85eb-0ac4bb117fb7", "embedding": null, "metadata": {"page_label": "49", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "65693c29-85ed-4324-aaa0-cfe2b8c03255", "node_type": "4", "metadata": {"page_label": "49", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "04d253ba5749f198a2ad58f701ea6bbb82675ab50474ee2fc7046f17ff8797ea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n43 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFigure 1 - P(\u03b8|X)P(\u03b8|X) and P(\u00ac\u03b8|X)P(\u00ac\u03b8|X) when changing the \nP(\u03b8)=pP(\u03b8)=p Figure 1 illustrates how the posterior probabilities of possible  \nhypotheses change with the value of prior probability. Unlike  frequentist \nstatistics where our belief or past experience had no influence on the \nconcluded hypothesis, Bayesian learning is capable of incorporating our \nbelief to improve the accuracy of predictions. Assuming that we have fairly  \ngood programmers and therefore the probability of observing a bug is \nP(\u03b8)=0.4P(\u03b8)=0.4 , then we find the \u03b8MAP\u03b8MAP: \nMAP=argmax\u03b8{\u03b8:P(|X)=0.40.5(1+0.4),\u00ac\u03b8:P(\u00ac\u03b8|X)=0.5(1\u22120.4)0.5(1+0.4)}=ar  \ngmax\u03b8{\u03b8:P(\u03b8|X)=0.57,\u00ac\u03b8:P(\u00ac\u03b8|X)=0.43}=\u03b8\u27f9No bugs present in our \ncodeMAP=argmax\u03b8{\u03b8:P(|X)=0.40.5(1+0.4),\u00ac\u03b8:P(\u00ac\u03b8|X)=0.5(1\u22120.4)0.5(1+0.4  \n)}=argmax\u03b8{\u03b8:P(\u03b8|X)=0.57,\u00ac\u03b8:P(\u00ac\u03b8|X)=0.43}=\u03b8\u27f9No bugs present in our \ncode", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 893, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4c154d2-0b9e-4ec2-adde-4e84b1b55aef": {"__data__": {"id_": "f4c154d2-0b9e-4ec2-adde-4e84b1b55aef", "embedding": null, "metadata": {"page_label": "50", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8a7d1e87-f736-43ec-9deb-2e2490717e64", "node_type": "4", "metadata": {"page_label": "50", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "a108564b5d00b7d0f99d5bac19f374876ef345894e5bf901beab86a4cc88153b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n44 \n \n \n \nHowever, P(X)P(X) is independent of \u03b8\u03b8, and thus P(X)P(X) is same for all  \nthe events or hypotheses. Therefore, we can simplify the \u03b8MAP\u03b8MAP \nestimation, without the denominator of each posterior computation as shown  \nbelow: \u03b8MAP=argmax\u03b8(P(X|\u03b8i)P(\u03b8i))\u03b8MAP=argmax\u03b8(P(X|\u03b8i)P(\u03b8i))  \nNotice that MAP estimation algorithms do not compute posterior probability  \nof each hypothesis to decide which is the most probable hypothesis. \nAssuming that our hypothesis space is continuous (i.e. fairn ess of the coin  \nencoded as probability of observing heads, coefficient of a regression model,  \netc.), where endless possible hypotheses are present even in  the smallest \nrange that the human mind can think of, or for even a discrete hypothesis  \nspace with a large number of possible outcomes for an event, we do not need  \nto find the posterior of each hypothesis in order to decide which is the most  \nprobable hypothesis. Therefore, the practical implementation of MAP \nestimation algorithms use approximation techniques, which are capable of  \nfinding the most probable hypothesis without computing posteriors or only \nby computing some of them. \n \nUsing the Bayesian theorem, we can now incorporate our belief as the prior  \nprobability, which was not possible when we used frequentist statistics. \nHowever, we still have the problem of deciding a sufficiently large number of  \ntrials or attaching a confidence to the concluded hypothesis. This is because  \nthe above example was solely designed to introduce the Bayesian theorem \nand each of its terms. Let us now gain a better understanding of \nBayesian learning to learn about the full potential of Bayes\u2019 theorem. \n \nBinomial Likelihood \nThe likelihood for the coin flip experiment is given by the probability of  \nobserving heads out of a ll the coin flips given the fairness of the coin. As we  \nhave defined the fairness of the coins (\u03b8\u03b8) using the probability of observing  \nheads for each coin flip, we can define the probability of observing heads or", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2044, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "90983f3d-d224-41f3-bf52-787b85bf483b": {"__data__": {"id_": "90983f3d-d224-41f3-bf52-787b85bf483b", "embedding": null, "metadata": {"page_label": "51", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ff79215d-d72a-4c0b-b6c9-f8d9987d5964", "node_type": "4", "metadata": {"page_label": "51", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "10f28cf25a848e2e4ff92599e0d4830e5cff074e14fd8b2d6a4d77ffc2c71493", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n45 \n \n \n \ntails given the fairness of the coin P(y|\u03b8)P(y|\u03b8) where y=1y=1 for observing \nheads and y=0y=0 for observing tails. Accordingly: \nP(y=1|\u03b8)=\u03b8P(y=0|\u03b8)=(1\u2212\u03b8)P(y=1|\u03b8)=\u03b8P(y=0|\u03b8)=(1\u2212\u03b8)  \nNow that we have defined two conditional probabilities for each outcome \n \nabove, let us now try to find the P(Y=y|\u03b8)P(Y=y|\u03b8) joint probability of \nobserving heads or tails: \nP(Y=y|\u03b8)={\u03b8, if y=11\u2212\u03b8, otherwise P(Y=y|\u03b8)={\u03b8, if y=11\u2212\u03b8, otherwise \nNote that yy can only take either 00 or 11, and \u03b8\u03b8 will lie within the range of  \n[0,1][0,1]. We can rewrite the a bove expression in a single expression as  \nfollows: \nP(Y=y|\u03b8)=\u03b8y\u00d7(1\u2212\u03b8)1\u2212yP(Y=y|\u03b8)=\u03b8y\u00d7(1\u2212\u03b8)1\u2212y \nThe above equation represents the likelihood of a single test coin flip \nexperiment. \nInterestingly, the likelihood function of the single coin flip experiment is  \nsimilar to the Bernoulli probability distribution. The Bernoulli distribution is  \nthe probability distribution of a single trial experiment with only two \nopposite   outcomes.   As   the   Bernoulli   probability   distribution   is   the \nsimplification of Binomial probability distribution for a single trail, we can \n \nrepresent the likelihood of a coin flip experiment that we ob serve kk number \nof heads out of NN number of trials as a Binomial probability distribution as  \nshown below: \nP(k,N|\u03b8)=(Nk)\u03b8k(1\u2212\u03b8)N\u2212k", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1355, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "81fb0560-3b71-4e9a-b762-6c6850b894ac": {"__data__": {"id_": "81fb0560-3b71-4e9a-b762-6c6850b894ac", "embedding": null, "metadata": {"page_label": "52", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0bf54a36-cbf2-4c30-867a-2ffb9a37763e", "node_type": "4", "metadata": {"page_label": "52", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "43d7a1282af9164a06dcdc03dc127479f86c989db68224d679a95a54b1c7e6ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n46 \n \n \n \nMaximum likelihood estimation method (MLE) \n \nThe likelihood function indicates how likely the observed sample is as a  \nfunction of possible parameter values. Therefore, maximizing the likelihood  \nfunction determines the parameters that are most likely to produce the \nobserved data. From a statistical point of view, MLE is usually recommended  \nfor large samples because it is versatile, applicable to most models and \ndifferent types of data, and produces the most precise estimates. \n \nLeast squares estimation method (LSE) \n \nLeast squares estimates are calculated by fitting a regression line to the points  \nfrom a data set that has the minimal sum of the deviations squared (least  \nsquare error). In reliability analysis, the line and the data are plotted on a  \nprobability plot. \nBayes Optimal Classifier \n \nThe Bayes optimal classifier is a probabilistic model that make s the most  \nprobable prediction for a new example, given the training dataset. \n \nThis model is also referred to as the Bayes optimal learner, the Bayes \nclassifier, Bayes optimal decision boundary, or the Bayes optimal \ndiscriminant function. \n \nGibbs Sampling Algorithm \nWe start off by selecting an initial value for the random variables X & Y. \nThen, we sample from the conditional probability distribution of X given Y =  \nY\u2070 denoted p(X|Y\u2070). In the next step, we sample a new value of Y conditional  \non X\u00b9, which we just computed. We repeat the procedure for an additional n - \n1 iterations, alternating between drawing a new sample from the conditional  \nprobability distribution of X and the conditional probability distribution of Y, \ngiven the current value of the other random variable.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1719, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc004d94-8c54-47dd-8265-4833a83e0a6d": {"__data__": {"id_": "dc004d94-8c54-47dd-8265-4833a83e0a6d", "embedding": null, "metadata": {"page_label": "53", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "baec49e7-18e2-4a80-851c-396e3b97dc16", "node_type": "4", "metadata": {"page_label": "53", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "9bcd80fbafc50c597eb3e58b32aa4eb935f5918a79d85f47faf51b93bbd974bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n47 \n \n \n \nLet\u2019s take a look at an example. Suppose we had the following posterior and \nconditional probability distributions. \n \n \n \n \n \n \n \n \n \n \n \n \n \nNaive Bayes Classifier Algorithm \n\u2022 Na\u00efve Bayes algorithm is a supervised learning algorithm, which is based on \nBayes theorem and used for solving classification problems.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 350, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4574737b-433c-4561-ac5b-2ed4be5a4c39": {"__data__": {"id_": "4574737b-433c-4561-ac5b-2ed4be5a4c39", "embedding": null, "metadata": {"page_label": "54", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "90457503-0ddb-4f26-9f67-ad277e4c7133", "node_type": "4", "metadata": {"page_label": "54", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "669704cba7c44148b8651ff331f71508d4cbf8a65d5bad9f538f4a70ff3178c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n48 \n \n \n \n\u2022 It is mainly used in text classification that includes a high-dimensional \ntraining dataset. \n\u2022 Na\u00efve Bayes Classifier is one of the simple and most effective Classification  \nalgorithms which helps in building the fast machine learning models that can  \nmake quick predictions. \n\u2022 It is a probabilistic classifier, which means it predicts on the basis of the  \nprobability of an object. \n\u2022 Some popular examples of Na\u00efve Bayes Algorithm are spam filtration, \nSentimental analysis, and classifying articles. \nEXAMPLE \nSuppose we have a dataset of weather conditions and corresponding target  \nvariable \" Play\". So using this dataset we need to decide that whether we  \nshould play or not on a particular day according to the weather conditions. So  \nto solve this problem, we need to follow the below steps: \n \n1. Convert the given dataset into frequency tables. \n2. Generate Likelihood table by finding the probabilities of given features. \n3. Now, use Bayes theorem to calculate the posterior probability.  \nProblem: If the weather is sunny, then the Player should play or not? \nSolution: To solve this, first consider the below dataset: \n \nOutlook \n  \nPlay \n0 Rainy Yes \n1 Sunny Yes \n \n2 \n \nOvercast \n \nYes \n3 Overcast Yes \n \n4 \n \nSunny \n \nNo \n5 Rainy Yes \n \n6 \n \nSunny \n \nYes", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1316, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05ae9233-74b1-4b17-ae8c-f506b6206ce2": {"__data__": {"id_": "05ae9233-74b1-4b17-ae8c-f506b6206ce2", "embedding": null, "metadata": {"page_label": "55", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7b40f8b-aed5-4453-8e75-e7e5fcab50af", "node_type": "4", "metadata": {"page_label": "55", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "3210ef683518134821b34c927225e0bef5776f92fc7c2be867b36458088a25ea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nFrequency table for the Weather Conditions: \n \n \n \n \n \n \n \n \n \n \n \nLikelihood table weather condition: \nWeather No Yes   \n \nOvercast \n \n0 \n \n5 \n \n5/14= 0.35 \nRainy 2 2 4/14=0.29 \n \nSunny \n \n2 \n \n3 \n \n5/14=0.35 \nAll 4/14=0.29 10/14=0.71  \n \nApplying Bayes'theorem: \n \nP(Yes|Sunny)= P(Sunny|Yes)*P(Yes)/P(Sunny) \n49 \n \n7 Overcast Yes \n \n8 \n \nRainy \n \nNo \n9 Sunny No \n \n10 \n \nSunny \n \nYes \n11 Rainy No \n \n12 \n \nOvercast \n \nYes \n13 Overcast Yes \n \n \nWeather \n \nYes \n \nNo \n \nOvercast \n \n5 \n \n0 \n \nRainy \n \n2 \n \n2 \n \nSunny \n \n3 \n \n2 \nTotal 10 5", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 601, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "625d2351-b4cd-40f0-9fd5-32f94ccd25b1": {"__data__": {"id_": "625d2351-b4cd-40f0-9fd5-32f94ccd25b1", "embedding": null, "metadata": {"page_label": "56", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "58b0cac7-3727-4757-bb04-6afe22f82411", "node_type": "4", "metadata": {"page_label": "56", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "fb0d3e0d830eb6cf5ab5be209cea04b8b51b795f51faad259d0019b7b6793e12", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n50 \n \n \n \nP(Sunny|Yes)= 3/10= 0.3 \n \nP(Sunny)= 0.35 \nP(Yes)=0.71 \nSo P(Yes|Sunny) = 0.3*0.71/0.35= 0.60 \nP(No|Sunny)= P(Sunny|No)*P(No)/P(Sunny) \nP(Sunny|NO)= 2/4=0.5 \nP(No)= 0.29 \n \nP(Sunny)= 0.35 \n \nSo P(No|Sunny)= 0.5*0.29/0.35 = 0.41 \n \nBayesian Belief Network: \n \nIt is a graphical representation of different probabilistic relationships among \nrandom variables in a  particular set. It is a classifier with no dependency on \nattributes i.e it is condition independent. Due to its feature of joint probability, the  \nprobability in Bayesian Belief Network is derived, based on a condition \u2014 \nP(attribute/parent) i.e probability of an attribute, true over parent attribute. \n \nConsider this example: \n \n \n \n \n\u2022 In the above figure, we have an alarm \u2018A\u2019 \u2013 a node, say installed in a house \nof a person \u2018gfg\u2019, which rings upon two probabilities i.e burglary \u2018B\u2019 and fire", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e537c4b7-2f4b-47f6-b7db-6d2d8fca25cc": {"__data__": {"id_": "e537c4b7-2f4b-47f6-b7db-6d2d8fca25cc", "embedding": null, "metadata": {"page_label": "57", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c0b6c019-8fae-456c-9911-cde7953e0564", "node_type": "4", "metadata": {"page_label": "57", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "5d43142d52df1672b5d07580a023e2caa799e2d5f5ed5a5f75c206f951d0ce31", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n51 \n \n \n \n\u2018F\u2019, which are \u2013 parent nodes of the alarm node. The alarm is the parent node  \nof two probabilities P1 calls \u2018P1\u2019 & P2 calls \u2018P2\u2019 person nodes. \n \n\u2022 Upon the instance of  burglary and fire, \u2018P1\u2019 and \u2018P2\u2019 call person \u2018gfg\u2019,  \nrespectively. But, there are few drawbacks in this case, as sometimes \u2018P1\u2019  \nmay forget to call the person \u2018gfg\u2019, even after hearing the alarm, as he has a  \ntendency to forget things, quick.  Similarly, \u2018P2\u2019, sometimes fails to call the  \nperson \u2018gfg\u2019, as he is only able to hear the alarm, from a certain distance. \nExpectation-Maximization Algorithm \nIn the real -world applications of machine learning, it is very common that  \nthere are many relevant features available for learning but only a small subset  \nof them are observable. So, for the variables which are sometimes observable  \nand sometimes not, then  we can use the instances when that variable is \nvisible is observed for the purpose of learning and then predict its value in the  \ninstances when it is not observable. \nOn the other hand, Expectation-Maximization algorithm can be used for the  \nlatent variables (variables that are not directly observable and are actually  \ninferred from the values of the other observed variables) too in order to  \npredict their values with the condition that the general form of probability  \ndistribution governing those latent variables is known to us. This algorithm is  \nactually at the base of many unsupervised clustering algorithms in the field of  \nmachine learning. \nIt was explained, proposed and given its name in a paper published in 1977 \nby Arthur Dempster, Nan Laird, and Donald Rubin. It is used to find the local \nmaximum likelihood parameters of a statistical model in the cases where  \nlatent variables are involved and the data is missing or incomplete. \n \n \nAlgorithm: \n1. Given a set of incomplete data, consider a set of starting parameters. \n2. Expectation step (E \u2013 step): Using the observed available data of the \ndataset, estimate (guess) the values of the missing data. \n3. Maximization step (M \u2013 step): Complete data generated after the \nexpectation (E) step is used in order to update the parameters. \n4. Repeat step 2 and step 3 until convergence.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2245, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e9a6f0a1-0da7-4c61-9595-7f03cbda8f91": {"__data__": {"id_": "e9a6f0a1-0da7-4c61-9595-7f03cbda8f91", "embedding": null, "metadata": {"page_label": "58", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ee9182eb-076e-47e1-a2d8-9189f5a7efa7", "node_type": "4", "metadata": {"page_label": "58", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "2eb3b3260ecf8d87e41a7c22aaf60b515b9818ccb695138faf69c9fce763c6d4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n52 \n \n \n \n \nThe essence of Expectation -Maximization algorithm is to use the available  \nobserved data of the dataset to estimate the missing data and then using that  \ndata to update the values of the parameters. Let us understand the EM \nalgorithm in detail. \n\u2022 Initially, a set of initial values of the parameters are considered. A set of  \nincomplete observed data is given to the system with the assumption that the  \nobserved data comes from a specific model. \n\u2022 The next step is known as \u201cExpectation\u201d \u2013 step or E-step. In this step, we use  \nthe observed data in order to estimate or guess the values of the missing or  \nincomplete data. It is basically used to update the variables. \n\u2022 The next step is known as \u201cMaximization\u201d-step or M-step. In this step, we \nuse the complete data generated  in the preceding \u201cExpectation\u201d  \u2013 step in  \norder to update the values of the parameters. It is basically used to update the  \nhypothesis. \n\u2022 Now, in the fourth step, it is checked whether the values are converging or  \nnot, if yes, then stop otherwise repeat step-2 and step-3 i.e. \u201cExpectation\u201d \u2013 \nstep and \n\u201cMaximization\u201d \u2013 step until the convergence occurs. \n \nFlow chart for EM algorithm", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1220, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d0150f0d-6bd7-41a5-8096-5f9b542dbcf2": {"__data__": {"id_": "d0150f0d-6bd7-41a5-8096-5f9b542dbcf2", "embedding": null, "metadata": {"page_label": "59", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4de6c00c-6f0c-4b2d-8687-f62e1fe794d9", "node_type": "4", "metadata": {"page_label": "59", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "22c25cc9a93cedc2941e297f246be43380c1e2f76f5a8faac702a91dd0d50bf8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n53 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nUsage of EM algorithm \n\u2022 It can be used to fill the missing data in a sample. \n\u2022 It can be used as the basis of unsupervised learning of clusters. \n\u2022 It can be used for the purpose of estimating the parameters of Hidden Markov \nModel (HMM). \n\u2022 It can be used for discovering the values of latent variables. \n \nAdvantages of EM algorithm \n\u2022 It is always guaranteed that likelihood will increase with each iteration. \n\u2022 The E-step and M-step are often pretty easy for many problems in terms of \nimplementation. \n\u2022 Solutions to the M-steps often exist in the closed form.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 625, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "530967e6-a244-4588-8eea-f351ea4476d0": {"__data__": {"id_": "530967e6-a244-4588-8eea-f351ea4476d0", "embedding": null, "metadata": {"page_label": "60", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f7d41a28-952c-4f6d-a934-097160d61b6e", "node_type": "4", "metadata": {"page_label": "60", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "2fafbcdfe841ec3c59b429bdc07215c86e045a69298f6c5ac7763c8a7fdcc883", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n54 \n \n \n \nInstance-based learning \nThe Machine Learning systems which are categorized as instance-based \nlearning are the systems that learn the training examples by heart and then  \ngeneralizes to new instances based on some similarity measure. It is called  \ninstance-based because it builds the hypotheses from the training instances.  \nIt is also known as memory-based learning or lazy-learning. The time  \ncomplexity of this algorithm depends upon the size of training data. The  \nworst-case time complexity of this algorithm is O (n), where n is the \nnumber of training instances. \nFor example, If we were to create a spam filter with an instance-based \nlearning algorithm, instead of just flagging emails that are already marked as  \nspam emails, our spam filter would be programmed to also flag  emails that \nare very  similar to  them. This  requires a measure of resemblance between  \ntwo emails. A similarity measure between two emails could be the same  \nsender or the repetitive use of the same keywords or something else. \n \n \nAdvantages: \n1. Instead of estimating for the entire instance set, local approximations can be \nmade to the target function. \n2. This algorithm can adapt to new data easily, one which is collected as we go. \n \n \n \n \n \n \n \n \n \nDisadvantages: \n1. Classification costs are high \n2. Large amount of memory required to store the data, and each  \nquery involves starting the identification of a local model from scratch.  \nSome of the instance-based learning algorithms are : \n1. K Nearest Neighbor (KNN) \n2. Self-Organizing Map (SOM) \n3. Learning Vector Quantization (LVQ) \n4. Locally Weighted Learning (LWL)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1669, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bf2d87e9-75a5-4f6b-90f0-1308373d9b89": {"__data__": {"id_": "bf2d87e9-75a5-4f6b-90f0-1308373d9b89", "embedding": null, "metadata": {"page_label": "61", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2cce1757-e0da-4279-8c8d-6b5b36c660c3", "node_type": "4", "metadata": {"page_label": "61", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "9725fc55bc3df012d8b9045ee090ecd73ebd8edd474d02798c8a5a184d3fff74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n55 \n \n \n \n \n \nK-Nearest Neighbor(KNN) Algorithm \n\u2022 K-Nearest Neighbour is one of the simplest Machine Learning algorithms  \nbased on Supervised Learning technique. \n\u2022 K-NN algorithm assumes the similarity between the new case/data and \navailable cases and put the new case into the category that is most similar to  \nthe available categories. \n\u2022 K-NN algorithm stores all the available data and classifies a new data point  \nbased on the similarity. This means when new data appears then it can be  \neasily classified into a well suite category by using K- NN algorithm. \n\u2022 K-NN algorithm can be used for Regression as well as for Classification but  \nmostly it is used for the Classification problems. \n\u2022 K-NN is a non-parametric algorithm , which means it does not make any  \nassumption on underlying data. \n\u2022 It is also called a lazy learner algorithm because it does not learn from the  \ntraining set immediately instead it stores the dataset and at the time of \nclassification, it performs an action on the dataset. \n\u2022 KNN algorithm at the training phase just stores the dataset and when it gets  \nnew data, then it classifies that data into a category that  is much similar to the \nnew data. \nWorking of KNN Algorithm \nK-nearest neighbours (KNN) algorithm uses  \u2018feature similarity\u2019 to  predict \nthe values of new data  points which further means that the new data point  \nwill be assigned a value based on how closely it matches the points in the  \ntraining set. We can understand its working with the help of following steps \n\u2212 \nStep 1 \u2212 For implementing any algorithm, we need dataset. So during the \nfirst step of KNN, we must load the training as well as test data. \nStep 2 \u2212 Next, we need to choose the value of K i.e. the nearest data points. \nK can be any integer. \nStep 3 \u2212 For each point in the test data do the following", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1862, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c3cafed-7b42-46bf-8e58-65339d4f3d39": {"__data__": {"id_": "2c3cafed-7b42-46bf-8e58-65339d4f3d39", "embedding": null, "metadata": {"page_label": "62", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "dc3cf000-5124-4e1e-ac7a-58aa6c5e3f60", "node_type": "4", "metadata": {"page_label": "62", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "8ee96fdd0366c929ee3852d48c0b1c7512ec4cd8d8b7f6c8afedaa5e25aad678", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n56 \n \n \n \n\u2022 3.1 \u2212 Calculate the distance between test data  and each row of training data  \nwith the help of any of the method namely: Euclidean, Manhattan or \nHamming distance. The most commonly used method to calculate distance is  \nEuclidean. \n\u2022 3.2 \u2212 Now, based on the distance value, sort them in ascending order. \n\u2022 3.3 \u2212 Next, it will choose the top K rows from the sorted array. \n\u2022 3.4 \u2212 Now, it will assign a class to the test point based on most frequent class  \nof these rows. \nStep 4 \u2013 End \nEXAMPLE : \n \nCase Based Reasoning \n \nAs we know Nearest Neighbour classifiers stores training tuples as points in \nEuclidean space. But Case-Based Reasoning classifiers (CBR) use a \ndatabase of problem solutions to solve new problems. It stores the tuples or  \ncases for problem-solving as complex symbolic descriptions. \nHow CBR works? \nWhen a new case arrises to classify, a Case -based Reasoner(CBR) will first  \ncheck if an identical training case exists. If one is found, then the \naccompanying solution to that case is returned. If no identical case is found,  \nthen the CBR will search for training c ases having components that are \nsimilar to those of the new case. Conceptually, these training cases may be  \nconsidered as neighbours of the new case. If cases are represented as graphs,  \nthis involves searching for subgraphs that are similar to subgraphs wi thin the \nnew case. The CBR tries to combine the solutions of the neighbouring \ntraining cases to propose a solution for the new case. If compatibilities arise  \nwith the individual solutions, then backtracking to search for other solutions", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1638, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bdcff47e-8656-4c8f-89d2-7ff10e9b2fe9": {"__data__": {"id_": "bdcff47e-8656-4c8f-89d2-7ff10e9b2fe9", "embedding": null, "metadata": {"page_label": "63", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "63a27588-5d14-4fc6-ac18-24e6da22e53d", "node_type": "4", "metadata": {"page_label": "63", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "0ca9255daec67c0cb48ae07bd009cecf5b22eb477586a59c98577f676300591e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n57 \n \n \n \nmay be necessary. The CBR may employ background knowledge and \nproblem-solving strategies to propose a feasible solution. \nApplications of CBR includes: \n1. Problem resolution for customer service help desks, where cases describe \nproduct-related diagnostic problems. \n2. It is also applied to areas such as engineering and law, where cases are either \ntechnical designs or legal rulings, respectively. \n3. Medical educations, where patient case histories and treatments are used to \nhelp diagnose and treat new patients. \n \nChallenges with CBR \n\u2022 Finding a good similarity metric (eg for matching subgraphs) and suitable \nmethods for combining solutions. \n\u2022 Selecting salient features for indexing training cases and the development of \nefficient indexing techniques. \n \nCBR becomes more intelligent as the number of the trade-off between \naccuracy and efficiency evolves as the number of stored cases becomes very  \nlarge. But after a certain point, the system\u2019s efficiency will suffer as the time  \nrequired to search for and process relevant cases increases. \n \n \nSome differences on eager and lazy learning \n\u2022 Eager learning methods construct general, explicit description of the target \nfunction based on the provided training examples. \n\u2022 Lazy learning methods simply store the data and generalizing beyond these \ndata is postponed until an explicit request is made. \n\u2022 Lazy learning methods can construct a different approximation to the target \nfunction for each encountered query instance. \n \nLazy learning is very suitable for complex and incomplete problem domains, \nwhere a complex target function can be represented by a collection of less  \ncomplex local approximations. \nEager learning methods use the same approximation to the target function,  \nwhich must be learned based on training examples and before input queries  \nare observed.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1887, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1859e123-b79f-48d1-9402-5bf2957a0bfd": {"__data__": {"id_": "1859e123-b79f-48d1-9402-5bf2957a0bfd", "embedding": null, "metadata": {"page_label": "64", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "60ea04fd-3057-49c1-b1cf-7ba1cbcd3b24", "node_type": "4", "metadata": {"page_label": "64", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "eba0acd1d08a7beea2ce0ffb7397cb8c49a8e44b3f53d05030c6b9c2f7a34109", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n58 \n \n \n \nUNIT - IV \nPATTERN COMPARISON TECHNIQUES \n \n \nPattern recognition is a process of finding regularities and similarities in data  \nusing machine learning data. Now, these similarities can be found based on  \nstatistical analysis, historical data, or the already gained knowledge by the \nmachine itself. A pattern is a regularity in the world or in abstract notions. If we  \ndiscuss sports, a description of a type would be a pattern. If a person keeps  \nwatching videos related to cricket, Y ouTube wouldn\u2019t recommend them chess  \ntutorials videos. \nExamples: Speech recognition, speaker identification, multimedia document  \nrecognition (MDR), automatic medical diagnosis. \n \nBefore searching for a pattern there are some certain steps and the first one is to \ncollect the data from the real world. The collected data needs to be filtered and  \npreprocessed so that its system can  extract the features  from the data. Then  \nbased on the type of the data system will choose the appropriate algorithm  \namong Classification, Regression, and Regression to recognize the pattern. \n\u2022 Classification. In classification, the algorithm assigns labels to data based on \nthe predefined features. This is an example of supervised learning. \n\u2022 Clustering. An algorithm splits data into a number of clusters based on the  \nsimilarity of features. This is an example of unsupervised learning. \n\u2022 Regression. Regression algorithms try to find a relationship between variables  \nand predict unknown dependent variables based on known data. It is based on  \nsupervised learning. [2] \n\u2022 Features can be represented as continuous, discrete, or discrete binary \nvariables. A feature is basically a function of one or more measurements, \ncomputed to quantify the significant characteristics of the object. The feature is  \none of the most important components in the Pattern Recognition system. \nExample: consider a football, shape, size and color, etc. are features of the  \nfootball.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2001, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f27522a2-854c-4246-a57e-a899f1b74b72": {"__data__": {"id_": "f27522a2-854c-4246-a57e-a899f1b74b72", "embedding": null, "metadata": {"page_label": "65", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f1d7a38-700f-41c9-a716-7831eb41507f", "node_type": "4", "metadata": {"page_label": "65", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "906ec1fefff5e214d71de4b793446917747b3a875a84a4d483d311957db91656", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n59 \n \n \nA feature vector is a set of features that are taken together. \nExample: In the above example of football, if all the features (shape, size, color  \netc.) taken together then the sequence is feature vector ([shape, size, color]). \nThe feature vector is the sequence of features represented as an n -dimensional \ncolumn vector. In the case of speech, MFCC (Mel-frequency Cepstral \nCoefficient) is the spectral features of the speech. The sequence of the first 13  \nfeatures forms a feature vector. \n \n \nTemporal patterns \n \n \nTemporal patterns are  one of the pattern comparison techniques that is defined  \nas a segment of signals that recurs frequently in the whole temporal signal  \nsequence. For example, the temporal signal sequences could be the movements  \nof head, hand, and body, a piece of music, and so on. \nTemporal abstraction and data mining are two research fields that have tried to  \nsynthesis time  oriented data  and bring out  an understanding on the hidden  \nrelationships t hat may exist between time oriented events. In clinical settings,  \nhaving the  ability to know the hidden  relationships on patient data  as they \nunfold could help save a life by aiding in detection of conditions that are not  \nobvious to clinicians and healthcare workers. Understanding the hidden patterns  \nis a huge challenge due to the exponential search space unique to time -series \ndata. In this paper, we propose a temporal pattern recognition model based on  \ndimension reduction and similarity measures th ereby maintaining the temporal  \nnature of the raw data \n \n \nINTRODUCTION \nTemporal pattern processing is important  for various  intelligent behaviours, \nincluding hearing, vision, speech, music and motor control. Because we live in  \nan ever-changing environment, an intelligent system, whether it be a human or a  \nrobot, must encode patterns over time, recognize and generate temporal \npatterns. Time is embodied in a temporal pattern in two different ways: \u2022 \nTemporal order. It refers to the ordering among the components  of a sequence.  \nFor example, the sequence N-E-T is different from T-E-N. Temporal order may", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2168, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "369cc6e1-8726-4be7-9936-a03b83c70f49": {"__data__": {"id_": "369cc6e1-8726-4be7-9936-a03b83c70f49", "embedding": null, "metadata": {"page_label": "66", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ba81823e-442d-4811-9439-8aba19ef982c", "node_type": "4", "metadata": {"page_label": "66", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "0205000528b983f3e0c80eeeb9fea5fe9248c82deda1b5cc6b8e9dd3c3b31330", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n60 \n \n \nalso refer to a syntactic structure, such as subject-verb-object, where each \ncomponent may be any of a category of possible symbols \n\u2022 Time duration. Duration can play a critical role for temporal processing. In  \nspeech recognition, for example, we want rate invariance while distinguishing  \nrelative durations of the vowel /i:/ (as in beet) and /i/ (as in bit) \nTEMPORAL PATTERN RECOGNITION \nThe shared goal of all STM models is to make input history available \nsimultaneously when recognition takes place. With a  STM model in place,  \nrecognition is not much different from the recognition of static patterns. \n \nTemplate Matching Using Hebbian Learning \nThe architecture for this type of recognition is simply a two -layer network: the  \ninput layer that incorporates STM, and the sequence recognition layer where  \neach unit encodes an individual sequence. The recognition scheme is essentially \ntemplate matching, where templates are formed  through following Hebbian \nlearning \n \nWij(t) = Wij(t\u20131) + C si (t)[xj (t) \u2013 Wij(t\u20131)] \n \nwhere Wij is the connection weight from unit xj in the input layer to sequence  \nrecognizer si in the recognition layer. Parameter C controls learning rate. \nHebbian learning is applied after the presentation of the entire sequence is  \ncompleted. The templates thus formed can be used to recognize specific input  \nsequences. The recognition layer typically includes recurren t connections for  \nselecting a winner by self -organization (e.g. winner -take-all) during training or  \nrecognition. \n \nAssociative Memory Approach \nThe dynamics of the Hopfield associative memory model can be characterized \nas evolving towards the memory state most similar to the current input pattern.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1757, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "006f567d-140b-4b42-b80e-19d13d626cf1": {"__data__": {"id_": "006f567d-140b-4b42-b80e-19d13d626cf1", "embedding": null, "metadata": {"page_label": "67", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "758ae0da-c44c-405d-b2b5-a2c010513a86", "node_type": "4", "metadata": {"page_label": "67", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "8a2c69c4eca535c771936ad580183fb08220cf0b4b5474d9b8cf07dc4b7ce356", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n61 \n \n \nIf one views each memory state as a category, the Hopfield net performs pattern  \nrecognition: the recalled category is the recognized pattern. This process of  \ndynamic evolution can also be viewed as an optimization process, which \nminimizes a cost function until equilibrium is reached. \nWith normalized exponential kernel STM, Tank and Hopfield (1987) described \na recognition network based on associative memory dynamics. A layer of \nsequence recognizers receives inputs from the STM model. Each recognizer  \nencodes a different template sequence by its unique weight vector acting upon  \nthe inputs in STM. In addition, recognizers form a competitive network. The  \nrecognition process uses the current input sequence (evidence) to bias a \nminimization process so that the most similar template wins the competition,  \nthus activating its corresponding recognizer. Due to  the exponential  kernels, \nthey demonstrated that recognition is fairly robust to time warping, distortions \nin duration. A similar architecture is later applied to speakerindependent spoken  \ndigit recognition. \n \nMultilayer Perceptrons \nA popular approach to temporal pattern learning is multilayer perceptrons \n(MLP). MLPs have been demonstrated to be effective for static pattern \nrecognition. It is natural to combine MLP with an STM model to do temporal  \npattern recognition. For example, using delay line STM Waibel et al. (1989)  \nreported an architecture called Time Delay Neural Networks (TDNN) for \nspoken phoneme recognition. Besides the input layer, TDNN uses 2 hidden  \nlayers and an output layer where each unit encodes one phoneme. The feed  \nforward connections converge from the input layer to each successive layer so  \nthat each unit  in a specific layer receives inputs within a limited time window  \nfrom the previous layer. They demonstrated good recognition performance: for  \nthe three stop consonants /b/, /d/, and /g/, the accuracy of speaker dependent  \nrecognition reached 98.5%. \nDYNAMIC TIME WARPING \nSounds like time traveling or some kind of future technic, however, it is not.  \nDynamic Time Warping is used to compare the similarity or calculate the", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2197, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "73730333-e2c6-49f6-9622-d959a8827487": {"__data__": {"id_": "73730333-e2c6-49f6-9622-d959a8827487", "embedding": null, "metadata": {"page_label": "68", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "585d4e5a-127a-41ed-ac59-669e2dcac938", "node_type": "4", "metadata": {"page_label": "68", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "8b0898145c82c03eed472b98c5fef238d196fa69e64de432a4118ff9112207cf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n62 \n \n \ndistance between two arrays or time series with different length. Suppose we \nwant to calculate the distance of two equal-length arrays: \na = [1, 2, \n3] b = [3, \n2, 2] \nHow to do that? One obvious way is to match up a and b in 1 -to-1 fashion and  \nsum up the total distance of each component. This sounds easy, but what if a \nand b have different lengths? \na = [1, 2, 3] b \n= [2, 2, 2, 3, \n4] \nHow to match them up? Which should map to which? To solve the problem,  \nthere comes dynamic time warping. Just as its name indicates, to warp the series  \nso that they can match up. \n \nUse Cases \nBefore digging into the algorithm, you might have the question that is it useful?  \nDo we really need to compare the distance between two unequal -length time  \nseries? \nYes, in a lot of scenarios DTW is playing a key role. \nSound Pattern Recognition \nOne use case is to detect the sound pattern of the same kind. Suppose we want \nto recognise the voice of a person by analysing his sound track, and we are able  \nto collect his sound track of saying Hello in one scenario. However, people  \nspeak in the same word in different ways, what if he speaks hello in a much  \nslower pace like Heeeeeeelloooooo , we will need an algorithm to match up the  \nsound track of different lengths and be able to identify they come from the same  \nperson.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1365, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48d9505d-5e1b-490b-ac23-960878aff608": {"__data__": {"id_": "48d9505d-5e1b-490b-ac23-960878aff608", "embedding": null, "metadata": {"page_label": "69", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ce13a58e-401f-458b-ac74-19ba21a742fe", "node_type": "4", "metadata": {"page_label": "69", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "5a15939a1859ff6a10d469d0523266d18b19854f5c76194bca42b43e8eeabc3b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n63 \n \n \n \n \n \n \n \n \n \n \n \nStock Market \nIn a stock market, people always hope to be able to predict the future, however  \nusing general machine learning algorithms can be exhaustive, as most prediction  \ntask requires test and training set to have the same dimension of features. \nHowever, if you ever speculate in the stock market, you will know that even the  \nsame pattern of a stock can have very different length reflection on klines and  \nindicators.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 481, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aad75516-a562-4b2a-bfad-958b2909599a": {"__data__": {"id_": "aad75516-a562-4b2a-bfad-958b2909599a", "embedding": null, "metadata": {"page_label": "70", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29ad55c7-1f0c-4b0e-b915-b79f19e83500", "node_type": "4", "metadata": {"page_label": "70", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "a10211b668ab3f833a68bac60b7007e006775fb23d3ec315ae1488abdd94554d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n64 \n \n \n \n \n \n \n \nIn time series analysis, dynamic time warping (DTW) is one of the algorithms \nfor measuring similarity between two temporal sequences, which may vary in  \nspeed. DTW has been applied to temporal sequences of video, audio, and \ngraphics data \u2014 indeed, any data that can be turned into a linear sequence can \nbe analysed with DTW. \nThe idea to compare arrays with different length is to build one -to-many and  \nmany-to-one matches so that the total distance can be minimised between the  \ntwo. \n \n \n \n \nSuppose we have two different arrays red and blue with different length:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 617, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "304578a0-98bb-4f08-8e37-a010c5e7fbc7": {"__data__": {"id_": "304578a0-98bb-4f08-8e37-a010c5e7fbc7", "embedding": null, "metadata": {"page_label": "71", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8df8adcc-526f-4a76-b1df-8083d47a5fa5", "node_type": "4", "metadata": {"page_label": "71", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "95852df4562d68a78c075e399ea6e800635704f6b1315226eecc0dcbc4b62d83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n65 \n \n \n \n \n \n \n \nClearly these two series follow the same pattern, but the blue curve is longer \nthan the red. If we apply the one -to-one match, shown in the top, the mapping is  \nnot perfectly synced up and the tail of the blue curve is being left out. \n \nDTW overcomes the issue by developing a one -to-many match so that the  \ntroughs and peaks with the same pattern are perfectly matched, and there is no  \nleft out for both curves(shown in the bottom top).", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 488, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "494707a4-9bf9-4808-9bed-abd1e398de6d": {"__data__": {"id_": "494707a4-9bf9-4808-9bed-abd1e398de6d", "embedding": null, "metadata": {"page_label": "72", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9035192a-eafa-4295-8c82-0f5c57a625d4", "node_type": "4", "metadata": {"page_label": "72", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "d80f04927811422e5c148cd4e4ca0e4d486e9a56d7f7395325bc183596ddae04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department Of CSE MRCET \n66 \n \n \nl > \nk \nRules \nIn general, DTW is a method that calculates an optimal match between  two \ngiven sequences (e.g. time series) w ith certain restriction and rules(comes from  \nwiki): \n \n\u2022 Every index from the first sequence must be matched with one or more indices \nfrom the other sequence and vice versa \n \n\u2022 The first index from the first sequence must be matched with the first index from  \nthe other sequence (but it does not have to be its only match) \n\u2022 The last index from the first sequence must be matched with the last index from \nthe other sequence (but it does not have to be its only match) \n\u2022 The mapping of the indices from the first sequence to indices from the other \nsequence must be monotonically increasing, and vice versa, i.e. if \nfrom the first sequence, then \nare indices \nthere must not be two indices in the other sequence, such \n \n \nthat index i is matched with index  l and index j is matched with index  k , and \nvice versa. \nThe optimal match is denoted by the match that satisfies all the restrictions and  \nthe rules and that has the minimal cost, where the cost is computed as the sum of  \nabsolute differences, for each matched pair of indices, between their values. \nj > i", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1238, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4e955642-d956-43c9-a52a-5d20243a1b00": {"__data__": {"id_": "4e955642-d956-43c9-a52a-5d20243a1b00", "embedding": null, "metadata": {"page_label": "73", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ea3be9af-fcff-4e9e-bd60-c87e5255a430", "node_type": "4", "metadata": {"page_label": "73", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "9135c541cdb30e025e94ba22f3dcce385f0394142c7774df2feafb11ddfe1d7d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n67 \n \n \nIntroduction to Clustering: \nIt is basically a type of unsupervised learning method. An unsupervised learning method \nis a method in which we draw references from datasets consisting of input data without  \nlabelled responses. Generally, it is used as a process to find meaningful structure, \nexplanatory underlying processes, generative features, and groupings inherent in a set of  \nexamples. \nClustering is the task of dividing the population or data points into a number of groups  \nsuch that data points in the same groups are more similar to other data points in the same  \ngroup and dissimilar to the data points in other groups. It is basically a collection of  \nobjects on the basis of similarity and dissimilarity between them. \nFor ex\u2013 The data points in the graph below clustered together can be classified into one  \nsingle group. We can distinguish the clusters, and we can identify that there are 3 clusters  \nin the below picture. \n \n \nIt is not necessary for clusters to be spherical. Such as:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1043, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2849e971-65ad-49f4-854b-8827ad8ccb0a": {"__data__": {"id_": "2849e971-65ad-49f4-854b-8827ad8ccb0a", "embedding": null, "metadata": {"page_label": "74", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fe011409-62f4-4075-90e1-a6f359097cc0", "node_type": "4", "metadata": {"page_label": "74", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "32855ce69b13730e2bc81eca944215cef33274e4ef4ec3b10c6ef3ce938cf252", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n68 \n \n \n \n \n \n \n \n \n \n \nDBSCAN: Density-based Spatial Clustering of Applications with Noise \nThese data points are clustered by using the basic concept that the data point lies within  \nthe given constraint from the cluster center. Various distance methods and techniques are  \nused for the calculation of the outliers. \nWhy Clustering? \nClustering is very much important as it determines the intrinsic grouping among the  \nunlabelled data present. There are no criteria for goo d clustering. It depends on the user,  \nwhat is the criteria they may use which satisfy their need. For instance, we could be  \ninterested in finding representatives for homogeneous groups (data reduction), in finding  \n\u201cnatural clusters\u201d and describe their unkn own properties (\u201cnatural\u201d data types), in finding  \nuseful and suitable groupings (\u201cuseful\u201d data classes) or in finding unusual data objects  \n(outlier detection). This algorithm must make some assumptions that constitute the \nsimilarity of points and each assumption make different and equally valid clusters. \nClustering Methods : \n\u2022 Density-Based Methods: These methods consider the clusters as the dense region having  \nsome similarities and differences from the lower dense region of the space. These \nmethods have good accuracy and the ability to merge two clusters. Example DBSCAN \n(Density-Based Spatial Clustering of Applications with Noise) , OPTICS (Ordering Points \nto Identify Clustering Structure), etc. \n\u2022 Hierarchical Based Methods: The clusters formed in this method form a treetype \nstructure based on the hierarchy. New clusters are formed using the previously formed  \none. It is divided into two category \n\u2022 Agglomerative (bottom-up approach) \n\u2022 Divisive (top-down approach)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1762, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c7004ab-6969-4aca-8f5d-492318504e1b": {"__data__": {"id_": "5c7004ab-6969-4aca-8f5d-492318504e1b", "embedding": null, "metadata": {"page_label": "75", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d8a0c528-e81e-4b90-a753-5b272155466e", "node_type": "4", "metadata": {"page_label": "75", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "0b57263bcbb0b8337719f27ad9cd2c3114950bd451f0878cf22af7ec439072c4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n69 \n \n \nexamples CURE (Clustering Using Representatives), BIRCH (Balanced Iterative \nReducing Clustering and using Hierarchies), etc. \n\u2022 Partitioning Methods: These methods partition the objects into k clusters and each  \npartition forms one cluster. This method is used to optimize an objective criterion \nsimilarity function such as when the distance is a major parameter example K-means, \nCLARANS (Clustering Large Applications based upon Randomized Search), etc. \n\u2022 Grid-based Methods: In this method, the data space is formulated into a finite number of  \ncells that form a grid -like structure. All the clustering operations done on these grids are  \nfast and independent of the number of data objects example STING (Statistical \nInformation Grid), wave cluster, CLIQUE (CLustering In Quest), etc. \n \n \n \n \nK means Clustering: \nIt is the simplest unsupervised learning algorithm that solves clustering problem.K -means \nalgorithm partitions n observations into k clusters where each observation belongs to the  \ncluster with the nearest mean serving as a prototype of the cluster. \n \nApplications of Clustering in different fields \n\u2022 Marketing: It can be used to characterize & discover customer segments for marketing  \npurposes. \n\u2022 Biology: It can be used for classification among different species of plants and animals. \n\u2022 Libraries: It is used in clustering different books on the basis of topics and information. \n\u2022 Insurance: It is used to acknowledge the customers, their policies and identifying the  \nfrauds. \n\u2022 City Planning: It is used to make groups of houses and to study their values based on \ntheir geographical locations and other factors present.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1695, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a125adbd-bc5f-449e-a81f-f90a3e375657": {"__data__": {"id_": "a125adbd-bc5f-449e-a81f-f90a3e375657", "embedding": null, "metadata": {"page_label": "76", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e0ff4073-d76b-4ed4-9b21-4b217b40629b", "node_type": "4", "metadata": {"page_label": "76", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "fff1dc39297491eaf65e4068c836ad31310da4abdd1d9901d2169fa98b588b24", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n70 \n \n \n\u2022 Earthquake studies: By learning the earthquake-affected areas we can determine the \ndangerous zones. \nThe algorithm will categorize the items into k groups of similarity. To calculate  \nthat similarity, we will use the euclidean distance as measurement. The algorithm  \nworks as follows: \n \n1. First, we initialize k points, called means, randomly. \n2. We categorize each item to its closest mean and we update the mean\u2019s coordinates, which  \nare the averages of the items categorized in that mean so far. \n3. We repeat the process for a given number of iterations and at the end, we have our  \nclusters. \nThe \u201cpoints\u201d mentioned above are called means because they hold the mean values of the  \nitems categorized in them. To initialize these means, we have a lot of options. An intuitive  \nmethod is to initialize the means at random items in the data set. Another method is to  \ninitialize the means at random values between the boundaries of the data set (if for a  \nfeature x the items have values in [0,3], we will initialize the means with values for x at \n[0,3]). \n \n \n \nThe above algorithm in pseudocode: \n \n \n \n \nK-MODE CLUSTERING \nKModes clustering is one of the unsupervised Machine Learning algorithms that is used to  \ncluster categorical variables. \nHow does the KModes algorithm work? \n \n1. Pick K observations at random and use them as leaders/clusters \n2. Calculate the dissimilarities and assign each observation to its closest cluster \n3. Define new modes for the clusters", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1525, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "377bed8a-4ff6-405d-b93d-6775e4798460": {"__data__": {"id_": "377bed8a-4ff6-405d-b93d-6775e4798460", "embedding": null, "metadata": {"page_label": "77", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3d068b8-3716-477e-be43-8d8bf2e0fb75", "node_type": "4", "metadata": {"page_label": "77", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "046783d6ceb750d18abeb2f898e025586a7b7bdcdceba6cf4694b198ac2f93cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n71 \n \n \n4. Repeat 2\u20133 steps until there are is no re-assignment required \nExample: Imagine we have a dataset that has the information about hair color, eye color, and  \nskin color of persons. We aim to group them based on the available information(maybe we  \nwant to suggest some styling ideas) \nHair color, eye color, and skin color are all categorical variables. Below  is how our dataset  \nlooks like. \n \n \nAlright, we have the sample data now. Let us proceed by defining the number of  \nclusters(K)=3 \nStep 1: Pick K observations at random and use them as leaders/clusters  \nI am choosing P1, P7, P8 as leaders/clusters \n \n \n \n \n \n \n \n \n \n \n \n \nStep 2: Calculate the dissimilarities(no. of mismatches) and assign each observation to its  \nclosest cluster \nIteratively compare the cluster data points to each of the observations. Similar data points  \ngive 0, dissimilar data points give 1.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 918, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a243643c-d711-4159-a13d-0fd5344a682c": {"__data__": {"id_": "a243643c-d711-4159-a13d-0fd5344a682c", "embedding": null, "metadata": {"page_label": "78", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "baf9c05d-f03f-477e-839f-7925f083da06", "node_type": "4", "metadata": {"page_label": "78", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "3ebffa9e4a7c5dd76c0226905b5bfa9c90e92da02735d4868c761a078f22f8fb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n72 \n \n \n \n \n \nComparing leader/Cluster P1 to the observation P1 gives 0 dissimilarities \n \nComparing leader/cluster P1 to the observation P2 gives 3(1+1+1) \ndissimilarities. Likewise, calculate all the dissimilarities and put them in a matrix as shown  \nbelow and assign the observations to their closest cluster (cluster that has the least \ndissimilarity)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 381, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ba45be37-f19a-413d-b85c-370232949bca": {"__data__": {"id_": "ba45be37-f19a-413d-b85c-370232949bca", "embedding": null, "metadata": {"page_label": "79", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44350c88-35ea-4a41-8837-8dd395621e55", "node_type": "4", "metadata": {"page_label": "79", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "e431e8164c8b41a4f987765a58b3c13edc1a2998aed4ca5862a181c1e9df6ffe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n73 \n \n \nAfter step 2, the observations P1, P2, P5 are assigned to cluster 1; P3, P7 are assigned to  \nCluster 2; and P4, P6, P8 are assigned to cluster 3. \nStep 3: Define new modes for the clusters \nMode is simply the most observed value. Mark the observations according to the cluster  \nthey belong to. Observations of Cluster 1 are marked in Yellow, Cluster 2 are marked in  \nBrick red, and Cluster 3 are marked in Purple. \n \nConsidering one cluster at a time, for each feature, look for the Mode and update the new  \nleaders. \n \nExplanation: Cluster 1 observations( P1, P2, P5) has brunette as the most observed hair  \ncolor, amber as the most observed eye color, and fair as the most observed skin color. \nBelow are our new leaders after the update. \n \n \nRepeat steps 2 \u20134 : After obtaining the new leaders, again calculate the  dissimilarities \nbetween the observations and the newly obtained leaders.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 931, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c1ccf39-19d0-4ed0-bec0-a07af63c3c74": {"__data__": {"id_": "0c1ccf39-19d0-4ed0-bec0-a07af63c3c74", "embedding": null, "metadata": {"page_label": "80", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f6734b55-1ac0-4818-8d65-87b2b6dec518", "node_type": "4", "metadata": {"page_label": "80", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "d512bb925880fcbc963729fc199efc892aea2db01693ed184688bcdc92d8becc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n74 \n \n \n \n \n \nComparing Cluster 1 to the observation P1 gives 1 dissimilarity. \n \n \n \nComparing Cluster 1 to the observation P2 gives 2 dissimilarities. \n \nLikewise, calculate all the dissimilarities and put them in a matrix. Assign each \nobservation to its closest cluster.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 299, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e4b0672-1dfa-439a-8f9e-f7063e34b2ea": {"__data__": {"id_": "9e4b0672-1dfa-439a-8f9e-f7063e34b2ea", "embedding": null, "metadata": {"page_label": "81", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1e36866c-4de8-4008-ab5b-d59e31a4847e", "node_type": "4", "metadata": {"page_label": "81", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "053dce3b60eda022d77cdf88483b034128589752e90bddae5698111441d0dcfc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n75 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nThe observations P1, P2, P5 are assigned to Cluster 1; P3, P7 are assigned to Cluster 2; \nand P4, P6, P8 are assigned to Cluster 3. \n \n \n \n \nWe stop here as we see there is no change in the assignment of observations.  \nImplementation of KModes in Python: \nBegin with Importing necessary libraries", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 368, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b94d7c7c-7104-42eb-9a5f-b2cc88020d17": {"__data__": {"id_": "b94d7c7c-7104-42eb-9a5f-b2cc88020d17", "embedding": null, "metadata": {"page_label": "82", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2ac45f33-85b1-4fb9-9650-268e119740ca", "node_type": "4", "metadata": {"page_label": "82", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "e7305108bf9e92d02647f188e54d95c10905018e06c2ef3f16080d5a5811476f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n76 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nVector Quantization \nLearning Vector Quantization ( or LVQ ) is a type of Artificial Neural Network which  \nalso inspired by biological models of neural systems. It is based on prototype supervised  \nlearning classification algorithm and trained its network through a competitive learning  \nalgorithm similar to Self Organizing Map. It can also deal with the multiclass \nclassification problem. LVQ has two layers, one is the Input layer and the other one is the  \nOutput layer. The architecture of the Learning Vector Quantization with the number of  \nclasses in an input data and n number of input features for any sample is given below:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 728, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dc904998-04b4-4753-a2f6-915e78a5b1d0": {"__data__": {"id_": "dc904998-04b4-4753-a2f6-915e78a5b1d0", "embedding": null, "metadata": {"page_label": "83", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0292f787-6f6e-4b9e-94ef-5d094eef1de0", "node_type": "4", "metadata": {"page_label": "83", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "2ab844da0d2a8954773f9cc720a921c8e54aed00e66ccce78e35dc49bc7a41bb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n77 \n \n \ni \n \n \n \n \n \nLet say an input data of size ( m, n ) where m is number of training example and n is the  \nnumber of features in each example and a label vector of size ( m, 1 ). First, it initializes  \nthe weights of size ( n, c ) from the first c number of training samples with different labels  \nand should be discarded from all trai ning samples. Here, c is the number of classes. Then  \niterate over the remaining input data, for each training example, it updates the winning  \nvector ( weight vector with the shortest distance ( e.g Euclidean distance ) from training  \nexample ). Weight updation rule is given by : \nwij = wij(old) - alpha(t) * (x k - wij(old)) \n \nwhere alpha is a learning rate at time t, j denotes the winning vector, i denotes the i th \nfeature of training example and k denotes the k th training example from the input data.  \nAfter training the LVQ network, trained weights are used for classifying new examples.  \nA new example labeled with the class of winning vector. \n \nAlgorithm \n \nSteps involved are : \n\u2022 Weight initialization \n\u2022 For 1 to N number of epochs \n\u2022 Select a training example \n\u2022 Compute the winning vector \n\u2022 Update the winning vector \n\u2022 Repeat steps 3, 4, 5 for all training example. \n\u2022 Classify test sample", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1285, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e06eced7-9d3c-4d3a-8000-8f8273e457ae": {"__data__": {"id_": "e06eced7-9d3c-4d3a-8000-8f8273e457ae", "embedding": null, "metadata": {"page_label": "84", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "07b28c11-2247-47cc-a650-3ecfc0336aa3", "node_type": "4", "metadata": {"page_label": "84", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "1763a2ebc7cd5f6f51f17b20553174c75c1473dfea720da7162fa3137584c2a8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n \n \n \n \nGenetic Algorithms \nUNIT- V \n \n \nGenetic Algorithms(GAs)  are adaptive heuristic search  algorithms that \nbelong to the larger part of evolutionary algorithms. Genetic algorithms \nare based on the ideas of natural selection and genetics. These are \nintelligent exploitation of random search provided with historical data to  \ndirect the search into the region of better performance in solution space.  \nThey are commonly used to generate high-quality solutions for \noptimization problems and search problems. \nGenetic algorithms simulate the process of natural selection which means  \nthose species who can adapt to changes in their environment are able to  \nsurvive and reproduce and go to next generation. In simple words, they  \nsimulate \u201csurvival of the fittest\u201d among individual of consecutive \ngeneration for solving a problem. Each generation consist of a population  \nof individuals and each individual represents a point in search space and  \npossible solution. Each individual is represented as a string of \ncharacter/integer/float/bits. This string is analogous to the Chromosome. \nDifferent search methods for induction \nIn the field of  machine learning , an induction  algorithm represents an  \nexample of using mathematical principles for the development of \nsophisticated computing systems. Machine learning systems go beyond a  \nsimple \u201crote input/output\u201d function, and evolve the results that they supply  \nwith continued use. Induction algorithms can help with the real-time \nhandling of sophisticated data sets, or more long-term efforts. \n \nThe induction algorithm is something that applies to systems that show  \ncomplex results depending on what they are set up for. One of the most  \nfundamental ways that engineers use an induction algorithm is to enhance  \nknowledge acquisition in a given system. In other words, with the \nalgorithm in place, the set of \u201cknowledge data\u201d that end users get is \nsomehow improved, whether that\u2019s  regarding the quantity  of data, the  \nfiltering of noise and undesirable results, or the refinement of some data  \npoints. \nMachine Learning R20D5803", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2138, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4b02121e-9475-42bb-b950-8aa5d54387da": {"__data__": {"id_": "4b02121e-9475-42bb-b950-8aa5d54387da", "embedding": null, "metadata": {"page_label": "85", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a62716c8-d963-4c54-8ca2-47e8da94c68a", "node_type": "4", "metadata": {"page_label": "85", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "b234e646ee51fdf80b9ca7b9f378ed08ecb31b0a3d6b2e175b71809957e10ab1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n79 \n \n \nAlthough the technical descriptions of induction algorithms are largely the  \nterritory of mathematical and scientific journals, one of the basic ideas  \nabout using the induction algorithm is that it can organize \u201cclassification  \nrules\u201d according to the induction principle and separate corollary  results \nfrom different kinds of \n \nsystem noise or exceptions. Filtering out noise from a domain is a \nprominent use of the induction algorithm in general. There is the idea that  \nin real-world data filtering , induction algorithms can compose different \nsets of rules for both the legitimate results and the system noise, in order to  \ndistinguish one from the other. \n \nBy setting up induction algorithms according to certain training examples,  \nstakeholders are looking for the ability of these systems to identify and  \nassess consistent rules and data  that represents exceptions to these rules. In  \na sense, the use of an induction algorithm uses the induction principle to  \n\u201cprove\u201d certain results that can aid knowledge, because they provide more  \nmarked delineations in a data set (or multiple data sets) \u2013 distinctions that \ncan drive all sorts of end user capabilities. \n \nLike other kinds of machine learning software, induction algorithms are  \noften thought of as a form of \u201cdecision support.\u201d \n \n\u201cWe consider the principal task of a real -world induction system to be  \nassisting the expert in expressing his or her expertise,\u201d write the authors of  \na Turing Institute paper on induction in machine learning back in the  \n1980s. \u201cConsequently, we require that the induced rules are highly \npredictive and are easily comprehensible to the expert.\u201d \n \nWith this in mind, induction algorithms can be part of many kinds of  \nsoftware products that seek to refine data and produce evolving results for  \nhuman users. In general, machine learning and the use of visual \ndashboards is generating new t ools through which users can more rapidly  \ndevelop in-depth knowledge about any given system, whether it's related \nto marine research, medical diagnosis, e-commerce, or any other kind of  \ndata-rich system. \n \nExplanation-Based Learning (EBL)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2194, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e66940af-a119-439c-a472-6f0bc75927e3": {"__data__": {"id_": "e66940af-a119-439c-a472-6f0bc75927e3", "embedding": null, "metadata": {"page_label": "86", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c37ede87-24dc-4229-ab1e-0e6e4ebe26a9", "node_type": "4", "metadata": {"page_label": "86", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "2020f7211221200a20cbcb07eaac0ae9569518883b351f8ea69d3e832d561291", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n80 \n \n \nIn simple terms, it is the ability to gain basic problem -solving techniques \nby observing and analysing solutions to specific problems. In terms of  \nMachine Learning, it is an algorithm that aims to understand why an  \nexample is a part of a particular concept to make generalizations or form  \nconcepts from training examples. For example, EBL uses a domain \ntheory and creates a program that learns to play chess.  EBL involves 2  \nsteps: \n1. Explanation \u2014 The domain theory is used to eliminate all the unimportant  \ntraining example while retaining the important ones that best describe the goal  \nconcept. \n2. Generalization \u2014 The explanation of the goal concept is made as general \nand widely applicable as possible. This ensures that all cases are covered,  \nnot just certain specific ones. \nEBL Architecture: \n\u2022 EBL model during training \n\u2022 During training, the model generalizes the training example in such a way that  \nall scenarios lead to the Goal Concept, not just in specific cases. (As shown in \nFig 1)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1053, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "673527ac-7a26-44cb-b26e-f04a24eda70f": {"__data__": {"id_": "673527ac-7a26-44cb-b26e-f04a24eda70f", "embedding": null, "metadata": {"page_label": "87", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "151b4539-58e2-463a-b19c-d62774b99843", "node_type": "4", "metadata": {"page_label": "87", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "4009a34ec07d14f26b92ba9b55a0540602863d2b00ab5555b74ebe475ec8dcb4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n81 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\u2022 EBL model after training \n\u2022 Post training, EBL model tends to directly reach the hypothesis space involving \nthe goal concept.  (As shown in Fig 2)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 214, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9caceba4-9165-416e-ad42-20a50636591d": {"__data__": {"id_": "9caceba4-9165-416e-ad42-20a50636591d", "embedding": null, "metadata": {"page_label": "88", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "21342a23-043e-411a-8b55-ec4d2d104469", "node_type": "4", "metadata": {"page_label": "88", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "e763808557686132efb0213c2e6d3899fd31a8393d56f94106bddf2ccaa88305", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n82 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nDimensionality Reduction \nAn intuitive example of dimensionality reduction can be discussed through  \na simple e-mail classification problem, where we need to classify whether  \nthe e-mail is spam or not. This can involve a large number of features, \nsuch as whether or not the e -mail has a generic title, the content of the e - \nmail, whether the e -mail uses a tem plate, etc. However, some of these  \nfeatures may overlap. In another condition, a classification problem that  \nrelies on both humidity and rainfall can be collapsed into just one \nunderlying feature, since both of the aforementioned are correlated to a  \nhigh degree. Hence, we can reduce the number of features in such \nproblems. A 3D classification problem can be hard to visualize, whereas a  \n2-D one can  be mapped to a simple 2  dimensional space, and  a 1 -D \nproblem to a simple line. The below figure illustrates this concept, where a  \n3-D feature space is split into two 1 -D feature spaces, and later, if found to  \nbe correlated, the number of features can be reduced even further.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1151, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8cbd6366-e00b-4b7d-ad81-dbc9b97596f4": {"__data__": {"id_": "8cbd6366-e00b-4b7d-ad81-dbc9b97596f4", "embedding": null, "metadata": {"page_label": "89", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32bd74b9-05cb-46d6-aad3-0d2d928f966f", "node_type": "4", "metadata": {"page_label": "89", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "76a669d6057331f026ff6243078a7d9c8bee09392a55dcf76529d81c72e96014", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n83 \n \n \n \n \n \n \n \nComponents of Dimensionality \nReduction There are two components of dimensionality  \nreduction: \n\u2022 Feature selection: In this, we try to find a subset of the original set of variables,  \nor features, to get a smaller subset which can be used to model the problem. It  \nusually involves three ways: \n1. Filter \n2. Wrapper \n3. Embedded \n\u2022 Feature extraction: This reduces the data in a high dimensional space to a \nlower dimension space, i.e. a space with lesser no. of dimensions. \nMethods of Dimensionality Reduction The various \nmethods used for dimensionality reduction include: \n\u2022 Principal Component Analysis (PCA) \n\u2022 Linear Discriminant Analysis (LDA) \n\u2022 Generalized Discriminant Analysis (GDA) \nDimensionality reduction may be both linear or non-linear, depending \nupon the method used. The prime linear method, called Principal \nComponent Analysis, or PCA, is discussed below.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 926, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8d54994c-e013-4cbe-a559-f1c4783b2de1": {"__data__": {"id_": "8d54994c-e013-4cbe-a559-f1c4783b2de1", "embedding": null, "metadata": {"page_label": "90", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fe94d808-06e1-4216-b857-d256addfc49f", "node_type": "4", "metadata": {"page_label": "90", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "8976736a98b2a95657fa4e3709d33c1349eecab2d6c19a419eec709b649aca50", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n84 \n \n \n \nPrincipal Component Analysis \nThis method was introduced by Karl Pearson. It works on a condition that  \nwhile the data in a higher dimensional space is mapped to data in a lower  \ndimension space, the variance of the data in the lower dimensional space  \nshould be maximum. \n \nIt involves the following steps: \n\u2022 Construct the covariance matrix of the data. \n\u2022 Compute the eigenvectors of this matrix. \n\u2022 Eigenvectors corresponding to the largest eigenvalues are used to reconstruct a  \nlarge fraction of variance of the original data. \nHence, we are left with a lesser number of eigenvectors, and there might  \nhave been some data loss in the process. But, the most important variances  \nshould be retained by the remaining eigenvectors. \nAdvantages of Dimensionality Reduction \n\u2022 It helps in data compression, and hence reduced storage space. \n\u2022 It reduces computation time. \n\u2022 It also helps remove redundant features, if any. Disadvantages of \nDimensionality Reduction \u2022 It may lead to some amount of data loss. \n\u2022 PCA tends to find linear correlations between variables, which is sometimes \nundesirable. \n\u2022 PCA fails in cases where mean and covariance are not enough to define \ndatasets.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1227, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "798703ea-95b7-4d6d-aca2-dbbd981500d2": {"__data__": {"id_": "798703ea-95b7-4d6d-aca2-dbbd981500d2", "embedding": null, "metadata": {"page_label": "91", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6e6f8349-5b27-4d94-a335-42cd4607a322", "node_type": "4", "metadata": {"page_label": "91", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "09e1e401734afcb81ba542fe858bdd0ac7966e875616447a7d6bdb8a954df258", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n85 \n \n \n\u2022 We may not know how many principal components to keep- in practice, some \nthumb rules are applied. \n \n \n \nFactor analysis. \nFactor analysis is a statistical method used to describe variability among \nobserved, correlated variables in terms of a potentially lower number of \nobserved variables called factors. For example, it is possible that variations in  \nsix observed variables mainly reflect the variations in two unobserved \n(underlying) variables. Factor analysis searches for such joint variations in  \nresponse to unobserved latent variables. The observed variables are modelled  \nas linear combinations of the potential factors plus \"error\" terms, hence factor  \nanalysis can be thought of as a special case of errors-invariables models. \n \nHere,There is a party going into a room full of people. There is \u2018n\u2019 number of  \nspeakers in that room and they are speaking simultaneously at the party. In the  \nsame room, there are also \u2018n\u2019 number of microphones placed at different", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1019, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05ffd11f-1436-4949-8125-706a2683aa57": {"__data__": {"id_": "05ffd11f-1436-4949-8125-706a2683aa57", "embedding": null, "metadata": {"page_label": "92", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5d4fc4dc-1183-46ff-ad18-e096b41f03d1", "node_type": "4", "metadata": {"page_label": "92", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "e752bc94313480b695d8fa38ee7c3fdc01fd8cb1612d263a1e7c14953c911ea7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n86 \n \n \ndistances from the speakers which are recording \u2018n\u2019 speakers\u2019 voice signals.  \nHence, the number of speakers is equal to the number must of microphones in \nthe room. \nNow, using these microphones\u2019 recordings,  we want to separate all the \u2018n\u2019  \nspeakers\u2019 voice signals in the room given each microphone recorded the voice  \nsignals coming from each speaker of different intensity due to the difference in  \ndistances between them. Decomposing the mixed signal of each microphone\u2019s  \nrecording into independent source\u2019s speech signal can be done by using the  \nmachine learning technique, independent component analysis. \n[ X1, X2, \u2026.., Xn ] => [ Y1, Y2, \u2026.., Yn ] \nwhere, X1, X2,  \u2026, Xn are the original signals present in the mixed signal and  \nY1, Y2, \u2026, Yn are the new features and are independent components which are  \nindependent of each other. \n \n \n \nRestrictions on ICA \n \n1. The independent components generated by the ICA are assumed to be \nstatistically independent of each other. \n2. The independent components generated by the ICA must have non -gaussian \ndistribution. \n3. The number of independent components generated by the ICA is equal to the \nnumber of observed mixtures. \n \nMultidimensional scaling \nMultidimensional scaling is a visual representation of distances or \ndissimilarities between sets of objects. \n\u201cObjects\u201d can be colors, faces, map coordinates, political persuasion, or any \nkind of real or conceptual stimuli \n(Kruskal and Wish, 1978). Objects that are more similar (or have shorter \ndistances) are closer together on the graph than objects that are less similar (or  \nhave longer distances). As well as interpreting dissimilarities as distances on a", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1718, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "627ab32c-8325-4ab5-8252-6beb113129a2": {"__data__": {"id_": "627ab32c-8325-4ab5-8252-6beb113129a2", "embedding": null, "metadata": {"page_label": "93", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "58478417-a4bf-4920-b71f-5e17aa048bb4", "node_type": "4", "metadata": {"page_label": "93", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "762ef31d541d39684ea00316b7f2e4957928ce5630c4b57d1ac2b11e0d708b89", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n87 \n \n \ngraph, MDS can also serve as a dimension reduction technique for high- \ndimensional data (Buja et. al, 2007). \nThe term scaling comes from psychometrics, where abstract concepts \n(\u201cobjects\u201d) are assigned numbers according to a rule (Trochim, 2006). For \nexample, you may want to quantify a person\u2019s attitude to global warming. You  \ncould a ssign a \u201c1\u201d to \u201cdoesn\u2019t believe in global warming\u201d, a 10 to \u201cfirmly  \nbelieves in global warming\u201d and a scale of 2 to 9 for attitudes in between. You  \ncan also think of \u201cscaling\u201d as the fact that you\u2019re essentially scaling down the  \ndata (i.e. \nmaking it simpler by creating lower -dimensional data). Data that is scaled down  \nin dimension keeps similar properties. For example, two data points that are  \nclose together in high-dimensional space will also be close together in low - \ndimensional space (Martinez, 2005). The \u201c multidimensional\u201d part is du e to the \nfact that you aren\u2019t limited to two dimensional graphs or data. Three- \ndimensional, four-dimensional and higher plots are possible. \nMDS is now used over a wide variety of disciplines. It\u2019s use isn\u2019t limited to a  \nspecific matrix or set of data; In fact, just about any matrix can be analyzed with  \nthe technique as long as the matrix contains some type of relational data \n(Young, 2013). Examples of relational data include correlations, distances, \nmultiple rating scales or similarities. \nManifold learning \n \nWhat is a manifold? \n \nA two-dimensional manifold is any 2-D shape that can be made to fit in a higher \ndimensional space by twisting or bending it, loosely speaking.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1625, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca73d322-f41e-47c9-99c2-f8aa6952c39c": {"__data__": {"id_": "ca73d322-f41e-47c9-99c2-f8aa6952c39c", "embedding": null, "metadata": {"page_label": "94", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47ad960e-4f55-4d14-962c-d5ed62a0518c", "node_type": "4", "metadata": {"page_label": "94", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "212720b8eabdac42f5a57e29b27b112a3256ff387254b7a0ae8948f920c76548", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n88 \n \n \nWhat is the Manifold Hypothesis? \n \n\u201cThe Manifold Hypothesis states that real-world high-dimensional data lie on \nlow dimensional manifolds embedded within the high-dimensional space.\u201d \nIn simpler terms, it means that higher-dimensional data most of the time lies on \na much closer lower-dimensional manifold. The process of modelling the \nmanifold on which training instances lie is called Manifold Learning. \nLocally Linear Embedding (LLE) \n \nLocally Linear Embedding (LLE) is a Manifold Learning technique that is used  \nfor non-linear dimensionality reduction. It is an unsupervised learning algorithm \nthat produces low-dimensional embeddings of high-dimensional inputs, relating \neach training instance to its closest neighbor. \nHow does LLE work? \n \nFor each training instance x(i), the algorithm first finds its k nearest neighbors \nand then tries to express x(i) as a linear function of them. In general, if there are \nm training instances in total, then it tries to find the set of weights w which \nminimizes the squared distance between x(i) and its linear representation. \n \nSo, the cost function is given by \n \n \nwhere wi,j =0, if j is not included in the k closest neighbors of i. \n \nAlso, it normalizes the weights for each training instance x(i),", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1295, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9dae530-63e8-4a45-9d35-00aa0bf964e9": {"__data__": {"id_": "a9dae530-63e8-4a45-9d35-00aa0bf964e9", "embedding": null, "metadata": {"page_label": "95", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3d301977-6b29-4321-a59a-fd6dd6a71cf6", "node_type": "4", "metadata": {"page_label": "95", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}, "hash": "fdb070de57706a91e970c4f1e46c110ec09918c899535e2d4d5e5bf7992f2ea8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Department of CSE MRCET \n89 \n \n \n \n \n \nFinally, each high-dimensional training instance x(i) is mapped to a low- \ndimensional (say, d dimensions) vector y(i) while preserving the neighborhood \nrelationships. This is done by choosing d-dimensional coordinates which \nminimize the cost function, \n \nHere the weights wi,j are kept fixed while we try to find the optimum coordinates \ny(i)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 384, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"3d2c8a0f-37ac-42a5-9caa-71dff5e39d0e": {"node_ids": ["8bf07b7f-175b-44e2-8e43-e13c50c342da"], "metadata": {"page_label": "1", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "ecd0ce07-01c5-4a6e-92ed-6723bb768e94": {"node_ids": ["03608d34-0aca-42f0-9d4e-c205432b5a85"], "metadata": {"page_label": "2", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "cb27a2aa-c05e-47f6-a556-36d9b6d2312e": {"node_ids": ["b89aed1e-265d-4c30-acca-af6dd235e08a"], "metadata": {"page_label": "3", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "f4f40fbc-9ae5-4bb4-8f35-7995814bdf7c": {"node_ids": ["01c02e24-c85d-4933-a7e1-965cd00087cb"], "metadata": {"page_label": "4", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "e5f697f0-92f8-4726-af63-7f17aa23eb5e": {"node_ids": ["6fc25349-90e9-4b24-97ac-543e18bb8233"], "metadata": {"page_label": "5", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "74d771c6-4bd4-4881-802d-4dfb08dba1f4": {"node_ids": ["f22f4f0c-633b-4093-8e7f-e216824be3b7"], "metadata": {"page_label": "6", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "352a1852-94a5-45a5-8e45-19ebaad20a03": {"node_ids": ["727ad59f-4664-46ca-a8ef-a6beaeac185e"], "metadata": {"page_label": "7", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "b0eebf5a-49da-4e8c-a6b0-011f5fc68d52": {"node_ids": ["9652a316-67be-4d37-8dfa-9ff4d0bedc0b"], "metadata": {"page_label": "8", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "2b94c9e5-5ed2-419d-80f3-b1b2b4be4d65": {"node_ids": ["56e8fe33-59d1-4922-af7f-ba60c99aa6bb"], "metadata": {"page_label": "9", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "7f30c2f1-4d6c-40e7-a7a4-3cb539a757fa": {"node_ids": ["deeb5314-2b6b-46d6-8a42-d01776310e35"], "metadata": {"page_label": "10", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "27f4c5da-9008-4924-affd-625e627572a2": {"node_ids": ["d983a83d-f900-416f-a34a-52e1fac54752"], "metadata": {"page_label": "11", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "e8ab80cd-ad86-4c1a-bc16-cc26bdeeac63": {"node_ids": ["3f936d54-ac31-4b58-926a-7b5bddadaecd"], "metadata": {"page_label": "12", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "27b495fe-62af-479c-a728-ee8ffc4d7804": {"node_ids": ["e2a6a920-83d8-4d0c-a785-d3d31b720d5d"], "metadata": {"page_label": "13", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "b27e3b26-9601-44ca-b998-461df9ef5b97": {"node_ids": ["018fc09f-71c7-467a-b0ee-7b59d11f6c64"], "metadata": {"page_label": "14", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "43ca986f-dd78-49f2-9e10-f352ce1429ed": {"node_ids": ["ca140810-a7e9-4b7e-88aa-b92be0846af2"], "metadata": {"page_label": "15", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "5a1ae0c7-03af-4564-90be-4463489466a9": {"node_ids": ["57076243-6b05-4276-af04-8b5b806c1df8"], "metadata": {"page_label": "16", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "68383fc1-7b0c-490f-9b21-be63ca8cbfd5": {"node_ids": ["c0586b0f-c25e-4911-99da-a560e7716ab5"], "metadata": {"page_label": "17", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "ab46b749-7e4f-4914-8d52-76bbcf741a80": {"node_ids": ["6fc92277-af7b-441b-b0ad-22842f9d6bd9"], "metadata": {"page_label": "18", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "160ed4f8-9560-4773-b3e8-587797e4f014": {"node_ids": ["91cd0b27-a4d4-44fa-a20e-7483083f8d3c"], "metadata": {"page_label": "19", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "aaa10151-2f8e-4630-bba5-4e29bbfff69a": {"node_ids": ["02730a74-04e8-4d28-9dcd-968282b9289d"], "metadata": {"page_label": "20", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "c808a289-8d5f-4b31-865b-3b675370832b": {"node_ids": ["b2eeac1b-9632-4718-82b7-f2de1742d5c1"], "metadata": {"page_label": "21", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "55c67ece-467c-452e-aa55-d55e5f3f372d": {"node_ids": ["fb5d3e5f-c786-4950-a3bd-e5ab96479c5c"], "metadata": {"page_label": "22", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "8e70d546-75b5-4b32-8621-c882c43e1863": {"node_ids": ["68d1fa21-d881-4333-8866-faf5772ba677"], "metadata": {"page_label": "23", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "ba3e4e31-efee-42dc-a4f9-eb256fc82da5": {"node_ids": ["849ddfe1-d12a-4140-a812-10db656996ee"], "metadata": {"page_label": "24", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "4e0f3450-979b-4926-b7cd-5fd6086a3601": {"node_ids": ["cd7a9315-3004-48c0-9082-9d97b723106b"], "metadata": {"page_label": "25", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "19cfc674-6188-42c7-a316-f0d58bf59fbc": {"node_ids": ["582722b9-dbaf-4cd6-bf13-612a50bf43bc"], "metadata": {"page_label": "26", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "1b920bde-bb9c-4fcf-8197-61a61f40a543": {"node_ids": ["c31d7637-4c76-4c65-a2bf-0e4d62b8d8e0"], "metadata": {"page_label": "27", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "cf49f5e4-cd71-4f2a-94c3-359aee87ea57": {"node_ids": ["a52962a9-daca-40f4-8a28-a0a69a73db21"], "metadata": {"page_label": "28", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "f97038d0-4e52-4daa-87d1-ef87bdd8a9f7": {"node_ids": ["381be746-5ac0-4e43-a2f5-71e378401ee7"], "metadata": {"page_label": "29", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "4470bf85-dafb-4c69-a6dd-ac2314aca426": {"node_ids": ["ff7bdc89-265b-4776-ac1f-604b31eb0c35"], "metadata": {"page_label": "30", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "96d8573c-fea6-4a57-90ec-85fd2732f609": {"node_ids": ["8489b668-b75c-4fbd-bcb1-262d2c9ef210"], "metadata": {"page_label": "31", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "16147dee-3bd6-4531-afc1-596b0e26cc36": {"node_ids": ["cccca643-9285-4da1-92e8-f9e1b4fc0ea3"], "metadata": {"page_label": "32", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "e1643adc-acf1-46ec-8096-100afe0bb5ba": {"node_ids": ["d21196d3-7d14-43fc-9bf6-37d518dde79d"], "metadata": {"page_label": "33", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "3a6d01bb-d5cc-490f-865d-9d8e91810ee5": {"node_ids": ["09dd23e0-6aab-49a6-aee3-0f025a6ca9db"], "metadata": {"page_label": "34", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "ca44a625-e08e-48b9-a719-92d22832a52d": {"node_ids": ["78ef169d-3cce-4bae-a2f3-57e1726a6f48"], "metadata": {"page_label": "35", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "7c52f1e3-183f-42e1-82da-6508d3771f4c": {"node_ids": ["d5c31216-7c32-4fd0-8e8a-c40f6fe5d863"], "metadata": {"page_label": "36", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "d0a35079-49fd-4cfd-933e-9523c063c19b": {"node_ids": ["037d4adb-96c0-41a3-82f3-f84c5dc4459b"], "metadata": {"page_label": "37", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "e044d69b-79e4-4c01-ba8d-54dc9b2b5344": {"node_ids": ["9a80425e-b935-4e44-afdf-19a4e5dd38ff"], "metadata": {"page_label": "38", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "9fd76565-4838-47a2-b5d9-5456404e90ec": {"node_ids": ["d004d05b-f1f4-498b-b607-34807db266c0"], "metadata": {"page_label": "39", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "fabeec9d-2338-40e0-a225-fefcce99d653": {"node_ids": ["147375e1-01ab-4f3b-928c-0dd0cd498848"], "metadata": {"page_label": "40", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "c8c33d70-c371-4585-a2a8-0976f30df25d": {"node_ids": ["7cc3d689-eb5c-438b-b73b-1b8755c0548c"], "metadata": {"page_label": "41", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "a86f8220-3dab-4199-be3d-8424e3513c4b": {"node_ids": ["cf16469d-c0d5-4931-94fd-98511ea394f9"], "metadata": {"page_label": "42", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "8815866e-1bf3-408f-9986-b33971230408": {"node_ids": ["7ad10305-968c-43e1-abd8-00141bfef357"], "metadata": {"page_label": "43", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "84d4b50b-54d0-4996-b404-02ea00246ff0": {"node_ids": ["1654df9d-0b7e-4b3a-88b7-a080f4d538a5"], "metadata": {"page_label": "44", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "7b6cc3af-2db6-4d6b-9132-b293473ef57a": {"node_ids": ["3b539da9-ddb6-45c4-9b06-402122f7f301"], "metadata": {"page_label": "45", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "0b16fabe-45b6-4a2f-9587-8d3de272b731": {"node_ids": ["ed18d5eb-0baa-4af8-96f4-7bc235075cda"], "metadata": {"page_label": "46", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "59d2181e-2ca4-4409-b7c4-7bcf7380dbef": {"node_ids": ["969a087c-090e-4ebb-a8d2-2a994eb01e9f"], "metadata": {"page_label": "47", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "fc2d4e46-1c1f-416c-9713-df4dccd191e1": {"node_ids": ["f86265ef-7e8c-4d4f-aed1-535b66265922"], "metadata": {"page_label": "48", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "65693c29-85ed-4324-aaa0-cfe2b8c03255": {"node_ids": ["3d46d7b7-a148-4e6d-85eb-0ac4bb117fb7"], "metadata": {"page_label": "49", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "8a7d1e87-f736-43ec-9deb-2e2490717e64": {"node_ids": ["f4c154d2-0b9e-4ec2-adde-4e84b1b55aef"], "metadata": {"page_label": "50", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "ff79215d-d72a-4c0b-b6c9-f8d9987d5964": {"node_ids": ["90983f3d-d224-41f3-bf52-787b85bf483b"], "metadata": {"page_label": "51", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "0bf54a36-cbf2-4c30-867a-2ffb9a37763e": {"node_ids": ["81fb0560-3b71-4e9a-b762-6c6850b894ac"], "metadata": {"page_label": "52", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "baec49e7-18e2-4a80-851c-396e3b97dc16": {"node_ids": ["dc004d94-8c54-47dd-8265-4833a83e0a6d"], "metadata": {"page_label": "53", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "90457503-0ddb-4f26-9f67-ad277e4c7133": {"node_ids": ["4574737b-433c-4561-ac5b-2ed4be5a4c39"], "metadata": {"page_label": "54", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "f7b40f8b-aed5-4453-8e75-e7e5fcab50af": {"node_ids": ["05ae9233-74b1-4b17-ae8c-f506b6206ce2"], "metadata": {"page_label": "55", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "58b0cac7-3727-4757-bb04-6afe22f82411": {"node_ids": ["625d2351-b4cd-40f0-9fd5-32f94ccd25b1"], "metadata": {"page_label": "56", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "c0b6c019-8fae-456c-9911-cde7953e0564": {"node_ids": ["e537c4b7-2f4b-47f6-b7db-6d2d8fca25cc"], "metadata": {"page_label": "57", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "ee9182eb-076e-47e1-a2d8-9189f5a7efa7": {"node_ids": ["e9a6f0a1-0da7-4c61-9595-7f03cbda8f91"], "metadata": {"page_label": "58", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "4de6c00c-6f0c-4b2d-8687-f62e1fe794d9": {"node_ids": ["d0150f0d-6bd7-41a5-8096-5f9b542dbcf2"], "metadata": {"page_label": "59", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "f7d41a28-952c-4f6d-a934-097160d61b6e": {"node_ids": ["530967e6-a244-4588-8eea-f351ea4476d0"], "metadata": {"page_label": "60", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "2cce1757-e0da-4279-8c8d-6b5b36c660c3": {"node_ids": ["bf2d87e9-75a5-4f6b-90f0-1308373d9b89"], "metadata": {"page_label": "61", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "dc3cf000-5124-4e1e-ac7a-58aa6c5e3f60": {"node_ids": ["2c3cafed-7b42-46bf-8e58-65339d4f3d39"], "metadata": {"page_label": "62", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "63a27588-5d14-4fc6-ac18-24e6da22e53d": {"node_ids": ["bdcff47e-8656-4c8f-89d2-7ff10e9b2fe9"], "metadata": {"page_label": "63", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "60ea04fd-3057-49c1-b1cf-7ba1cbcd3b24": {"node_ids": ["1859e123-b79f-48d1-9402-5bf2957a0bfd"], "metadata": {"page_label": "64", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "8f1d7a38-700f-41c9-a716-7831eb41507f": {"node_ids": ["f27522a2-854c-4246-a57e-a899f1b74b72"], "metadata": {"page_label": "65", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "ba81823e-442d-4811-9439-8aba19ef982c": {"node_ids": ["369cc6e1-8726-4be7-9936-a03b83c70f49"], "metadata": {"page_label": "66", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "758ae0da-c44c-405d-b2b5-a2c010513a86": {"node_ids": ["006f567d-140b-4b42-b80e-19d13d626cf1"], "metadata": {"page_label": "67", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "585d4e5a-127a-41ed-ac59-669e2dcac938": {"node_ids": ["73730333-e2c6-49f6-9622-d959a8827487"], "metadata": {"page_label": "68", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "ce13a58e-401f-458b-ac74-19ba21a742fe": {"node_ids": ["48d9505d-5e1b-490b-ac23-960878aff608"], "metadata": {"page_label": "69", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "29ad55c7-1f0c-4b0e-b915-b79f19e83500": {"node_ids": ["aad75516-a562-4b2a-bfad-958b2909599a"], "metadata": {"page_label": "70", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "8df8adcc-526f-4a76-b1df-8083d47a5fa5": {"node_ids": ["304578a0-98bb-4f08-8e37-a010c5e7fbc7"], "metadata": {"page_label": "71", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "9035192a-eafa-4295-8c82-0f5c57a625d4": {"node_ids": ["494707a4-9bf9-4808-9bed-abd1e398de6d"], "metadata": {"page_label": "72", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "ea3be9af-fcff-4e9e-bd60-c87e5255a430": {"node_ids": ["4e955642-d956-43c9-a52a-5d20243a1b00"], "metadata": {"page_label": "73", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "fe011409-62f4-4075-90e1-a6f359097cc0": {"node_ids": ["2849e971-65ad-49f4-854b-8827ad8ccb0a"], "metadata": {"page_label": "74", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "d8a0c528-e81e-4b90-a753-5b272155466e": {"node_ids": ["5c7004ab-6969-4aca-8f5d-492318504e1b"], "metadata": {"page_label": "75", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "e0ff4073-d76b-4ed4-9b21-4b217b40629b": {"node_ids": ["a125adbd-bc5f-449e-a81f-f90a3e375657"], "metadata": {"page_label": "76", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "b3d068b8-3716-477e-be43-8d8bf2e0fb75": {"node_ids": ["377bed8a-4ff6-405d-b93d-6775e4798460"], "metadata": {"page_label": "77", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "baf9c05d-f03f-477e-839f-7925f083da06": {"node_ids": ["a243643c-d711-4159-a13d-0fd5344a682c"], "metadata": {"page_label": "78", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "44350c88-35ea-4a41-8837-8dd395621e55": {"node_ids": ["ba45be37-f19a-413d-b85c-370232949bca"], "metadata": {"page_label": "79", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "f6734b55-1ac0-4818-8d65-87b2b6dec518": {"node_ids": ["0c1ccf39-19d0-4ed0-bec0-a07af63c3c74"], "metadata": {"page_label": "80", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "1e36866c-4de8-4008-ab5b-d59e31a4847e": {"node_ids": ["9e4b0672-1dfa-439a-8f9e-f7063e34b2ea"], "metadata": {"page_label": "81", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "2ac45f33-85b1-4fb9-9650-268e119740ca": {"node_ids": ["b94d7c7c-7104-42eb-9a5f-b2cc88020d17"], "metadata": {"page_label": "82", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "0292f787-6f6e-4b9e-94ef-5d094eef1de0": {"node_ids": ["dc904998-04b4-4753-a2f6-915e78a5b1d0"], "metadata": {"page_label": "83", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "07b28c11-2247-47cc-a650-3ecfc0336aa3": {"node_ids": ["e06eced7-9d3c-4d3a-8000-8f8273e457ae"], "metadata": {"page_label": "84", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "a62716c8-d963-4c54-8ca2-47e8da94c68a": {"node_ids": ["4b02121e-9475-42bb-b950-8aa5d54387da"], "metadata": {"page_label": "85", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "c37ede87-24dc-4229-ab1e-0e6e4ebe26a9": {"node_ids": ["e66940af-a119-439c-a472-6f0bc75927e3"], "metadata": {"page_label": "86", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "151b4539-58e2-463a-b19c-d62774b99843": {"node_ids": ["673527ac-7a26-44cb-b26e-f04a24eda70f"], "metadata": {"page_label": "87", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "21342a23-043e-411a-8b55-ec4d2d104469": {"node_ids": ["9caceba4-9165-416e-ad42-20a50636591d"], "metadata": {"page_label": "88", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "32bd74b9-05cb-46d6-aad3-0d2d928f966f": {"node_ids": ["8cbd6366-e00b-4b7d-ad81-dbc9b97596f4"], "metadata": {"page_label": "89", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "fe94d808-06e1-4216-b857-d256addfc49f": {"node_ids": ["8d54994c-e013-4cbe-a559-f1c4783b2de1"], "metadata": {"page_label": "90", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "6e6f8349-5b27-4d94-a335-42cd4607a322": {"node_ids": ["798703ea-95b7-4d6d-aca2-dbbd981500d2"], "metadata": {"page_label": "91", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "5d4fc4dc-1183-46ff-ad18-e096b41f03d1": {"node_ids": ["05ffd11f-1436-4949-8125-706a2683aa57"], "metadata": {"page_label": "92", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "58478417-a4bf-4920-b71f-5e17aa048bb4": {"node_ids": ["627ab32c-8325-4ab5-8252-6beb113129a2"], "metadata": {"page_label": "93", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "47ad960e-4f55-4d14-962c-d5ed62a0518c": {"node_ids": ["ca73d322-f41e-47c9-99c2-f8aa6952c39c"], "metadata": {"page_label": "94", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}, "3d301977-6b29-4321-a59a-fd6dd6a71cf6": {"node_ids": ["a9dae530-63e8-4a45-9d35-00aa0bf964e9"], "metadata": {"page_label": "95", "file_name": "ML FINAL (1).pdf", "file_path": "d:\\Personal projects\\QA_With_Doc_using_llama_index_gemini\\Experiments\\..\\Data\\ML FINAL (1).pdf", "file_type": "application/pdf", "file_size": 3006189, "creation_date": "2025-01-19", "last_modified_date": "2025-01-19"}}}}